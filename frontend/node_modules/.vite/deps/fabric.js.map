{
  "version": 3,
  "sources": ["browser-external:jsdom", "browser-external:jsdom/lib/jsdom/living/generated/utils", "browser-external:jsdom/lib/jsdom/utils", "../../fabric/dist/fabric.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"jsdom\" has been externalized for browser compatibility. Cannot access \"jsdom.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"jsdom/lib/jsdom/living/generated/utils\" has been externalized for browser compatibility. Cannot access \"jsdom/lib/jsdom/living/generated/utils.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"jsdom/lib/jsdom/utils\" has been externalized for browser compatibility. Cannot access \"jsdom/lib/jsdom/utils.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/* build: `node build.js modules=ALL exclude=gestures,accessors,erasing requirejs minifier=uglifyjs` */\r\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\r\n\r\nvar fabric = fabric || { version: '4.6.0' };\r\nif (typeof exports !== 'undefined') {\r\n  exports.fabric = fabric;\r\n}\r\n/* _AMD_START_ */\r\nelse if (typeof define === 'function' && define.amd) {\r\n  define([], function() { return fabric; });\r\n}\r\n/* _AMD_END_ */\r\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\r\n    fabric.document = document;\r\n  }\r\n  else {\r\n    fabric.document = document.implementation.createHTMLDocument('');\r\n  }\r\n  fabric.window = window;\r\n}\r\nelse {\r\n  // assume we're running under node.js when document/window are not present\r\n  var jsdom = require('jsdom');\r\n  var virtualWindow = new jsdom.JSDOM(\r\n    decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\r\n    {\r\n      features: {\r\n        FetchExternalResources: ['img']\r\n      },\r\n      resources: 'usable'\r\n    }).window;\r\n  fabric.document = virtualWindow.document;\r\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\r\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\r\n  fabric.window = virtualWindow;\r\n  DOMParser = fabric.window.DOMParser;\r\n}\r\n\r\n/**\r\n * True when in environment that supports touch events\r\n * @type boolean\r\n */\r\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\r\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\r\n\r\n/**\r\n * True when in environment that's probably Node.js\r\n * @type boolean\r\n */\r\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\r\n                      typeof window === 'undefined';\r\n\r\n/* _FROM_SVG_START_ */\r\n/**\r\n * Attributes parsed from all SVG elements\r\n * @type array\r\n */\r\nfabric.SHARED_ATTRIBUTES = [\r\n  'display',\r\n  'transform',\r\n  'fill', 'fill-opacity', 'fill-rule',\r\n  'opacity',\r\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\r\n  'stroke-linejoin', 'stroke-miterlimit',\r\n  'stroke-opacity', 'stroke-width',\r\n  'id', 'paint-order', 'vector-effect',\r\n  'instantiated_by_use', 'clip-path',\r\n];\r\n/* _FROM_SVG_END_ */\r\n\r\n/**\r\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\r\n */\r\nfabric.DPI = 96;\r\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\r\nfabric.commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)';\r\nfabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\r\nfabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\r\nfabric.fontPaths = { };\r\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\r\nfabric.svgNS = 'http://www.w3.org/2000/svg';\r\n\r\n/**\r\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\r\n * @since 1.7.14\r\n * @type Number\r\n * @default\r\n */\r\nfabric.perfLimitSizeTotal = 2097152;\r\n\r\n/**\r\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\r\n * @since 1.7.14\r\n * @type Number\r\n * @default\r\n */\r\nfabric.maxCacheSideLimit = 4096;\r\n\r\n/**\r\n * Lowest pixel limit for cache canvases, set at 256PX\r\n * @since 1.7.14\r\n * @type Number\r\n * @default\r\n */\r\nfabric.minCacheSideLimit = 256;\r\n\r\n/**\r\n * Cache Object for widths of chars in text rendering.\r\n */\r\nfabric.charWidthsCache = { };\r\n\r\n/**\r\n * if webgl is enabled and available, textureSize will determine the size\r\n * of the canvas backend\r\n * @since 2.0.0\r\n * @type Number\r\n * @default\r\n */\r\nfabric.textureSize = 2048;\r\n\r\n/**\r\n * When 'true', style information is not retained when copy/pasting text, making\r\n * pasted text use destination style.\r\n * Defaults to 'false'.\r\n * @type Boolean\r\n * @default\r\n */\r\nfabric.disableStyleCopyPaste = false;\r\n\r\n/**\r\n * Enable webgl for filtering picture is available\r\n * A filtering backend will be initialized, this will both take memory and\r\n * time since a default 2048x2048 canvas will be created for the gl context\r\n * @since 2.0.0\r\n * @type Boolean\r\n * @default\r\n */\r\nfabric.enableGLFiltering = true;\r\n\r\n/**\r\n * Device Pixel Ratio\r\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\r\n */\r\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\r\n                          fabric.window.webkitDevicePixelRatio ||\r\n                          fabric.window.mozDevicePixelRatio ||\r\n                          1;\r\n/**\r\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\r\n * which is unitless and not rendered equally across browsers.\r\n *\r\n * Values that work quite well (as of October 2017) are:\r\n * - Chrome: 1.5\r\n * - Edge: 1.75\r\n * - Firefox: 0.9\r\n * - Safari: 0.95\r\n *\r\n * @since 2.0.0\r\n * @type Number\r\n * @default 1\r\n */\r\nfabric.browserShadowBlurConstant = 1;\r\n\r\n/**\r\n * This object contains the result of arc to bezier conversion for faster retrieving if the same arc needs to be converted again.\r\n * It was an internal variable, is accessible since version 2.3.4\r\n */\r\nfabric.arcToSegmentsCache = { };\r\n\r\n/**\r\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\r\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\r\n * you do not get any speed benefit and you get a big object in memory.\r\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\r\n * can eventually clear it.\r\n * It was an internal variable, is accessible since version 2.3.4\r\n */\r\nfabric.boundsOfCurveCache = { };\r\n\r\n/**\r\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\r\n * @default true\r\n */\r\nfabric.cachesBoundsOfCurve = true;\r\n\r\n/**\r\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\r\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\r\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\r\n * @type Boolean\r\n * @default false\r\n */\r\nfabric.forceGLPutImageData = false;\r\n\r\nfabric.initFilterBackend = function() {\r\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\r\n    console.log('max texture size: ' + fabric.maxTextureSize);\r\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\r\n  }\r\n  else if (fabric.Canvas2dFilterBackend) {\r\n    return (new fabric.Canvas2dFilterBackend());\r\n  }\r\n};\r\n\r\n\r\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\r\n  window.fabric = fabric;\r\n}\r\n\r\n\r\n(function() {\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} eventName\r\n   * @param {Function} handler\r\n   */\r\n  function _removeEventListener(eventName, handler) {\r\n    if (!this.__eventListeners[eventName]) {\r\n      return;\r\n    }\r\n    var eventListener = this.__eventListeners[eventName];\r\n    if (handler) {\r\n      eventListener[eventListener.indexOf(handler)] = false;\r\n    }\r\n    else {\r\n      fabric.util.array.fill(eventListener, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Observes specified event\r\n   * @memberOf fabric.Observable\r\n   * @alias on\r\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\r\n   * @return {Self} thisArg\r\n   * @chainable\r\n   */\r\n  function on(eventName, handler) {\r\n    if (!this.__eventListeners) {\r\n      this.__eventListeners = { };\r\n    }\r\n    // one object with key/value pairs was passed\r\n    if (arguments.length === 1) {\r\n      for (var prop in eventName) {\r\n        this.on(prop, eventName[prop]);\r\n      }\r\n    }\r\n    else {\r\n      if (!this.__eventListeners[eventName]) {\r\n        this.__eventListeners[eventName] = [];\r\n      }\r\n      this.__eventListeners[eventName].push(handler);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  function _once(eventName, handler) {\r\n    var _handler = function () {\r\n      handler.apply(this, arguments);\r\n      this.off(eventName, _handler);\r\n    }.bind(this);\r\n    this.on(eventName, _handler);\r\n  }\r\n\r\n  function once(eventName, handler) {\r\n    // one object with key/value pairs was passed\r\n    if (arguments.length === 1) {\r\n      for (var prop in eventName) {\r\n        _once.call(this, prop, eventName[prop]);\r\n      }\r\n    }\r\n    else {\r\n      _once.call(this, eventName, handler);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Stops event observing for a particular event handler. Calling this method\r\n   * without arguments removes all handlers for all events\r\n   * @memberOf fabric.Observable\r\n   * @alias off\r\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n   * @param {Function} handler Function to be deleted from EventListeners\r\n   * @return {Self} thisArg\r\n   * @chainable\r\n   */\r\n  function off(eventName, handler) {\r\n    if (!this.__eventListeners) {\r\n      return this;\r\n    }\r\n\r\n    // remove all key/value pairs (event name -> event handler)\r\n    if (arguments.length === 0) {\r\n      for (eventName in this.__eventListeners) {\r\n        _removeEventListener.call(this, eventName);\r\n      }\r\n    }\r\n    // one object with key/value pairs was passed\r\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\r\n      for (var prop in eventName) {\r\n        _removeEventListener.call(this, prop, eventName[prop]);\r\n      }\r\n    }\r\n    else {\r\n      _removeEventListener.call(this, eventName, handler);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Fires event with an optional options object\r\n   * @memberOf fabric.Observable\r\n   * @param {String} eventName Event name to fire\r\n   * @param {Object} [options] Options object\r\n   * @return {Self} thisArg\r\n   * @chainable\r\n   */\r\n  function fire(eventName, options) {\r\n    if (!this.__eventListeners) {\r\n      return this;\r\n    }\r\n\r\n    var listenersForEvent = this.__eventListeners[eventName];\r\n    if (!listenersForEvent) {\r\n      return this;\r\n    }\r\n\r\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\r\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\r\n    }\r\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\r\n      return value !== false;\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @namespace fabric.Observable\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\r\n   * @see {@link http://fabricjs.com/events|Events demo}\r\n   */\r\n  fabric.Observable = {\r\n    fire: fire,\r\n    on: on,\r\n    once: once,\r\n    off: off,\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @namespace fabric.Collection\r\n */\r\nfabric.Collection = {\r\n\r\n  _objects: [],\r\n\r\n  /**\r\n   * Adds objects to collection, Canvas or Group, then renders canvas\r\n   * (if `renderOnAddRemove` is not `false`).\r\n   * in case of Group no changes to bounding box are made.\r\n   * Objects should be instances of (or inherit from) fabric.Object\r\n   * Use of this function is highly discouraged for groups.\r\n   * you can add a bunch of objects with the add method but then you NEED\r\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n   * @param {...fabric.Object} object Zero or more fabric instances\r\n   * @return {Self} thisArg\r\n   * @chainable\r\n   */\r\n  add: function () {\r\n    this._objects.push.apply(this._objects, arguments);\r\n    if (this._onObjectAdded) {\r\n      for (var i = 0, length = arguments.length; i < length; i++) {\r\n        this._onObjectAdded(arguments[i]);\r\n      }\r\n    }\r\n    this.renderOnAddRemove && this.requestRenderAll();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n   * An object should be an instance of (or inherit from) fabric.Object\r\n   * Use of this function is highly discouraged for groups.\r\n   * you can add a bunch of objects with the insertAt method but then you NEED\r\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\r\n   * @param {Object} object Object to insert\r\n   * @param {Number} index Index to insert object at\r\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\r\n   * @return {Self} thisArg\r\n   * @chainable\r\n   */\r\n  insertAt: function (object, index, nonSplicing) {\r\n    var objects = this._objects;\r\n    if (nonSplicing) {\r\n      objects[index] = object;\r\n    }\r\n    else {\r\n      objects.splice(index, 0, object);\r\n    }\r\n    this._onObjectAdded && this._onObjectAdded(object);\r\n    this.renderOnAddRemove && this.requestRenderAll();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n   * @param {...fabric.Object} object Zero or more fabric instances\r\n   * @return {Self} thisArg\r\n   * @chainable\r\n   */\r\n  remove: function() {\r\n    var objects = this._objects,\r\n        index, somethingRemoved = false;\r\n\r\n    for (var i = 0, length = arguments.length; i < length; i++) {\r\n      index = objects.indexOf(arguments[i]);\r\n\r\n      // only call onObjectRemoved if an object was actually removed\r\n      if (index !== -1) {\r\n        somethingRemoved = true;\r\n        objects.splice(index, 1);\r\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\r\n      }\r\n    }\r\n\r\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Executes given function for each object in this group\r\n   * @param {Function} callback\r\n   *                   Callback invoked with current object as first argument,\r\n   *                   index - as second and an array of all objects - as third.\r\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\r\n   *                   when no `context` argument is given\r\n   *\r\n   * @param {Object} context Context (aka thisObject)\r\n   * @return {Self} thisArg\r\n   * @chainable\r\n   */\r\n  forEachObject: function(callback, context) {\r\n    var objects = this.getObjects();\r\n    for (var i = 0, len = objects.length; i < len; i++) {\r\n      callback.call(context, objects[i], i, objects);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Returns an array of children objects of this instance\r\n   * Type parameter introduced in 1.3.10\r\n   * since 2.3.5 this method return always a COPY of the array;\r\n   * @param {String} [type] When specified, only objects of this type are returned\r\n   * @return {Array}\r\n   */\r\n  getObjects: function(type) {\r\n    if (typeof type === 'undefined') {\r\n      return this._objects.concat();\r\n    }\r\n    return this._objects.filter(function(o) {\r\n      return o.type === type;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Returns object at specified index\r\n   * @param {Number} index\r\n   * @return {Self} thisArg\r\n   */\r\n  item: function (index) {\r\n    return this._objects[index];\r\n  },\r\n\r\n  /**\r\n   * Returns true if collection contains no objects\r\n   * @return {Boolean} true if collection is empty\r\n   */\r\n  isEmpty: function () {\r\n    return this._objects.length === 0;\r\n  },\r\n\r\n  /**\r\n   * Returns a size of a collection (i.e: length of an array containing its objects)\r\n   * @return {Number} Collection size\r\n   */\r\n  size: function() {\r\n    return this._objects.length;\r\n  },\r\n\r\n  /**\r\n   * Returns true if collection contains an object\r\n   * @param {Object} object Object to check against\r\n   * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\r\n   * @return {Boolean} `true` if collection contains an object\r\n   */\r\n  contains: function (object, deep) {\r\n    if (this._objects.indexOf(object) > -1) {\r\n      return true;\r\n    }\r\n    else if (deep) {\r\n      return this._objects.some(function (obj) {\r\n        return typeof obj.contains === 'function' && obj.contains(object, true);\r\n      });\r\n    }\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Returns number representation of a collection complexity\r\n   * @return {Number} complexity\r\n   */\r\n  complexity: function () {\r\n    return this._objects.reduce(function (memo, current) {\r\n      memo += current.complexity ? current.complexity() : 0;\r\n      return memo;\r\n    }, 0);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @namespace fabric.CommonMethods\r\n */\r\nfabric.CommonMethods = {\r\n\r\n  /**\r\n   * Sets object's properties from options\r\n   * @param {Object} [options] Options object\r\n   */\r\n  _setOptions: function(options) {\r\n    for (var prop in options) {\r\n      this.set(prop, options[prop]);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} [filler] Options object\r\n   * @param {String} [property] property to set the Gradient to\r\n   */\r\n  _initGradient: function(filler, property) {\r\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\r\n      this.set(property, new fabric.Gradient(filler));\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} [filler] Options object\r\n   * @param {String} [property] property to set the Pattern to\r\n   * @param {Function} [callback] callback to invoke after pattern load\r\n   */\r\n  _initPattern: function(filler, property, callback) {\r\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\r\n      this.set(property, new fabric.Pattern(filler, callback));\r\n    }\r\n    else {\r\n      callback && callback();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setObject: function(obj) {\r\n    for (var prop in obj) {\r\n      this._set(prop, obj[prop]);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  set: function(key, value) {\r\n    if (typeof key === 'object') {\r\n      this._setObject(key);\r\n    }\r\n    else {\r\n      this._set(key, value);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  _set: function(key, value) {\r\n    this[key] = value;\r\n  },\r\n\r\n  /**\r\n   * Toggles specified property from `true` to `false` or from `false` to `true`\r\n   * @param {String} property Property to toggle\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  toggle: function(property) {\r\n    var value = this.get(property);\r\n    if (typeof value === 'boolean') {\r\n      this.set(property, !value);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Basic getter\r\n   * @param {String} property Property name\r\n   * @return {*} value of a property\r\n   */\r\n  get: function(property) {\r\n    return this[property];\r\n  }\r\n};\r\n\r\n\r\n(function(global) {\r\n\r\n  var sqrt = Math.sqrt,\r\n      atan2 = Math.atan2,\r\n      pow = Math.pow,\r\n      PiBy180 = Math.PI / 180,\r\n      PiBy2 = Math.PI / 2;\r\n\r\n  /**\r\n   * @namespace fabric.util\r\n   */\r\n  fabric.util = {\r\n\r\n    /**\r\n     * Calculate the cos of an angle, avoiding returning floats for known results\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Number} angle the angle in radians or in degree\r\n     * @return {Number}\r\n     */\r\n    cos: function(angle) {\r\n      if (angle === 0) { return 1; }\r\n      if (angle < 0) {\r\n        // cos(a) = cos(-a)\r\n        angle = -angle;\r\n      }\r\n      var angleSlice = angle / PiBy2;\r\n      switch (angleSlice) {\r\n        case 1: case 3: return 0;\r\n        case 2: return -1;\r\n      }\r\n      return Math.cos(angle);\r\n    },\r\n\r\n    /**\r\n     * Calculate the sin of an angle, avoiding returning floats for known results\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Number} angle the angle in radians or in degree\r\n     * @return {Number}\r\n     */\r\n    sin: function(angle) {\r\n      if (angle === 0) { return 0; }\r\n      var angleSlice = angle / PiBy2, sign = 1;\r\n      if (angle < 0) {\r\n        // sin(-a) = -sin(a)\r\n        sign = -1;\r\n      }\r\n      switch (angleSlice) {\r\n        case 1: return sign;\r\n        case 2: return 0;\r\n        case 3: return -sign;\r\n      }\r\n      return Math.sin(angle);\r\n    },\r\n\r\n    /**\r\n     * Removes value from an array.\r\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Array} array\r\n     * @param {*} value\r\n     * @return {Array} original array\r\n     */\r\n    removeFromArray: function(array, value) {\r\n      var idx = array.indexOf(value);\r\n      if (idx !== -1) {\r\n        array.splice(idx, 1);\r\n      }\r\n      return array;\r\n    },\r\n\r\n    /**\r\n     * Returns random number between 2 specified ones.\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Number} min lower limit\r\n     * @param {Number} max upper limit\r\n     * @return {Number} random value (between min and max)\r\n     */\r\n    getRandomInt: function(min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    },\r\n\r\n    /**\r\n     * Transforms degrees to radians.\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Number} degrees value in degrees\r\n     * @return {Number} value in radians\r\n     */\r\n    degreesToRadians: function(degrees) {\r\n      return degrees * PiBy180;\r\n    },\r\n\r\n    /**\r\n     * Transforms radians to degrees.\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Number} radians value in radians\r\n     * @return {Number} value in degrees\r\n     */\r\n    radiansToDegrees: function(radians) {\r\n      return radians / PiBy180;\r\n    },\r\n\r\n    /**\r\n     * Rotates `point` around `origin` with `radians`\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {fabric.Point} point The point to rotate\r\n     * @param {fabric.Point} origin The origin of the rotation\r\n     * @param {Number} radians The radians of the angle for the rotation\r\n     * @return {fabric.Point} The new rotated point\r\n     */\r\n    rotatePoint: function(point, origin, radians) {\r\n      var newPoint = new fabric.Point(point.x - origin.x, point.y - origin.y),\r\n          v = fabric.util.rotateVector(newPoint, radians);\r\n      return new fabric.Point(v.x, v.y).addEquals(origin);\r\n    },\r\n\r\n    /**\r\n     * Rotates `vector` with `radians`\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Object} vector The vector to rotate (x and y)\r\n     * @param {Number} radians The radians of the angle for the rotation\r\n     * @return {Object} The new rotated point\r\n     */\r\n    rotateVector: function(vector, radians) {\r\n      var sin = fabric.util.sin(radians),\r\n          cos = fabric.util.cos(radians),\r\n          rx = vector.x * cos - vector.y * sin,\r\n          ry = vector.x * sin + vector.y * cos;\r\n      return {\r\n        x: rx,\r\n        y: ry\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Apply transform t to point p\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {fabric.Point} p The point to transform\r\n     * @param  {Array} t The transform\r\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\r\n     * @return {fabric.Point} The transformed point\r\n     */\r\n    transformPoint: function(p, t, ignoreOffset) {\r\n      if (ignoreOffset) {\r\n        return new fabric.Point(\r\n          t[0] * p.x + t[2] * p.y,\r\n          t[1] * p.x + t[3] * p.y\r\n        );\r\n      }\r\n      return new fabric.Point(\r\n        t[0] * p.x + t[2] * p.y + t[4],\r\n        t[1] * p.x + t[3] * p.y + t[5]\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\r\n     * @param {Array} points 4 points array\r\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\r\n     * @return {Object} Object with left, top, width, height properties\r\n     */\r\n    makeBoundingBoxFromPoints: function(points, transform) {\r\n      if (transform) {\r\n        for (var i = 0; i < points.length; i++) {\r\n          points[i] = fabric.util.transformPoint(points[i], transform);\r\n        }\r\n      }\r\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\r\n          minX = fabric.util.array.min(xPoints),\r\n          maxX = fabric.util.array.max(xPoints),\r\n          width = maxX - minX,\r\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\r\n          minY = fabric.util.array.min(yPoints),\r\n          maxY = fabric.util.array.max(yPoints),\r\n          height = maxY - minY;\r\n\r\n      return {\r\n        left: minX,\r\n        top: minY,\r\n        width: width,\r\n        height: height\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Invert transformation t\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Array} t The transform\r\n     * @return {Array} The inverted transform\r\n     */\r\n    invertTransform: function(t) {\r\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\r\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\r\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\r\n      r[4] = -o.x;\r\n      r[5] = -o.y;\r\n      return r;\r\n    },\r\n\r\n    /**\r\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Number|String} number number to operate on\r\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\r\n     * @return {Number}\r\n     */\r\n    toFixed: function(number, fractionDigits) {\r\n      return parseFloat(Number(number).toFixed(fractionDigits));\r\n    },\r\n\r\n    /**\r\n     * Converts from attribute value to pixel value if applicable.\r\n     * Returns converted pixels or original value not converted.\r\n     * @param {Number|String} value number to operate on\r\n     * @param {Number} fontSize\r\n     * @return {Number|String}\r\n     */\r\n    parseUnit: function(value, fontSize) {\r\n      var unit = /\\D{0,2}$/.exec(value),\r\n          number = parseFloat(value);\r\n      if (!fontSize) {\r\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n      }\r\n      switch (unit[0]) {\r\n        case 'mm':\r\n          return number * fabric.DPI / 25.4;\r\n\r\n        case 'cm':\r\n          return number * fabric.DPI / 2.54;\r\n\r\n        case 'in':\r\n          return number * fabric.DPI;\r\n\r\n        case 'pt':\r\n          return number * fabric.DPI / 72; // or * 4 / 3\r\n\r\n        case 'pc':\r\n          return number * fabric.DPI / 72 * 12; // or * 16\r\n\r\n        case 'em':\r\n          return number * fontSize;\r\n\r\n        default:\r\n          return number;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Function which always returns `false`.\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @return {Boolean}\r\n     */\r\n    falseFunction: function() {\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Returns klass \"Class\" object of given namespace\r\n     * @memberOf fabric.util\r\n     * @param {String} type Type of object (eg. 'circle')\r\n     * @param {String} namespace Namespace to get klass \"Class\" object from\r\n     * @return {Object} klass \"Class\"\r\n     */\r\n    getKlass: function(type, namespace) {\r\n      // capitalize first letter only\r\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\r\n      return fabric.util.resolveNamespace(namespace)[type];\r\n    },\r\n\r\n    /**\r\n     * Returns array of attributes for given svg that fabric parses\r\n     * @memberOf fabric.util\r\n     * @param {String} type Type of svg element (eg. 'circle')\r\n     * @return {Array} string names of supported attributes\r\n     */\r\n    getSvgAttributes: function(type) {\r\n      var attributes = [\r\n        'instantiated_by_use',\r\n        'style',\r\n        'id',\r\n        'class'\r\n      ];\r\n      switch (type) {\r\n        case 'linearGradient':\r\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\r\n          break;\r\n        case 'radialGradient':\r\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\r\n          break;\r\n        case 'stop':\r\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\r\n          break;\r\n      }\r\n      return attributes;\r\n    },\r\n\r\n    /**\r\n     * Returns object of given namespace\r\n     * @memberOf fabric.util\r\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\r\n     * @return {Object} Object for given namespace (default fabric)\r\n     */\r\n    resolveNamespace: function(namespace) {\r\n      if (!namespace) {\r\n        return fabric;\r\n      }\r\n\r\n      var parts = namespace.split('.'),\r\n          len = parts.length, i,\r\n          obj = global || fabric.window;\r\n\r\n      for (i = 0; i < len; ++i) {\r\n        obj = obj[parts[i]];\r\n      }\r\n\r\n      return obj;\r\n    },\r\n\r\n    /**\r\n     * Loads image element from given url and passes it to a callback\r\n     * @memberOf fabric.util\r\n     * @param {String} url URL representing an image\r\n     * @param {Function} callback Callback; invoked with loaded image\r\n     * @param {*} [context] Context to invoke callback in\r\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\r\n     */\r\n    loadImage: function(url, callback, context, crossOrigin) {\r\n      if (!url) {\r\n        callback && callback.call(context, url);\r\n        return;\r\n      }\r\n\r\n      var img = fabric.util.createImage();\r\n\r\n      /** @ignore */\r\n      var onLoadCallback = function () {\r\n        callback && callback.call(context, img, false);\r\n        img = img.onload = img.onerror = null;\r\n      };\r\n\r\n      img.onload = onLoadCallback;\r\n      /** @ignore */\r\n      img.onerror = function() {\r\n        fabric.log('Error loading ' + img.src);\r\n        callback && callback.call(context, null, true);\r\n        img = img.onload = img.onerror = null;\r\n      };\r\n\r\n      // data-urls appear to be buggy with crossOrigin\r\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\r\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\r\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\r\n      // crossOrigin null is the same as not set.\r\n      if (url.indexOf('data') !== 0 &&\r\n        crossOrigin !== undefined &&\r\n        crossOrigin !== null) {\r\n        img.crossOrigin = crossOrigin;\r\n      }\r\n\r\n      // IE10 / IE11-Fix: SVG contents from data: URI\r\n      // will only be available if the IMG is present\r\n      // in the DOM (and visible)\r\n      if (url.substring(0,14) === 'data:image/svg') {\r\n        img.onload = null;\r\n        fabric.util.loadImageInDom(img, onLoadCallback);\r\n      }\r\n\r\n      img.src = url;\r\n    },\r\n\r\n    /**\r\n     * Attaches SVG image with data: URL to the dom\r\n     * @memberOf fabric.util\r\n     * @param {Object} img Image object with data:image/svg src\r\n     * @param {Function} callback Callback; invoked with loaded image\r\n     * @return {Object} DOM element (div containing the SVG image)\r\n     */\r\n    loadImageInDom: function(img, onLoadCallback) {\r\n      var div = fabric.document.createElement('div');\r\n      div.style.width = div.style.height = '1px';\r\n      div.style.left = div.style.top = '-100%';\r\n      div.style.position = 'absolute';\r\n      div.appendChild(img);\r\n      fabric.document.querySelector('body').appendChild(div);\r\n      /**\r\n       * Wrap in function to:\r\n       *   1. Call existing callback\r\n       *   2. Cleanup DOM\r\n       */\r\n      img.onload = function () {\r\n        onLoadCallback();\r\n        div.parentNode.removeChild(div);\r\n        div = null;\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Creates corresponding fabric instances from their object representations\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Array} objects Objects to enliven\r\n     * @param {Function} callback Callback to invoke when all objects are created\r\n     * @param {String} namespace Namespace to get klass \"Class\" object from\r\n     * @param {Function} reviver Method for further parsing of object elements,\r\n     * called after each fabric object created.\r\n     */\r\n    enlivenObjects: function(objects, callback, namespace, reviver) {\r\n      objects = objects || [];\r\n\r\n      var enlivenedObjects = [],\r\n          numLoadedObjects = 0,\r\n          numTotalObjects = objects.length;\r\n\r\n      function onLoaded() {\r\n        if (++numLoadedObjects === numTotalObjects) {\r\n          callback && callback(enlivenedObjects.filter(function(obj) {\r\n            // filter out undefined objects (objects that gave error)\r\n            return obj;\r\n          }));\r\n        }\r\n      }\r\n\r\n      if (!numTotalObjects) {\r\n        callback && callback(enlivenedObjects);\r\n        return;\r\n      }\r\n\r\n      objects.forEach(function (o, index) {\r\n        // if sparse array\r\n        if (!o || !o.type) {\r\n          onLoaded();\r\n          return;\r\n        }\r\n        var klass = fabric.util.getKlass(o.type, namespace);\r\n        klass.fromObject(o, function (obj, error) {\r\n          error || (enlivenedObjects[index] = obj);\r\n          reviver && reviver(o, obj, error);\r\n          onLoaded();\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Create and wait for loading of patterns\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Array} patterns Objects to enliven\r\n     * @param {Function} callback Callback to invoke when all objects are created\r\n     * called after each fabric object created.\r\n     */\r\n    enlivenPatterns: function(patterns, callback) {\r\n      patterns = patterns || [];\r\n\r\n      function onLoaded() {\r\n        if (++numLoadedPatterns === numPatterns) {\r\n          callback && callback(enlivenedPatterns);\r\n        }\r\n      }\r\n\r\n      var enlivenedPatterns = [],\r\n          numLoadedPatterns = 0,\r\n          numPatterns = patterns.length;\r\n\r\n      if (!numPatterns) {\r\n        callback && callback(enlivenedPatterns);\r\n        return;\r\n      }\r\n\r\n      patterns.forEach(function (p, index) {\r\n        if (p && p.source) {\r\n          new fabric.Pattern(p, function(pattern) {\r\n            enlivenedPatterns[index] = pattern;\r\n            onLoaded();\r\n          });\r\n        }\r\n        else {\r\n          enlivenedPatterns[index] = p;\r\n          onLoaded();\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Groups SVG elements (usually those retrieved from SVG document)\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Array} elements SVG elements to group\r\n     * @param {Object} [options] Options object\r\n     * @param {String} path Value to set sourcePath to\r\n     * @return {fabric.Object|fabric.Group}\r\n     */\r\n    groupSVGElements: function(elements, options, path) {\r\n      var object;\r\n      if (elements && elements.length === 1) {\r\n        return elements[0];\r\n      }\r\n      if (options) {\r\n        if (options.width && options.height) {\r\n          options.centerPoint = {\r\n            x: options.width / 2,\r\n            y: options.height / 2\r\n          };\r\n        }\r\n        else {\r\n          delete options.width;\r\n          delete options.height;\r\n        }\r\n      }\r\n      object = new fabric.Group(elements, options);\r\n      if (typeof path !== 'undefined') {\r\n        object.sourcePath = path;\r\n      }\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Populates an object with properties of another object\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param {Object} source Source object\r\n     * @param {Object} destination Destination object\r\n     * @return {Array} properties Properties names to include\r\n     */\r\n    populateWithProperties: function(source, destination, properties) {\r\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\r\n        for (var i = 0, len = properties.length; i < len; i++) {\r\n          if (properties[i] in source) {\r\n            destination[properties[i]] = source[properties[i]];\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * WARNING: THIS WAS TO SUPPORT OLD BROWSERS. deprecated.\r\n     * WILL BE REMOVED IN FABRIC 5.0\r\n     * Draws a dashed line between two points\r\n     *\r\n     * This method is used to draw dashed line around selection area.\r\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx context\r\n     * @param {Number} x  start x coordinate\r\n     * @param {Number} y start y coordinate\r\n     * @param {Number} x2 end x coordinate\r\n     * @param {Number} y2 end y coordinate\r\n     * @param {Array} da dash array pattern\r\n     * @deprecated\r\n     */\r\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\r\n      var dx = x2 - x,\r\n          dy = y2 - y,\r\n          len = sqrt(dx * dx + dy * dy),\r\n          rot = atan2(dy, dx),\r\n          dc = da.length,\r\n          di = 0,\r\n          draw = true;\r\n\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n      ctx.moveTo(0, 0);\r\n      ctx.rotate(rot);\r\n\r\n      x = 0;\r\n      while (len > x) {\r\n        x += da[di++ % dc];\r\n        if (x > len) {\r\n          x = len;\r\n        }\r\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\r\n        draw = !draw;\r\n      }\r\n\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Creates canvas element\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @return {CanvasElement} initialized canvas element\r\n     */\r\n    createCanvasElement: function() {\r\n      return fabric.document.createElement('canvas');\r\n    },\r\n\r\n    /**\r\n     * Creates a canvas element that is a copy of another and is also painted\r\n     * @param {CanvasElement} canvas to copy size and content of\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @return {CanvasElement} initialized canvas element\r\n     */\r\n    copyCanvasElement: function(canvas) {\r\n      var newCanvas = fabric.util.createCanvasElement();\r\n      newCanvas.width = canvas.width;\r\n      newCanvas.height = canvas.height;\r\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\r\n      return newCanvas;\r\n    },\r\n\r\n    /**\r\n     * since 2.6.0 moved from canvas instance to utility.\r\n     * @param {CanvasElement} canvasEl to copy size and content of\r\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\r\n     * @param {Number} quality <= 1 and > 0\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @return {String} data url\r\n     */\r\n    toDataURL: function(canvasEl, format, quality) {\r\n      return canvasEl.toDataURL('image/' + format, quality);\r\n    },\r\n\r\n    /**\r\n     * Creates image element (works on client and node)\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @return {HTMLImageElement} HTML image element\r\n     */\r\n    createImage: function() {\r\n      return fabric.document.createElement('img');\r\n    },\r\n\r\n    /**\r\n     * Multiply matrix A by matrix B to nest transformations\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {Array} a First transformMatrix\r\n     * @param  {Array} b Second transformMatrix\r\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\r\n     * @return {Array} The product of the two transform matrices\r\n     */\r\n    multiplyTransformMatrices: function(a, b, is2x2) {\r\n      // Matrix multiply a * b\r\n      return [\r\n        a[0] * b[0] + a[2] * b[1],\r\n        a[1] * b[0] + a[3] * b[1],\r\n        a[0] * b[2] + a[2] * b[3],\r\n        a[1] * b[2] + a[3] * b[3],\r\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\r\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\r\n      ];\r\n    },\r\n\r\n    /**\r\n     * Decomposes standard 2x3 matrix into transform components\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {Array} a transformMatrix\r\n     * @return {Object} Components of transform\r\n     */\r\n    qrDecompose: function(a) {\r\n      var angle = atan2(a[1], a[0]),\r\n          denom = pow(a[0], 2) + pow(a[1], 2),\r\n          scaleX = sqrt(denom),\r\n          scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\r\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\r\n      return {\r\n        angle: angle / PiBy180,\r\n        scaleX: scaleX,\r\n        scaleY: scaleY,\r\n        skewX: skewX / PiBy180,\r\n        skewY: 0,\r\n        translateX: a[4],\r\n        translateY: a[5]\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns a transform matrix starting from an object of the same kind of\r\n     * the one returned from qrDecompose, useful also if you want to calculate some\r\n     * transformations from an object that is not enlived yet\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {Object} options\r\n     * @param  {Number} [options.angle] angle in degrees\r\n     * @return {Number[]} transform matrix\r\n     */\r\n    calcRotateMatrix: function(options) {\r\n      if (!options.angle) {\r\n        return fabric.iMatrix.concat();\r\n      }\r\n      var theta = fabric.util.degreesToRadians(options.angle),\r\n          cos = fabric.util.cos(theta),\r\n          sin = fabric.util.sin(theta);\r\n      return [cos, sin, -sin, cos, 0, 0];\r\n    },\r\n\r\n    /**\r\n     * Returns a transform matrix starting from an object of the same kind of\r\n     * the one returned from qrDecompose, useful also if you want to calculate some\r\n     * transformations from an object that is not enlived yet.\r\n     * is called DimensionsTransformMatrix because those properties are the one that influence\r\n     * the size of the resulting box of the object.\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {Object} options\r\n     * @param  {Number} [options.scaleX]\r\n     * @param  {Number} [options.scaleY]\r\n     * @param  {Boolean} [options.flipX]\r\n     * @param  {Boolean} [options.flipY]\r\n     * @param  {Number} [options.skewX]\r\n     * @param  {Number} [options.skewX]\r\n     * @return {Number[]} transform matrix\r\n     */\r\n    calcDimensionsMatrix: function(options) {\r\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\r\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\r\n          scaleMatrix = [\r\n            options.flipX ? -scaleX : scaleX,\r\n            0,\r\n            0,\r\n            options.flipY ? -scaleY : scaleY,\r\n            0,\r\n            0],\r\n          multiply = fabric.util.multiplyTransformMatrices,\r\n          degreesToRadians = fabric.util.degreesToRadians;\r\n      if (options.skewX) {\r\n        scaleMatrix = multiply(\r\n          scaleMatrix,\r\n          [1, 0, Math.tan(degreesToRadians(options.skewX)), 1],\r\n          true);\r\n      }\r\n      if (options.skewY) {\r\n        scaleMatrix = multiply(\r\n          scaleMatrix,\r\n          [1, Math.tan(degreesToRadians(options.skewY)), 0, 1],\r\n          true);\r\n      }\r\n      return scaleMatrix;\r\n    },\r\n\r\n    /**\r\n     * Returns a transform matrix starting from an object of the same kind of\r\n     * the one returned from qrDecompose, useful also if you want to calculate some\r\n     * transformations from an object that is not enlived yet\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {Object} options\r\n     * @param  {Number} [options.angle]\r\n     * @param  {Number} [options.scaleX]\r\n     * @param  {Number} [options.scaleY]\r\n     * @param  {Boolean} [options.flipX]\r\n     * @param  {Boolean} [options.flipY]\r\n     * @param  {Number} [options.skewX]\r\n     * @param  {Number} [options.skewX]\r\n     * @param  {Number} [options.translateX]\r\n     * @param  {Number} [options.translateY]\r\n     * @return {Number[]} transform matrix\r\n     */\r\n    composeMatrix: function(options) {\r\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\r\n          multiply = fabric.util.multiplyTransformMatrices;\r\n      if (options.angle) {\r\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\r\n      }\r\n      if (options.scaleX !== 1 || options.scaleY !== 1 ||\r\n          options.skewX || options.skewY || options.flipX || options.flipY) {\r\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\r\n      }\r\n      return matrix;\r\n    },\r\n\r\n    /**\r\n     * reset an object transform state to neutral. Top and left are not accounted for\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {fabric.Object} target object to transform\r\n     */\r\n    resetObjectTransform: function (target) {\r\n      target.scaleX = 1;\r\n      target.scaleY = 1;\r\n      target.skewX = 0;\r\n      target.skewY = 0;\r\n      target.flipX = false;\r\n      target.flipY = false;\r\n      target.rotate(0);\r\n    },\r\n\r\n    /**\r\n     * Extract Object transform values\r\n     * @static\r\n     * @memberOf fabric.util\r\n     * @param  {fabric.Object} target object to read from\r\n     * @return {Object} Components of transform\r\n     */\r\n    saveObjectTransform: function (target) {\r\n      return {\r\n        scaleX: target.scaleX,\r\n        scaleY: target.scaleY,\r\n        skewX: target.skewX,\r\n        skewY: target.skewY,\r\n        angle: target.angle,\r\n        left: target.left,\r\n        flipX: target.flipX,\r\n        flipY: target.flipY,\r\n        top: target.top\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns true if context has transparent pixel\r\n     * at specified location (taking tolerance into account)\r\n     * @param {CanvasRenderingContext2D} ctx context\r\n     * @param {Number} x x coordinate\r\n     * @param {Number} y y coordinate\r\n     * @param {Number} tolerance Tolerance\r\n     */\r\n    isTransparent: function(ctx, x, y, tolerance) {\r\n\r\n      // If tolerance is > 0 adjust start coords to take into account.\r\n      // If moves off Canvas fix to 0\r\n      if (tolerance > 0) {\r\n        if (x > tolerance) {\r\n          x -= tolerance;\r\n        }\r\n        else {\r\n          x = 0;\r\n        }\r\n        if (y > tolerance) {\r\n          y -= tolerance;\r\n        }\r\n        else {\r\n          y = 0;\r\n        }\r\n      }\r\n\r\n      var _isTransparent = true, i, temp,\r\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\r\n          l = imageData.data.length;\r\n\r\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\r\n      for (i = 3; i < l; i += 4) {\r\n        temp = imageData.data[i];\r\n        _isTransparent = temp <= 0;\r\n        if (_isTransparent === false) {\r\n          break; // Stop if colour found\r\n        }\r\n      }\r\n\r\n      imageData = null;\r\n\r\n      return _isTransparent;\r\n    },\r\n\r\n    /**\r\n     * Parse preserveAspectRatio attribute from element\r\n     * @param {string} attribute to be parsed\r\n     * @return {Object} an object containing align and meetOrSlice attribute\r\n     */\r\n    parsePreserveAspectRatioAttribute: function(attribute) {\r\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\r\n          aspectRatioAttrs = attribute.split(' '), align;\r\n\r\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\r\n        meetOrSlice = aspectRatioAttrs.pop();\r\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\r\n          align = meetOrSlice;\r\n          meetOrSlice = 'meet';\r\n        }\r\n        else if (aspectRatioAttrs.length) {\r\n          align = aspectRatioAttrs.pop();\r\n        }\r\n      }\r\n      //divide align in alignX and alignY\r\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\r\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\r\n      return {\r\n        meetOrSlice: meetOrSlice,\r\n        alignX: alignX,\r\n        alignY: alignY\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Clear char widths cache for the given font family or all the cache if no\r\n     * fontFamily is specified.\r\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\r\n     * for custom fonts to load properly when adding text objects to the canvas.\r\n     * If a text object is added when its own font is not loaded yet, you will get wrong\r\n     * measurement and so wrong bounding boxes.\r\n     * After the font cache is cleared, either change the textObject text content or call\r\n     * initDimensions() to trigger a recalculation\r\n     * @memberOf fabric.util\r\n     * @param {String} [fontFamily] font family to clear\r\n     */\r\n    clearFabricFontCache: function(fontFamily) {\r\n      fontFamily = (fontFamily || '').toLowerCase();\r\n      if (!fontFamily) {\r\n        fabric.charWidthsCache = { };\r\n      }\r\n      else if (fabric.charWidthsCache[fontFamily]) {\r\n        delete fabric.charWidthsCache[fontFamily];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Given current aspect ratio, determines the max width and height that can\r\n     * respect the total allowed area for the cache.\r\n     * @memberOf fabric.util\r\n     * @param {Number} ar aspect ratio\r\n     * @param {Number} maximumArea Maximum area you want to achieve\r\n     * @return {Object.x} Limited dimensions by X\r\n     * @return {Object.y} Limited dimensions by Y\r\n     */\r\n    limitDimsByArea: function(ar, maximumArea) {\r\n      var roughWidth = Math.sqrt(maximumArea * ar),\r\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\r\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\r\n    },\r\n\r\n    capValue: function(min, value, max) {\r\n      return Math.max(min, Math.min(value, max));\r\n    },\r\n\r\n    /**\r\n     * Finds the scale for the object source to fit inside the object destination,\r\n     * keeping aspect ratio intact.\r\n     * respect the total allowed area for the cache.\r\n     * @memberOf fabric.util\r\n     * @param {Object | fabric.Object} source\r\n     * @param {Number} source.height natural unscaled height of the object\r\n     * @param {Number} source.width natural unscaled width of the object\r\n     * @param {Object | fabric.Object} destination\r\n     * @param {Number} destination.height natural unscaled height of the object\r\n     * @param {Number} destination.width natural unscaled width of the object\r\n     * @return {Number} scale factor to apply to source to fit into destination\r\n     */\r\n    findScaleToFit: function(source, destination) {\r\n      return Math.min(destination.width / source.width, destination.height / source.height);\r\n    },\r\n\r\n    /**\r\n     * Finds the scale for the object source to cover entirely the object destination,\r\n     * keeping aspect ratio intact.\r\n     * respect the total allowed area for the cache.\r\n     * @memberOf fabric.util\r\n     * @param {Object | fabric.Object} source\r\n     * @param {Number} source.height natural unscaled height of the object\r\n     * @param {Number} source.width natural unscaled width of the object\r\n     * @param {Object | fabric.Object} destination\r\n     * @param {Number} destination.height natural unscaled height of the object\r\n     * @param {Number} destination.width natural unscaled width of the object\r\n     * @return {Number} scale factor to apply to source to cover destination\r\n     */\r\n    findScaleToCover: function(source, destination) {\r\n      return Math.max(destination.width / source.width, destination.height / source.height);\r\n    },\r\n\r\n    /**\r\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\r\n     * @memberOf fabric.util\r\n     * @param {Array} transform an array with 6 numbers\r\n     * @return {String} transform matrix for svg\r\n     * @return {Object.y} Limited dimensions by Y\r\n     */\r\n    matrixToSVG: function(transform) {\r\n      return 'matrix(' + transform.map(function(value) {\r\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\r\n      }).join(' ') + ')';\r\n    },\r\n\r\n    /**\r\n     * given an object and a transform, apply the inverse transform to the object,\r\n     * this is equivalent to remove from that object that transformation, so that\r\n     * added in a space with the removed transform, the object will be the same as before.\r\n     * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\r\n     * Removing from an object a transfrom that rotate by 30deg is like rotating by 30deg\r\n     * in the opposite direction.\r\n     * This util is used to add objects inside transformed groups or nested groups.\r\n     * @memberOf fabric.util\r\n     * @param {fabric.Object} object the object you want to transform\r\n     * @param {Array} transform the destination transform\r\n     */\r\n    removeTransformFromObject: function(object, transform) {\r\n      var inverted = fabric.util.invertTransform(transform),\r\n          finalTransform = fabric.util.multiplyTransformMatrices(inverted, object.calcOwnMatrix());\r\n      fabric.util.applyTransformToObject(object, finalTransform);\r\n    },\r\n\r\n    /**\r\n     * given an object and a transform, apply the transform to the object.\r\n     * this is equivalent to change the space where the object is drawn.\r\n     * Adding to an object a transform that scale by 2 is like scaling it by 2.\r\n     * This is used when removing an object from an active selection for example.\r\n     * @memberOf fabric.util\r\n     * @param {fabric.Object} object the object you want to transform\r\n     * @param {Array} transform the destination transform\r\n     */\r\n    addTransformToObject: function(object, transform) {\r\n      fabric.util.applyTransformToObject(\r\n        object,\r\n        fabric.util.multiplyTransformMatrices(transform, object.calcOwnMatrix())\r\n      );\r\n    },\r\n\r\n    /**\r\n     * discard an object transform state and apply the one from the matrix.\r\n     * @memberOf fabric.util\r\n     * @param {fabric.Object} object the object you want to transform\r\n     * @param {Array} transform the destination transform\r\n     */\r\n    applyTransformToObject: function(object, transform) {\r\n      var options = fabric.util.qrDecompose(transform),\r\n          center = new fabric.Point(options.translateX, options.translateY);\r\n      object.flipX = false;\r\n      object.flipY = false;\r\n      object.set('scaleX', options.scaleX);\r\n      object.set('scaleY', options.scaleY);\r\n      object.skewX = options.skewX;\r\n      object.skewY = options.skewY;\r\n      object.angle = options.angle;\r\n      object.setPositionByOrigin(center, 'center', 'center');\r\n    },\r\n\r\n    /**\r\n     * given a width and height, return the size of the bounding box\r\n     * that can contains the box with width/height with applied transform\r\n     * described in options.\r\n     * Use to calculate the boxes around objects for controls.\r\n     * @memberOf fabric.util\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Object} options\r\n     * @param {Number} options.scaleX\r\n     * @param {Number} options.scaleY\r\n     * @param {Number} options.skewX\r\n     * @param {Number} options.skewY\r\n     * @return {Object.x} width of containing\r\n     * @return {Object.y} height of containing\r\n     */\r\n    sizeAfterTransform: function(width, height, options) {\r\n      var dimX = width / 2, dimY = height / 2,\r\n          points = [\r\n            {\r\n              x: -dimX,\r\n              y: -dimY\r\n            },\r\n            {\r\n              x: dimX,\r\n              y: -dimY\r\n            },\r\n            {\r\n              x: -dimX,\r\n              y: dimY\r\n            },\r\n            {\r\n              x: dimX,\r\n              y: dimY\r\n            }],\r\n          transformMatrix = fabric.util.calcDimensionsMatrix(options),\r\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\r\n      return {\r\n        x: bbox.width,\r\n        y: bbox.height,\r\n      };\r\n    }\r\n  };\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function() {\r\n  var _join = Array.prototype.join,\r\n      commandLengths = {\r\n        m: 2,\r\n        l: 2,\r\n        h: 1,\r\n        v: 1,\r\n        c: 6,\r\n        s: 4,\r\n        q: 4,\r\n        t: 2,\r\n        a: 7\r\n      },\r\n      repeatedCommands = {\r\n        m: 'l',\r\n        M: 'L'\r\n      };\r\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\r\n    var costh2 = fabric.util.cos(th2),\r\n        sinth2 = fabric.util.sin(th2),\r\n        costh3 = fabric.util.cos(th3),\r\n        sinth3 = fabric.util.sin(th3),\r\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\r\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\r\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\r\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\r\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\r\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\r\n\r\n    return ['C',\r\n      cp1X, cp1Y,\r\n      cp2X, cp2Y,\r\n      toX, toY\r\n    ];\r\n  }\r\n\r\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\r\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\r\n   * http://mozilla.org/MPL/2.0/\r\n   */\r\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\r\n    var PI = Math.PI, th = rotateX * PI / 180,\r\n        sinTh = fabric.util.sin(th),\r\n        cosTh = fabric.util.cos(th),\r\n        fromX = 0, fromY = 0;\r\n\r\n    rx = Math.abs(rx);\r\n    ry = Math.abs(ry);\r\n\r\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\r\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\r\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\r\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\r\n        root = 0;\r\n\r\n    if (pl < 0) {\r\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\r\n      rx *= s;\r\n      ry *= s;\r\n    }\r\n    else {\r\n      root = (large === sweep ? -1.0 : 1.0) *\r\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\r\n    }\r\n\r\n    var cx = root * rx * py / ry,\r\n        cy = -root * ry * px / rx,\r\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\r\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\r\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\r\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\r\n\r\n    if (sweep === 0 && dtheta > 0) {\r\n      dtheta -= 2 * PI;\r\n    }\r\n    else if (sweep === 1 && dtheta < 0) {\r\n      dtheta += 2 * PI;\r\n    }\r\n\r\n    // Convert into cubic bezier segments <= 90deg\r\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\r\n        result = [], mDelta = dtheta / segments,\r\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\r\n        th3 = mTheta + mDelta;\r\n\r\n    for (var i = 0; i < segments; i++) {\r\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\r\n      fromX = result[i][5];\r\n      fromY = result[i][6];\r\n      mTheta = th3;\r\n      th3 += mDelta;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /*\r\n   * Private\r\n   */\r\n  function calcVectorAngle(ux, uy, vx, vy) {\r\n    var ta = Math.atan2(uy, ux),\r\n        tb = Math.atan2(vy, vx);\r\n    if (tb >= ta) {\r\n      return tb - ta;\r\n    }\r\n    else {\r\n      return 2 * Math.PI - (ta - tb);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate bounding box of a beziercurve\r\n   * @param {Number} x0 starting point\r\n   * @param {Number} y0\r\n   * @param {Number} x1 first control point\r\n   * @param {Number} y1\r\n   * @param {Number} x2 secondo control point\r\n   * @param {Number} y2\r\n   * @param {Number} x3 end of bezier\r\n   * @param {Number} y3\r\n   */\r\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\r\n  // TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\r\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n    var argsString;\r\n    if (fabric.cachesBoundsOfCurve) {\r\n      argsString = _join.call(arguments);\r\n      if (fabric.boundsOfCurveCache[argsString]) {\r\n        return fabric.boundsOfCurveCache[argsString];\r\n      }\r\n    }\r\n\r\n    var sqrt = Math.sqrt,\r\n        min = Math.min, max = Math.max,\r\n        abs = Math.abs, tvalues = [],\r\n        bounds = [[], []],\r\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n    b = 6 * x0 - 12 * x1 + 6 * x2;\r\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n    c = 3 * x1 - 3 * x0;\r\n\r\n    for (var i = 0; i < 2; ++i) {\r\n      if (i > 0) {\r\n        b = 6 * y0 - 12 * y1 + 6 * y2;\r\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n        c = 3 * y1 - 3 * y0;\r\n      }\r\n\r\n      if (abs(a) < 1e-12) {\r\n        if (abs(b) < 1e-12) {\r\n          continue;\r\n        }\r\n        t = -c / b;\r\n        if (0 < t && t < 1) {\r\n          tvalues.push(t);\r\n        }\r\n        continue;\r\n      }\r\n      b2ac = b * b - 4 * c * a;\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n      sqrtb2ac = sqrt(b2ac);\r\n      t1 = (-b + sqrtb2ac) / (2 * a);\r\n      if (0 < t1 && t1 < 1) {\r\n        tvalues.push(t1);\r\n      }\r\n      t2 = (-b - sqrtb2ac) / (2 * a);\r\n      if (0 < t2 && t2 < 1) {\r\n        tvalues.push(t2);\r\n      }\r\n    }\r\n\r\n    var x, y, j = tvalues.length, jlen = j, mt;\r\n    while (j--) {\r\n      t = tvalues[j];\r\n      mt = 1 - t;\r\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n      bounds[0][j] = x;\r\n\r\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n      bounds[1][j] = y;\r\n    }\r\n\r\n    bounds[0][jlen] = x0;\r\n    bounds[1][jlen] = y0;\r\n    bounds[0][jlen + 1] = x3;\r\n    bounds[1][jlen + 1] = y3;\r\n    var result = [\r\n      {\r\n        x: min.apply(null, bounds[0]),\r\n        y: min.apply(null, bounds[1])\r\n      },\r\n      {\r\n        x: max.apply(null, bounds[0]),\r\n        y: max.apply(null, bounds[1])\r\n      }\r\n    ];\r\n    if (fabric.cachesBoundsOfCurve) {\r\n      fabric.boundsOfCurveCache[argsString] = result;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Converts arc to a bunch of bezier curves\r\n   * @param {Number} fx starting point x\r\n   * @param {Number} fy starting point y\r\n   * @param {Array} coords Arc command\r\n   */\r\n  function fromArcToBeziers(fx, fy, coords) {\r\n    var rx = coords[1],\r\n        ry = coords[2],\r\n        rot = coords[3],\r\n        large = coords[4],\r\n        sweep = coords[5],\r\n        tx = coords[6],\r\n        ty = coords[7],\r\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\r\n      segsNorm[i][1] += fx;\r\n      segsNorm[i][2] += fy;\r\n      segsNorm[i][3] += fx;\r\n      segsNorm[i][4] += fy;\r\n      segsNorm[i][5] += fx;\r\n      segsNorm[i][6] += fy;\r\n    }\r\n    return segsNorm;\r\n  };\r\n\r\n  /**\r\n   * This function take a parsed SVG path and make it simpler for fabricJS logic.\r\n   * simplification consist of: only UPPERCASE absolute commands ( relative converted to absolute )\r\n   * S converted in C, T converted in Q, A converted in C.\r\n   * @param {Array} path the array of commands of a parsed svg path for fabric.Path\r\n   * @return {Array} the simplified array of commands of a parsed svg path for fabric.Path\r\n   */\r\n  function makePathSimpler(path) {\r\n    // x and y represent the last point of the path. the previous command point.\r\n    // we add them to each relative command to make it an absolute comment.\r\n    // we also swap the v V h H with L, because are easier to transform.\r\n    var x = 0, y = 0, len = path.length,\r\n        // x1 and y1 represent the last point of the subpath. the subpath is started with\r\n        // m or M command. When a z or Z command is drawn, x and y need to be resetted to\r\n        // the last x1 and y1.\r\n        x1 = 0, y1 = 0, current, i, converted,\r\n        // previous will host the letter of the previous command, to handle S and T.\r\n        // controlX and controlY will host the previous reflected control point\r\n        destinationPath = [], previous, controlX, controlY;\r\n    for (i = 0; i < len; ++i) {\r\n      converted = false;\r\n      current = path[i].slice(0);\r\n      switch (current[0]) { // first letter\r\n        case 'l': // lineto, relative\r\n          current[0] = 'L';\r\n          current[1] += x;\r\n          current[2] += y;\r\n          // falls through\r\n        case 'L':\r\n          x = current[1];\r\n          y = current[2];\r\n          break;\r\n        case 'h': // horizontal lineto, relative\r\n          current[1] += x;\r\n          // falls through\r\n        case 'H':\r\n          current[0] = 'L';\r\n          current[2] = y;\r\n          x = current[1];\r\n          break;\r\n        case 'v': // vertical lineto, relative\r\n          current[1] += y;\r\n          // falls through\r\n        case 'V':\r\n          current[0] = 'L';\r\n          y = current[1];\r\n          current[1] = x;\r\n          current[2] = y;\r\n          break;\r\n        case 'm': // moveTo, relative\r\n          current[0] = 'M';\r\n          current[1] += x;\r\n          current[2] += y;\r\n          // falls through\r\n        case 'M':\r\n          x = current[1];\r\n          y = current[2];\r\n          x1 = current[1];\r\n          y1 = current[2];\r\n          break;\r\n        case 'c': // bezierCurveTo, relative\r\n          current[0] = 'C';\r\n          current[1] += x;\r\n          current[2] += y;\r\n          current[3] += x;\r\n          current[4] += y;\r\n          current[5] += x;\r\n          current[6] += y;\r\n          // falls through\r\n        case 'C':\r\n          controlX = current[3];\r\n          controlY = current[4];\r\n          x = current[5];\r\n          y = current[6];\r\n          break;\r\n        case 's': // shorthand cubic bezierCurveTo, relative\r\n          current[0] = 'S';\r\n          current[1] += x;\r\n          current[2] += y;\r\n          current[3] += x;\r\n          current[4] += y;\r\n          // falls through\r\n        case 'S':\r\n          // would be sScC but since we are swapping sSc for C, we check just that.\r\n          if (previous === 'C') {\r\n            // calculate reflection of previous control points\r\n            controlX = 2 * x - controlX;\r\n            controlY = 2 * y - controlY;\r\n          }\r\n          else {\r\n            // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n            // the control point is coincident with the current point\r\n            controlX = x;\r\n            controlY = y;\r\n          }\r\n          x = current[3];\r\n          y = current[4];\r\n          current[0] = 'C';\r\n          current[5] = current[3];\r\n          current[6] = current[4];\r\n          current[3] = current[1];\r\n          current[4] = current[2];\r\n          current[1] = controlX;\r\n          current[2] = controlY;\r\n          // current[3] and current[4] are NOW the second control point.\r\n          // we keep it for the next reflection.\r\n          controlX = current[3];\r\n          controlY = current[4];\r\n          break;\r\n        case 'q': // quadraticCurveTo, relative\r\n          current[0] = 'Q';\r\n          current[1] += x;\r\n          current[2] += y;\r\n          current[3] += x;\r\n          current[4] += y;\r\n          // falls through\r\n        case 'Q':\r\n          controlX = current[1];\r\n          controlY = current[2];\r\n          x = current[3];\r\n          y = current[4];\r\n          break;\r\n        case 't': // shorthand quadraticCurveTo, relative\r\n          current[0] = 'T';\r\n          current[1] += x;\r\n          current[2] += y;\r\n          // falls through\r\n        case 'T':\r\n          if (previous === 'Q') {\r\n            // calculate reflection of previous control point\r\n            controlX = 2 * x - controlX;\r\n            controlY = 2 * y - controlY;\r\n          }\r\n          else {\r\n            // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n            // assume the control point is coincident with the current point\r\n            controlX = x;\r\n            controlY = y;\r\n          }\r\n          current[0] = 'Q';\r\n          x = current[1];\r\n          y = current[2];\r\n          current[1] = controlX;\r\n          current[2] = controlY;\r\n          current[3] = x;\r\n          current[4] = y;\r\n          break;\r\n        case 'a':\r\n          current[0] = 'A';\r\n          current[6] += x;\r\n          current[7] += y;\r\n          // falls through\r\n        case 'A':\r\n          converted = true;\r\n          destinationPath = destinationPath.concat(fromArcToBeziers(x, y, current));\r\n          x = current[6];\r\n          y = current[7];\r\n          break;\r\n        case 'z':\r\n        case 'Z':\r\n          x = x1;\r\n          y = y1;\r\n          break;\r\n        default:\r\n      }\r\n      if (!converted) {\r\n        destinationPath.push(current);\r\n      }\r\n      previous = current[0];\r\n    }\r\n    return destinationPath;\r\n  };\r\n\r\n  /**\r\n   * Calc length from point x1,y1 to x2,y2\r\n   * @param {Number} x1 starting point x\r\n   * @param {Number} y1 starting point y\r\n   * @param {Number} x2 starting point x\r\n   * @param {Number} y2 starting point y\r\n   * @return {Number} length of segment\r\n   */\r\n  function calcLineLength(x1, y1, x2, y2) {\r\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n  }\r\n\r\n  // functions for the Cubic beizer\r\n  // taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\r\n  function CB1(t) {\r\n    return t * t * t;\r\n  }\r\n  function CB2(t) {\r\n    return 3 * t * t * (1 - t);\r\n  }\r\n  function CB3(t) {\r\n    return 3 * t * (1 - t) * (1 - t);\r\n  }\r\n  function CB4(t) {\r\n    return (1 - t) * (1 - t) * (1 - t);\r\n  }\r\n\r\n  function getPointOnCubicBezierIterator(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\r\n    return function(pct) {\r\n      var c1 = CB1(pct), c2 = CB2(pct), c3 = CB3(pct), c4 = CB4(pct);\r\n      return {\r\n        x: p4x * c1 + p3x * c2 + p2x * c3 + p1x * c4,\r\n        y: p4y * c1 + p3y * c2 + p2y * c3 + p1y * c4\r\n      };\r\n    };\r\n  }\r\n\r\n  function getTangentCubicIterator(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\r\n    return function (pct) {\r\n      var invT = 1 - pct,\r\n          tangentX = (3 * invT * invT * (p2x - p1x)) + (6 * invT * pct * (p3x - p2x)) +\r\n          (3 * pct * pct * (p4x - p3x)),\r\n          tangentY = (3 * invT * invT * (p2y - p1y)) + (6 * invT * pct * (p3y - p2y)) +\r\n          (3 * pct * pct * (p4y - p3y));\r\n      return Math.atan2(tangentY, tangentX);\r\n    };\r\n  }\r\n\r\n  function QB1(t) {\r\n    return t * t;\r\n  }\r\n\r\n  function QB2(t) {\r\n    return 2 * t * (1 - t);\r\n  }\r\n\r\n  function QB3(t) {\r\n    return (1 - t) * (1 - t);\r\n  }\r\n\r\n  function getPointOnQuadraticBezierIterator(p1x, p1y, p2x, p2y, p3x, p3y) {\r\n    return function(pct) {\r\n      var c1 = QB1(pct), c2 = QB2(pct), c3 = QB3(pct);\r\n      return {\r\n        x: p3x * c1 + p2x * c2 + p1x * c3,\r\n        y: p3y * c1 + p2y * c2 + p1y * c3\r\n      };\r\n    };\r\n  }\r\n\r\n  function getTangentQuadraticIterator(p1x, p1y, p2x, p2y, p3x, p3y) {\r\n    return function (pct) {\r\n      var invT = 1 - pct,\r\n          tangentX = (2 * invT * (p2x - p1x)) + (2 * pct * (p3x - p2x)),\r\n          tangentY = (2 * invT * (p2y - p1y)) + (2 * pct * (p3y - p2y));\r\n      return Math.atan2(tangentY, tangentX);\r\n    };\r\n  }\r\n\r\n\r\n  // this will run over a path segment ( a cubic or quadratic segment) and approximate it\r\n  // with 100 segemnts. This will good enough to calculate the length of the curve\r\n  function pathIterator(iterator, x1, y1) {\r\n    var tempP = { x: x1, y: y1 }, p, tmpLen = 0, perc;\r\n    for (perc = 1; perc <= 100; perc += 1) {\r\n      p = iterator(perc / 100);\r\n      tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\r\n      tempP = p;\r\n    }\r\n    return tmpLen;\r\n  }\r\n\r\n  /**\r\n   * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\r\n   * that correspond to that pixels run over the path.\r\n   * The percentage will be then used to find the correct point on the canvas for the path.\r\n   * @param {Array} segInfo fabricJS collection of information on a parsed path\r\n   * @param {Number} distance from starting point, in pixels.\r\n   * @return {Object} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\r\n   */\r\n  function findPercentageForDistance(segInfo, distance) {\r\n    var perc = 0, tmpLen = 0, iterator = segInfo.iterator, tempP = { x: segInfo.x, y: segInfo.y },\r\n        p, nextLen, nextStep = 0.01, angleFinder = segInfo.angleFinder, lastPerc;\r\n    // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\r\n    // the path\r\n    while (tmpLen < distance && perc <= 1 && nextStep > 0.0001) {\r\n      p = iterator(perc);\r\n      lastPerc = perc;\r\n      nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\r\n      // compare tmpLen each cycle with distance, decide next perc to test.\r\n      if ((nextLen + tmpLen) > distance) {\r\n        // we discard this step and we make smaller steps.\r\n        nextStep /= 2;\r\n        perc -= nextStep;\r\n      }\r\n      else {\r\n        tempP = p;\r\n        perc += nextStep;\r\n        tmpLen += nextLen;\r\n      }\r\n    }\r\n    p.angle = angleFinder(lastPerc);\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * Run over a parsed and simplifed path and extrac some informations.\r\n   * informations are length of each command and starting point\r\n   * @param {Array} path fabricJS parsed path commands\r\n   * @return {Array} path commands informations\r\n   */\r\n  function getPathSegmentsInfo(path) {\r\n    var totalLength = 0, len = path.length, current,\r\n        //x2 and y2 are the coords of segment start\r\n        //x1 and y1 are the coords of the current point\r\n        x1 = 0, y1 = 0, x2 = 0, y2 = 0, info = [], iterator, tempInfo, angleFinder;\r\n    for (var i = 0; i < len; i++) {\r\n      current = path[i];\r\n      tempInfo = {\r\n        x: x1,\r\n        y: y1,\r\n        command: current[0],\r\n      };\r\n      switch (current[0]) { //first letter\r\n        case 'M':\r\n          tempInfo.length = 0;\r\n          x2 = x1 = current[1];\r\n          y2 = y1 = current[2];\r\n          break;\r\n        case 'L':\r\n          tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\r\n          x1 = current[1];\r\n          y1 = current[2];\r\n          break;\r\n        case 'C':\r\n          iterator = getPointOnCubicBezierIterator(\r\n            x1,\r\n            y1,\r\n            current[1],\r\n            current[2],\r\n            current[3],\r\n            current[4],\r\n            current[5],\r\n            current[6]\r\n          );\r\n          angleFinder = getTangentCubicIterator(\r\n            x1,\r\n            y1,\r\n            current[1],\r\n            current[2],\r\n            current[3],\r\n            current[4],\r\n            current[5],\r\n            current[6]\r\n          );\r\n          tempInfo.iterator = iterator;\r\n          tempInfo.angleFinder = angleFinder;\r\n          tempInfo.length = pathIterator(iterator, x1, y1);\r\n          x1 = current[5];\r\n          y1 = current[6];\r\n          break;\r\n        case 'Q':\r\n          iterator = getPointOnQuadraticBezierIterator(\r\n            x1,\r\n            y1,\r\n            current[1],\r\n            current[2],\r\n            current[3],\r\n            current[4]\r\n          );\r\n          angleFinder = getTangentQuadraticIterator(\r\n            x1,\r\n            y1,\r\n            current[1],\r\n            current[2],\r\n            current[3],\r\n            current[4]\r\n          );\r\n          tempInfo.iterator = iterator;\r\n          tempInfo.angleFinder = angleFinder;\r\n          tempInfo.length = pathIterator(iterator, x1, y1);\r\n          x1 = current[3];\r\n          y1 = current[4];\r\n          break;\r\n        case 'Z':\r\n        case 'z':\r\n          // we add those in order to ease calculations later\r\n          tempInfo.destX = x2;\r\n          tempInfo.destY = y2;\r\n          tempInfo.length = calcLineLength(x1, y1, x2, y2);\r\n          x1 = x2;\r\n          y1 = y2;\r\n          break;\r\n      }\r\n      totalLength += tempInfo.length;\r\n      info.push(tempInfo);\r\n    }\r\n    info.push({ length: totalLength, x: x1, y: y1 });\r\n    return info;\r\n  }\r\n\r\n  function getPointOnPath(path, distance, infos) {\r\n    if (!infos) {\r\n      infos = getPathSegmentsInfo(path);\r\n    }\r\n    var i = 0;\r\n    while ((distance - infos[i].length > 0) && i < (infos.length - 2)) {\r\n      distance -= infos[i].length;\r\n      i++;\r\n    }\r\n    // var distance = infos[infos.length - 1] * perc;\r\n    var segInfo = infos[i], segPercent = distance / segInfo.length,\r\n        command = segInfo.command, segment = path[i], info;\r\n\r\n    switch (command) {\r\n      case 'M':\r\n        return { x: segInfo.x, y: segInfo.y, angle: 0 };\r\n      case 'Z':\r\n      case 'z':\r\n        info = new fabric.Point(segInfo.x, segInfo.y).lerp(\r\n          new fabric.Point(segInfo.destX, segInfo.destY),\r\n          segPercent\r\n        );\r\n        info.angle = Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x);\r\n        return info;\r\n      case 'L':\r\n        info = new fabric.Point(segInfo.x, segInfo.y).lerp(\r\n          new fabric.Point(segment[1], segment[2]),\r\n          segPercent\r\n        );\r\n        info.angle = Math.atan2(segment[2] - segInfo.y, segment[1] - segInfo.x);\r\n        return info;\r\n      case 'C':\r\n        return findPercentageForDistance(segInfo, distance);\r\n      case 'Q':\r\n        return findPercentageForDistance(segInfo, distance);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} pathString\r\n   * @return {(string|number)[][]} An array of SVG path commands\r\n   * @example <caption>Usage</caption>\r\n   * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\r\n   *   ['M', 3, 4],\r\n   *   ['Q', 3, 5, 2, 1, 4, 0],\r\n   *   ['Q', 9, 12, 2, 1, 4, 0],\r\n   * ];\r\n   *\r\n   */\r\n  function parsePath(pathString) {\r\n    var result = [],\r\n        coords = [],\r\n        currentPath,\r\n        parsed,\r\n        re = fabric.rePathCommand,\r\n        rNumber = '[-+]?(?:\\\\d*\\\\.\\\\d+|\\\\d+\\\\.?)(?:[eE][-+]?\\\\d+)?\\\\s*',\r\n        rNumberCommaWsp = '(' + rNumber + ')' + fabric.commaWsp,\r\n        rFlagCommaWsp = '([01])' + fabric.commaWsp + '?',\r\n        rArcSeq = rNumberCommaWsp + '?' + rNumberCommaWsp + '?' + rNumberCommaWsp + rFlagCommaWsp + rFlagCommaWsp +\r\n          rNumberCommaWsp + '?(' + rNumber + ')',\r\n        regArcArgumentSequence = new RegExp(rArcSeq, 'g'),\r\n        match,\r\n        coordsStr,\r\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\r\n        path;\r\n    if (!pathString || !pathString.match) {\r\n      return result;\r\n    }\r\n    path = pathString.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\r\n\r\n    for (var i = 0, coordsParsed, len = path.length; i < len; i++) {\r\n      currentPath = path[i];\r\n\r\n      coordsStr = currentPath.slice(1).trim();\r\n      coords.length = 0;\r\n\r\n      var command = currentPath.charAt(0);\r\n      coordsParsed = [command];\r\n\r\n      if (command.toLowerCase() === 'a') {\r\n        // arcs have special flags that apparently don't require spaces so handle special\r\n        for (var args; (args = regArcArgumentSequence.exec(coordsStr));) {\r\n          for (var j = 1; j < args.length; j++) {\r\n            coords.push(args[j]);\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        while ((match = re.exec(coordsStr))) {\r\n          coords.push(match[0]);\r\n        }\r\n      }\r\n\r\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\r\n        parsed = parseFloat(coords[j]);\r\n        if (!isNaN(parsed)) {\r\n          coordsParsed.push(parsed);\r\n        }\r\n      }\r\n\r\n      var commandLength = commandLengths[command.toLowerCase()],\r\n          repeatedCommand = repeatedCommands[command] || command;\r\n\r\n      if (coordsParsed.length - 1 > commandLength) {\r\n        for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\r\n          result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\r\n          command = repeatedCommand;\r\n        }\r\n      }\r\n      else {\r\n        result.push(coordsParsed);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Converts points to a smooth SVG path\r\n   * @param {{ x: number,y: number }[]} points Array of points\r\n   * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\r\n   * @return {(string|number)[][]} An array of SVG path commands\r\n   */\r\n  function getSmoothPathFromPoints(points, correction) {\r\n    var path = [], i,\r\n        p1 = new fabric.Point(points[0].x, points[0].y),\r\n        p2 = new fabric.Point(points[1].x, points[1].y),\r\n        len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\r\n    correction = correction || 0;\r\n\r\n    if (manyPoints) {\r\n      multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\r\n      multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\r\n    }\r\n    path.push(['M', p1.x - multSignX * correction, p1.y - multSignY * correction]);\r\n    for (i = 1; i < len; i++) {\r\n      if (!p1.eq(p2)) {\r\n        var midPoint = p1.midPointFrom(p2);\r\n        // p1 is our bezier control point\r\n        // midpoint is our endpoint\r\n        // start point is p(i-1) value.\r\n        path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\r\n      }\r\n      p1 = points[i];\r\n      if ((i + 1) < points.length) {\r\n        p2 = points[i + 1];\r\n      }\r\n    }\r\n    if (manyPoints) {\r\n      multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\r\n      multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\r\n    }\r\n    path.push(['L', p1.x + multSignX * correction, p1.y + multSignY * correction]);\r\n    return path;\r\n  }\r\n  /**\r\n   * Transform a path by transforming each segment.\r\n   * it has to be a simplified path or it won't work.\r\n   * WARNING: this depends from pathOffset for correct operation\r\n   * @param {Array} path fabricJS parsed and simplified path commands\r\n   * @param {Array} transform matrix that represent the transformation\r\n   * @param {Object} [pathOffset] the fabric.Path pathOffset\r\n   * @param {Number} pathOffset.x\r\n   * @param {Number} pathOffset.y\r\n   * @returns {Array} the transformed path\r\n   */\r\n  function transformPath(path, transform, pathOffset) {\r\n    if (pathOffset) {\r\n      transform = fabric.util.multiplyTransformMatrices(\r\n        transform,\r\n        [1, 0, 0, 1, -pathOffset.x, -pathOffset.y]\r\n      );\r\n    }\r\n    return path.map(function(pathSegment) {\r\n      var newSegment = pathSegment.slice(0), point = {};\r\n      for (var i = 1; i < pathSegment.length - 1; i += 2) {\r\n        point.x = pathSegment[i];\r\n        point.y = pathSegment[i + 1];\r\n        point = fabric.util.transformPoint(point, transform);\r\n        newSegment[i] = point.x;\r\n        newSegment[i + 1] = point.y;\r\n      }\r\n      return newSegment;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculate bounding box of a elliptic-arc\r\n   * @deprecated\r\n   * @param {Number} fx start point of arc\r\n   * @param {Number} fy\r\n   * @param {Number} rx horizontal radius\r\n   * @param {Number} ry vertical radius\r\n   * @param {Number} rot angle of horizontal axis\r\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\r\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\r\n   * @param {Number} tx end point of arc\r\n   * @param {Number} ty\r\n   */\r\n  function getBoundsOfArc(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\r\n\r\n    var fromX = 0, fromY = 0, bound, bounds = [],\r\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n    for (var i = 0, len = segs.length; i < len; i++) {\r\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5], segs[i][6]);\r\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\r\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\r\n      fromX = segs[i][5];\r\n      fromY = segs[i][6];\r\n    }\r\n    return bounds;\r\n  };\r\n\r\n  /**\r\n   * Draws arc\r\n   * @deprecated\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Number} fx\r\n   * @param {Number} fy\r\n   * @param {Array} coords coords of the arc, without the front 'A/a'\r\n   */\r\n  function drawArc(ctx, fx, fy, coords) {\r\n    coords = coords.slice(0).unshift('X'); // command A or a does not matter\r\n    var beziers = fromArcToBeziers(fx, fy, coords);\r\n    beziers.forEach(function(bezier) {\r\n      ctx.bezierCurveTo.apply(ctx, bezier.slice(1));\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Join path commands to go back to svg format\r\n   * @param {Array} pathData fabricJS parsed path commands\r\n   * @return {String} joined path 'M 0 0 L 20 30'\r\n   */\r\n  fabric.util.joinPath = function(pathData) {\r\n    return pathData.map(function (segment) { return segment.join(' '); }).join(' ');\r\n  };\r\n  fabric.util.parsePath = parsePath;\r\n  fabric.util.makePathSimpler = makePathSimpler;\r\n  fabric.util.getSmoothPathFromPoints = getSmoothPathFromPoints;\r\n  fabric.util.getPathSegmentsInfo = getPathSegmentsInfo;\r\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\r\n  fabric.util.getPointOnPath = getPointOnPath;\r\n  fabric.util.transformPath = transformPath;\r\n  /**\r\n   * Typo of `fromArcToBeziers` kept for not breaking the api once corrected.\r\n   * Will be removed in fabric 5.0\r\n   * @deprecated\r\n   */\r\n  fabric.util.fromArcToBeizers = fromArcToBeziers;\r\n  // kept because we do not want to make breaking changes.\r\n  // but useless and deprecated.\r\n  fabric.util.getBoundsOfArc = getBoundsOfArc;\r\n  fabric.util.drawArc = drawArc;\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  var slice = Array.prototype.slice;\r\n\r\n  /**\r\n   * Invokes method on all items in a given array\r\n   * @memberOf fabric.util.array\r\n   * @param {Array} array Array to iterate over\r\n   * @param {String} method Name of a method to invoke\r\n   * @return {Array}\r\n   */\r\n  function invoke(array, method) {\r\n    var args = slice.call(arguments, 2), result = [];\r\n    for (var i = 0, len = array.length; i < len; i++) {\r\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Finds maximum value in array (not necessarily \"first\" one)\r\n   * @memberOf fabric.util.array\r\n   * @param {Array} array Array to iterate over\r\n   * @param {String} byProperty\r\n   * @return {*}\r\n   */\r\n  function max(array, byProperty) {\r\n    return find(array, byProperty, function(value1, value2) {\r\n      return value1 >= value2;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Finds minimum value in array (not necessarily \"first\" one)\r\n   * @memberOf fabric.util.array\r\n   * @param {Array} array Array to iterate over\r\n   * @param {String} byProperty\r\n   * @return {*}\r\n   */\r\n  function min(array, byProperty) {\r\n    return find(array, byProperty, function(value1, value2) {\r\n      return value1 < value2;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function fill(array, value) {\r\n    var k = array.length;\r\n    while (k--) {\r\n      array[k] = value;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function find(array, byProperty, condition) {\r\n    if (!array || array.length === 0) {\r\n      return;\r\n    }\r\n\r\n    var i = array.length - 1,\r\n        result = byProperty ? array[i][byProperty] : array[i];\r\n    if (byProperty) {\r\n      while (i--) {\r\n        if (condition(array[i][byProperty], result)) {\r\n          result = array[i][byProperty];\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      while (i--) {\r\n        if (condition(array[i], result)) {\r\n          result = array[i];\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @namespace fabric.util.array\r\n   */\r\n  fabric.util.array = {\r\n    fill: fill,\r\n    invoke: invoke,\r\n    min: min,\r\n    max: max\r\n  };\r\n\r\n})();\r\n\r\n\r\n(function() {\r\n  /**\r\n   * Copies all enumerable properties of one js object to another\r\n   * this does not and cannot compete with generic utils.\r\n   * Does not clone or extend fabric.Object subclasses.\r\n   * This is mostly for internal use and has extra handling for fabricJS objects\r\n   * it skips the canvas and group properties in deep cloning.\r\n   * @memberOf fabric.util.object\r\n   * @param {Object} destination Where to copy to\r\n   * @param {Object} source Where to copy from\r\n   * @param {Boolean} [deep] Whether to extend nested objects\r\n   * @return {Object}\r\n   */\r\n\r\n  function extend(destination, source, deep) {\r\n    // JScript DontEnum bug is not taken care of\r\n    // the deep clone is for internal use, is not meant to avoid\r\n    // javascript traps or cloning html element or self referenced objects.\r\n    if (deep) {\r\n      if (!fabric.isLikelyNode && source instanceof Element) {\r\n        // avoid cloning deep images, canvases,\r\n        destination = source;\r\n      }\r\n      else if (source instanceof Array) {\r\n        destination = [];\r\n        for (var i = 0, len = source.length; i < len; i++) {\r\n          destination[i] = extend({ }, source[i], deep);\r\n        }\r\n      }\r\n      else if (source && typeof source === 'object') {\r\n        for (var property in source) {\r\n          if (property === 'canvas' || property === 'group') {\r\n            // we do not want to clone this props at all.\r\n            // we want to keep the keys in the copy\r\n            destination[property] = null;\r\n          }\r\n          else if (source.hasOwnProperty(property)) {\r\n            destination[property] = extend({ }, source[property], deep);\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // this sounds odd for an extend but is ok for recursive use\r\n        destination = source;\r\n      }\r\n    }\r\n    else {\r\n      for (var property in source) {\r\n        destination[property] = source[property];\r\n      }\r\n    }\r\n    return destination;\r\n  }\r\n\r\n  /**\r\n   * Creates an empty object and copies all enumerable properties of another object to it\r\n   * This method is mostly for internal use, and not intended for duplicating shapes in canvas. \r\n   * @memberOf fabric.util.object\r\n   * @param {Object} object Object to clone\r\n   * @param {Boolean} [deep] Whether to clone nested objects\r\n   * @return {Object}\r\n   */\r\n\r\n  //TODO: this function return an empty object if you try to clone null\r\n  function clone(object, deep) {\r\n    return extend({ }, object, deep);\r\n  }\r\n\r\n  /** @namespace fabric.util.object */\r\n  fabric.util.object = {\r\n    extend: extend,\r\n    clone: clone\r\n  };\r\n  fabric.util.object.extend(fabric.util, fabric.Observable);\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  /**\r\n   * Camelizes a string\r\n   * @memberOf fabric.util.string\r\n   * @param {String} string String to camelize\r\n   * @return {String} Camelized version of a string\r\n   */\r\n  function camelize(string) {\r\n    return string.replace(/-+(.)?/g, function(match, character) {\r\n      return character ? character.toUpperCase() : '';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Capitalizes a string\r\n   * @memberOf fabric.util.string\r\n   * @param {String} string String to capitalize\r\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\r\n   * and other letters stay untouched, if false first letter is capitalized\r\n   * and other letters are converted to lowercase.\r\n   * @return {String} Capitalized version of a string\r\n   */\r\n  function capitalize(string, firstLetterOnly) {\r\n    return string.charAt(0).toUpperCase() +\r\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * Escapes XML in a string\r\n   * @memberOf fabric.util.string\r\n   * @param {String} string String to escape\r\n   * @return {String} Escaped version of a string\r\n   */\r\n  function escapeXml(string) {\r\n    return string.replace(/&/g, '&amp;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&apos;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;');\r\n  }\r\n\r\n  /**\r\n   * Divide a string in the user perceived single units\r\n   * @memberOf fabric.util.string\r\n   * @param {String} textstring String to escape\r\n   * @return {Array} array containing the graphemes\r\n   */\r\n  function graphemeSplit(textstring) {\r\n    var i = 0, chr, graphemes = [];\r\n    for (i = 0, chr; i < textstring.length; i++) {\r\n      if ((chr = getWholeChar(textstring, i)) === false) {\r\n        continue;\r\n      }\r\n      graphemes.push(chr);\r\n    }\r\n    return graphemes;\r\n  }\r\n\r\n  // taken from mdn in the charAt doc page.\r\n  function getWholeChar(str, i) {\r\n    var code = str.charCodeAt(i);\r\n\r\n    if (isNaN(code)) {\r\n      return ''; // Position not found\r\n    }\r\n    if (code < 0xD800 || code > 0xDFFF) {\r\n      return str.charAt(i);\r\n    }\r\n\r\n    // High surrogate (could change last hex to 0xDB7F to treat high private\r\n    // surrogates as single characters)\r\n    if (0xD800 <= code && code <= 0xDBFF) {\r\n      if (str.length <= (i + 1)) {\r\n        throw 'High surrogate without following low surrogate';\r\n      }\r\n      var next = str.charCodeAt(i + 1);\r\n      if (0xDC00 > next || next > 0xDFFF) {\r\n        throw 'High surrogate without following low surrogate';\r\n      }\r\n      return str.charAt(i) + str.charAt(i + 1);\r\n    }\r\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\r\n    if (i === 0) {\r\n      throw 'Low surrogate without preceding high surrogate';\r\n    }\r\n    var prev = str.charCodeAt(i - 1);\r\n\r\n    // (could change last hex to 0xDB7F to treat high private\r\n    // surrogates as single characters)\r\n    if (0xD800 > prev || prev > 0xDBFF) {\r\n      throw 'Low surrogate without preceding high surrogate';\r\n    }\r\n    // We can pass over low surrogates now as the second component\r\n    // in a pair which we have already processed\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * String utilities\r\n   * @namespace fabric.util.string\r\n   */\r\n  fabric.util.string = {\r\n    camelize: camelize,\r\n    capitalize: capitalize,\r\n    escapeXml: escapeXml,\r\n    graphemeSplit: graphemeSplit\r\n  };\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  var slice = Array.prototype.slice, emptyFunction = function() { },\r\n\r\n      IS_DONTENUM_BUGGY = (function() {\r\n        for (var p in { toString: 1 }) {\r\n          if (p === 'toString') {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      })(),\r\n\r\n      /** @ignore */\r\n      addMethods = function(klass, source, parent) {\r\n        for (var property in source) {\r\n\r\n          if (property in klass.prototype &&\r\n              typeof klass.prototype[property] === 'function' &&\r\n              (source[property] + '').indexOf('callSuper') > -1) {\r\n\r\n            klass.prototype[property] = (function(property) {\r\n              return function() {\r\n\r\n                var superclass = this.constructor.superclass;\r\n                this.constructor.superclass = parent;\r\n                var returnValue = source[property].apply(this, arguments);\r\n                this.constructor.superclass = superclass;\r\n\r\n                if (property !== 'initialize') {\r\n                  return returnValue;\r\n                }\r\n              };\r\n            })(property);\r\n          }\r\n          else {\r\n            klass.prototype[property] = source[property];\r\n          }\r\n\r\n          if (IS_DONTENUM_BUGGY) {\r\n            if (source.toString !== Object.prototype.toString) {\r\n              klass.prototype.toString = source.toString;\r\n            }\r\n            if (source.valueOf !== Object.prototype.valueOf) {\r\n              klass.prototype.valueOf = source.valueOf;\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n  function Subclass() { }\r\n\r\n  function callSuper(methodName) {\r\n    var parentMethod = null,\r\n        _this = this;\r\n\r\n    // climb prototype chain to find method not equal to callee's method\r\n    while (_this.constructor.superclass) {\r\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\r\n      if (_this[methodName] !== superClassMethod) {\r\n        parentMethod = superClassMethod;\r\n        break;\r\n      }\r\n      // eslint-disable-next-line\r\n      _this = _this.constructor.superclass.prototype;\r\n    }\r\n\r\n    if (!parentMethod) {\r\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\r\n    }\r\n\r\n    return (arguments.length > 1)\r\n      ? parentMethod.apply(this, slice.call(arguments, 1))\r\n      : parentMethod.call(this);\r\n  }\r\n\r\n  /**\r\n   * Helper for creation of \"classes\".\r\n   * @memberOf fabric.util\r\n   * @param {Function} [parent] optional \"Class\" to inherit from\r\n   * @param {Object} [properties] Properties shared by all instances of this class\r\n   *                  (be careful modifying objects defined here as this would affect all instances)\r\n   */\r\n  function createClass() {\r\n    var parent = null,\r\n        properties = slice.call(arguments, 0);\r\n\r\n    if (typeof properties[0] === 'function') {\r\n      parent = properties.shift();\r\n    }\r\n    function klass() {\r\n      this.initialize.apply(this, arguments);\r\n    }\r\n\r\n    klass.superclass = parent;\r\n    klass.subclasses = [];\r\n\r\n    if (parent) {\r\n      Subclass.prototype = parent.prototype;\r\n      klass.prototype = new Subclass();\r\n      parent.subclasses.push(klass);\r\n    }\r\n    for (var i = 0, length = properties.length; i < length; i++) {\r\n      addMethods(klass, properties[i], parent);\r\n    }\r\n    if (!klass.prototype.initialize) {\r\n      klass.prototype.initialize = emptyFunction;\r\n    }\r\n    klass.prototype.constructor = klass;\r\n    klass.prototype.callSuper = callSuper;\r\n    return klass;\r\n  }\r\n\r\n  fabric.util.createClass = createClass;\r\n})();\r\n\r\n\r\n(function () {\r\n  // since ie11 can use addEventListener but they do not support options, i need to check\r\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent,\r\n      touchEvents = ['touchstart', 'touchmove', 'touchend'];\r\n  /**\r\n   * Adds an event listener to an element\r\n   * @function\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element\r\n   * @param {String} eventName\r\n   * @param {Function} handler\r\n   */\r\n  fabric.util.addListener = function(element, eventName, handler, options) {\r\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\r\n  };\r\n\r\n  /**\r\n   * Removes an event listener from an element\r\n   * @function\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element\r\n   * @param {String} eventName\r\n   * @param {Function} handler\r\n   */\r\n  fabric.util.removeListener = function(element, eventName, handler, options) {\r\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\r\n  };\r\n\r\n  function getTouchInfo(event) {\r\n    var touchProp = event.changedTouches;\r\n    if (touchProp && touchProp[0]) {\r\n      return touchProp[0];\r\n    }\r\n    return event;\r\n  }\r\n\r\n  fabric.util.getPointer = function(event) {\r\n    var element = event.target,\r\n        scroll = fabric.util.getScrollLeftTop(element),\r\n        _evt = getTouchInfo(event);\r\n    return {\r\n      x: _evt.clientX + scroll.left,\r\n      y: _evt.clientY + scroll.top\r\n    };\r\n  };\r\n\r\n  fabric.util.isTouchEvent = function(event) {\r\n    return touchEvents.indexOf(event.type) > -1 || event.pointerType === 'touch';\r\n  };\r\n})();\r\n\r\n\r\n(function () {\r\n\r\n  /**\r\n   * Cross-browser wrapper for setting element's style\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element\r\n   * @param {Object} styles\r\n   * @return {HTMLElement} Element that was passed as a first argument\r\n   */\r\n  function setStyle(element, styles) {\r\n    var elementStyle = element.style;\r\n    if (!elementStyle) {\r\n      return element;\r\n    }\r\n    if (typeof styles === 'string') {\r\n      element.style.cssText += ';' + styles;\r\n      return styles.indexOf('opacity') > -1\r\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\r\n        : element;\r\n    }\r\n    for (var property in styles) {\r\n      if (property === 'opacity') {\r\n        setOpacity(element, styles[property]);\r\n      }\r\n      else {\r\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\r\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\r\n          : property;\r\n        elementStyle[normalizedProperty] = styles[property];\r\n      }\r\n    }\r\n    return element;\r\n  }\r\n\r\n  var parseEl = fabric.document.createElement('div'),\r\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\r\n      supportsFilters = typeof parseEl.style.filter === 'string',\r\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\r\n\r\n      /** @ignore */\r\n      setOpacity = function (element) { return element; };\r\n\r\n  if (supportsOpacity) {\r\n    /** @ignore */\r\n    setOpacity = function(element, value) {\r\n      element.style.opacity = value;\r\n      return element;\r\n    };\r\n  }\r\n  else if (supportsFilters) {\r\n    /** @ignore */\r\n    setOpacity = function(element, value) {\r\n      var es = element.style;\r\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\r\n        es.zoom = 1;\r\n      }\r\n      if (reOpacity.test(es.filter)) {\r\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\r\n        es.filter = es.filter.replace(reOpacity, value);\r\n      }\r\n      else {\r\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\r\n      }\r\n      return element;\r\n    };\r\n  }\r\n\r\n  fabric.util.setStyle = setStyle;\r\n\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  var _slice = Array.prototype.slice;\r\n\r\n  /**\r\n   * Takes id and returns an element with that id (if one exists in a document)\r\n   * @memberOf fabric.util\r\n   * @param {String|HTMLElement} id\r\n   * @return {HTMLElement|null}\r\n   */\r\n  function getById(id) {\r\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\r\n  }\r\n\r\n  var sliceCanConvertNodelists,\r\n      /**\r\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\r\n       * @memberOf fabric.util\r\n       * @param {Object} arrayLike\r\n       * @return {Array}\r\n       */\r\n      toArray = function(arrayLike) {\r\n        return _slice.call(arrayLike, 0);\r\n      };\r\n\r\n  try {\r\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\r\n  }\r\n  catch (err) { }\r\n\r\n  if (!sliceCanConvertNodelists) {\r\n    toArray = function(arrayLike) {\r\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\r\n      while (i--) {\r\n        arr[i] = arrayLike[i];\r\n      }\r\n      return arr;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates specified element with specified attributes\r\n   * @memberOf fabric.util\r\n   * @param {String} tagName Type of an element to create\r\n   * @param {Object} [attributes] Attributes to set on an element\r\n   * @return {HTMLElement} Newly created element\r\n   */\r\n  function makeElement(tagName, attributes) {\r\n    var el = fabric.document.createElement(tagName);\r\n    for (var prop in attributes) {\r\n      if (prop === 'class') {\r\n        el.className = attributes[prop];\r\n      }\r\n      else if (prop === 'for') {\r\n        el.htmlFor = attributes[prop];\r\n      }\r\n      else {\r\n        el.setAttribute(prop, attributes[prop]);\r\n      }\r\n    }\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * Adds class to an element\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element Element to add class to\r\n   * @param {String} className Class to add to an element\r\n   */\r\n  function addClass(element, className) {\r\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\r\n      element.className += (element.className ? ' ' : '') + className;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wraps element with another element\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element Element to wrap\r\n   * @param {HTMLElement|String} wrapper Element to wrap with\r\n   * @param {Object} [attributes] Attributes to set on a wrapper\r\n   * @return {HTMLElement} wrapper\r\n   */\r\n  function wrapElement(element, wrapper, attributes) {\r\n    if (typeof wrapper === 'string') {\r\n      wrapper = makeElement(wrapper, attributes);\r\n    }\r\n    if (element.parentNode) {\r\n      element.parentNode.replaceChild(wrapper, element);\r\n    }\r\n    wrapper.appendChild(element);\r\n    return wrapper;\r\n  }\r\n\r\n  /**\r\n   * Returns element scroll offsets\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element Element to operate on\r\n   * @return {Object} Object with left/top values\r\n   */\r\n  function getScrollLeftTop(element) {\r\n\r\n    var left = 0,\r\n        top = 0,\r\n        docElement = fabric.document.documentElement,\r\n        body = fabric.document.body || {\r\n          scrollLeft: 0, scrollTop: 0\r\n        };\r\n\r\n    // While loop checks (and then sets element to) .parentNode OR .host\r\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\r\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\r\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\r\n    while (element && (element.parentNode || element.host)) {\r\n\r\n      // Set element to element parent, or 'host' in case of ShadowDOM\r\n      element = element.parentNode || element.host;\r\n\r\n      if (element === fabric.document) {\r\n        left = body.scrollLeft || docElement.scrollLeft || 0;\r\n        top = body.scrollTop ||  docElement.scrollTop || 0;\r\n      }\r\n      else {\r\n        left += element.scrollLeft || 0;\r\n        top += element.scrollTop || 0;\r\n      }\r\n\r\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return { left: left, top: top };\r\n  }\r\n\r\n  /**\r\n   * Returns offset for a given element\r\n   * @function\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element Element to get offset for\r\n   * @return {Object} Object with \"left\" and \"top\" properties\r\n   */\r\n  function getElementOffset(element) {\r\n    var docElem,\r\n        doc = element && element.ownerDocument,\r\n        box = { left: 0, top: 0 },\r\n        offset = { left: 0, top: 0 },\r\n        scrollLeftTop,\r\n        offsetAttributes = {\r\n          borderLeftWidth: 'left',\r\n          borderTopWidth:  'top',\r\n          paddingLeft:     'left',\r\n          paddingTop:      'top'\r\n        };\r\n\r\n    if (!doc) {\r\n      return offset;\r\n    }\r\n\r\n    for (var attr in offsetAttributes) {\r\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\r\n    }\r\n\r\n    docElem = doc.documentElement;\r\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\r\n      box = element.getBoundingClientRect();\r\n    }\r\n\r\n    scrollLeftTop = getScrollLeftTop(element);\r\n\r\n    return {\r\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\r\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns style attribute value of a given element\r\n   * @memberOf fabric.util\r\n   * @param {HTMLElement} element Element to get style attribute for\r\n   * @param {String} attr Style attribute to get for element\r\n   * @return {String} Style attribute value of the given element.\r\n   */\r\n  var getElementStyle;\r\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\r\n    getElementStyle = function(element, attr) {\r\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\r\n      return style ? style[attr] : undefined;\r\n    };\r\n  }\r\n  else {\r\n    getElementStyle = function(element, attr) {\r\n      var value = element.style[attr];\r\n      if (!value && element.currentStyle) {\r\n        value = element.currentStyle[attr];\r\n      }\r\n      return value;\r\n    };\r\n  }\r\n\r\n  (function () {\r\n    var style = fabric.document.documentElement.style,\r\n        selectProp = 'userSelect' in style\r\n          ? 'userSelect'\r\n          : 'MozUserSelect' in style\r\n            ? 'MozUserSelect'\r\n            : 'WebkitUserSelect' in style\r\n              ? 'WebkitUserSelect'\r\n              : 'KhtmlUserSelect' in style\r\n                ? 'KhtmlUserSelect'\r\n                : '';\r\n\r\n    /**\r\n     * Makes element unselectable\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to make unselectable\r\n     * @return {HTMLElement} Element that was passed in\r\n     */\r\n    function makeElementUnselectable(element) {\r\n      if (typeof element.onselectstart !== 'undefined') {\r\n        element.onselectstart = fabric.util.falseFunction;\r\n      }\r\n      if (selectProp) {\r\n        element.style[selectProp] = 'none';\r\n      }\r\n      else if (typeof element.unselectable === 'string') {\r\n        element.unselectable = 'on';\r\n      }\r\n      return element;\r\n    }\r\n\r\n    /**\r\n     * Makes element selectable\r\n     * @memberOf fabric.util\r\n     * @param {HTMLElement} element Element to make selectable\r\n     * @return {HTMLElement} Element that was passed in\r\n     */\r\n    function makeElementSelectable(element) {\r\n      if (typeof element.onselectstart !== 'undefined') {\r\n        element.onselectstart = null;\r\n      }\r\n      if (selectProp) {\r\n        element.style[selectProp] = '';\r\n      }\r\n      else if (typeof element.unselectable === 'string') {\r\n        element.unselectable = '';\r\n      }\r\n      return element;\r\n    }\r\n\r\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\r\n    fabric.util.makeElementSelectable = makeElementSelectable;\r\n  })();\r\n\r\n  function getNodeCanvas(element) {\r\n    var impl = fabric.jsdomImplForWrapper(element);\r\n    return impl._canvas || impl._image;\r\n  };\r\n\r\n  function cleanUpJsdomNode(element) {\r\n    if (!fabric.isLikelyNode) {\r\n      return;\r\n    }\r\n    var impl = fabric.jsdomImplForWrapper(element);\r\n    if (impl) {\r\n      impl._image = null;\r\n      impl._canvas = null;\r\n      // unsure if necessary\r\n      impl._currentSrc = null;\r\n      impl._attributes = null;\r\n      impl._classList = null;\r\n    }\r\n  }\r\n\r\n  function setImageSmoothing(ctx, value) {\r\n    ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\r\n      || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\r\n    ctx.imageSmoothingEnabled = value;\r\n  }\r\n\r\n  /**\r\n   * setImageSmoothing sets the context imageSmoothingEnabled property.\r\n   * Used by canvas and by ImageObject.\r\n   * @memberOf fabric.util\r\n   * @since 4.0.0\r\n   * @param {HTMLRenderingContext2D} ctx to set on\r\n   * @param {Boolean} value true or false\r\n   */\r\n  fabric.util.setImageSmoothing = setImageSmoothing;\r\n  fabric.util.getById = getById;\r\n  fabric.util.toArray = toArray;\r\n  fabric.util.addClass = addClass;\r\n  fabric.util.makeElement = makeElement;\r\n  fabric.util.wrapElement = wrapElement;\r\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\r\n  fabric.util.getElementOffset = getElementOffset;\r\n  fabric.util.getNodeCanvas = getNodeCanvas;\r\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\r\n\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  function addParamToUrl(url, param) {\r\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\r\n  }\r\n\r\n  function emptyFn() { }\r\n\r\n  /**\r\n   * Cross-browser abstraction for sending XMLHttpRequest\r\n   * @memberOf fabric.util\r\n   * @param {String} url URL to send XMLHttpRequest to\r\n   * @param {Object} [options] Options object\r\n   * @param {String} [options.method=\"GET\"]\r\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\r\n   * @param {String} [options.body] body to send with POST or PUT request\r\n   * @param {Function} options.onComplete Callback to invoke when request is completed\r\n   * @return {XMLHttpRequest} request\r\n   */\r\n  function request(url, options) {\r\n    options || (options = { });\r\n\r\n    var method = options.method ? options.method.toUpperCase() : 'GET',\r\n        onComplete = options.onComplete || function() { },\r\n        xhr = new fabric.window.XMLHttpRequest(),\r\n        body = options.body || options.parameters;\r\n\r\n    /** @ignore */\r\n    xhr.onreadystatechange = function() {\r\n      if (xhr.readyState === 4) {\r\n        onComplete(xhr);\r\n        xhr.onreadystatechange = emptyFn;\r\n      }\r\n    };\r\n\r\n    if (method === 'GET') {\r\n      body = null;\r\n      if (typeof options.parameters === 'string') {\r\n        url = addParamToUrl(url, options.parameters);\r\n      }\r\n    }\r\n\r\n    xhr.open(method, url, true);\r\n\r\n    if (method === 'POST' || method === 'PUT') {\r\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    }\r\n\r\n    xhr.send(body);\r\n    return xhr;\r\n  }\r\n\r\n  fabric.util.request = request;\r\n})();\r\n\r\n\r\n/**\r\n * Wrapper around `console.log` (when available)\r\n * @param {*} [values] Values to log\r\n */\r\nfabric.log = console.log;\r\n\r\n/**\r\n * Wrapper around `console.warn` (when available)\r\n * @param {*} [values] Values to log as a warning\r\n */\r\nfabric.warn = console.warn;\r\n\r\n\r\n(function() {\r\n\r\n  function noop() {\r\n    return false;\r\n  }\r\n\r\n  function defaultEasing(t, b, c, d) {\r\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n  }\r\n\r\n  /**\r\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\r\n   * @memberOf fabric.util\r\n   * @param {Object} [options] Animation options\r\n   * @param {Function} [options.onChange] Callback; invoked on every value change\r\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n   * @param {Number} [options.startValue=0] Starting value\r\n   * @param {Number} [options.endValue=100] Ending value\r\n   * @param {Number} [options.byValue=100] Value to modify the property by\r\n   * @param {Function} [options.easing] Easing function\r\n   * @param {Number} [options.duration=500] Duration of change (in ms)\r\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\r\n   * @returns {Function} abort function\r\n   */\r\n  function animate(options) {\r\n    var cancel = false;\r\n    requestAnimFrame(function(timestamp) {\r\n      options || (options = { });\r\n\r\n      var start = timestamp || +new Date(),\r\n          duration = options.duration || 500,\r\n          finish = start + duration, time,\r\n          onChange = options.onChange || noop,\r\n          abort = options.abort || noop,\r\n          onComplete = options.onComplete || noop,\r\n          easing = options.easing || defaultEasing,\r\n          startValue = 'startValue' in options ? options.startValue : 0,\r\n          endValue = 'endValue' in options ? options.endValue : 100,\r\n          byValue = options.byValue || endValue - startValue;\r\n\r\n      options.onStart && options.onStart();\r\n\r\n      (function tick(ticktime) {\r\n        // TODO: move abort call after calculation\r\n        // and pass (current,valuePerc, timePerc) as arguments\r\n        time = ticktime || +new Date();\r\n        var currentTime = time > finish ? duration : (time - start),\r\n            timePerc = currentTime / duration,\r\n            current = easing(currentTime, startValue, byValue, duration),\r\n            valuePerc = Math.abs((current - startValue) / byValue);\r\n        if (cancel) {\r\n          return;\r\n        }\r\n        if (abort(current, valuePerc, timePerc)) {\r\n          // remove this in 4.0\r\n          // does to even make sense to abort and run onComplete?\r\n          onComplete(endValue, 1, 1);\r\n          return;\r\n        }\r\n        if (time > finish) {\r\n          onChange(endValue, 1, 1);\r\n          onComplete(endValue, 1, 1);\r\n          return;\r\n        }\r\n        else {\r\n          onChange(current, valuePerc, timePerc);\r\n          requestAnimFrame(tick);\r\n        }\r\n      })(start);\r\n    });\r\n    return function() {\r\n      cancel = true;\r\n    };\r\n  }\r\n\r\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\r\n                          fabric.window.webkitRequestAnimationFrame ||\r\n                          fabric.window.mozRequestAnimationFrame    ||\r\n                          fabric.window.oRequestAnimationFrame      ||\r\n                          fabric.window.msRequestAnimationFrame     ||\r\n                          function(callback) {\r\n                            return fabric.window.setTimeout(callback, 1000 / 60);\r\n                          };\r\n\r\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\r\n\r\n  /**\r\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\r\n   * @memberOf fabric.util\r\n   * @param {Function} callback Callback to invoke\r\n   * @param {DOMElement} element optional Element to associate with animation\r\n   */\r\n  function requestAnimFrame() {\r\n    return _requestAnimFrame.apply(fabric.window, arguments);\r\n  }\r\n\r\n  function cancelAnimFrame() {\r\n    return _cancelAnimFrame.apply(fabric.window, arguments);\r\n  }\r\n\r\n  fabric.util.animate = animate;\r\n  fabric.util.requestAnimFrame = requestAnimFrame;\r\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\r\n})();\r\n\r\n\r\n(function() {\r\n  // Calculate an in-between color. Returns a \"rgba()\" string.\r\n  // Credit: Edwin Martin <edwin@bitstorm.org>\r\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\r\n  function calculateColor(begin, end, pos) {\r\n    var color = 'rgba('\r\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\r\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\r\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\r\n\r\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\r\n    color += ')';\r\n    return color;\r\n  }\r\n\r\n  /**\r\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\r\n   * @memberOf fabric.util\r\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\r\n   * @param {String} toColor The starting color in hex or rgb(a) format.\r\n   * @param {Number} [duration] Duration of change (in ms).\r\n   * @param {Object} [options] Animation options\r\n   * @param {Function} [options.onChange] Callback; invoked on every value change\r\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\r\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\r\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\r\n   * @returns {Function} abort function\r\n   */\r\n  function animateColor(fromColor, toColor, duration, options) {\r\n    var startColor = new fabric.Color(fromColor).getSource(),\r\n        endColor = new fabric.Color(toColor).getSource(),\r\n        originalOnComplete = options.onComplete,\r\n        originalOnChange = options.onChange;\r\n    options = options || {};\r\n\r\n    return fabric.util.animate(fabric.util.object.extend(options, {\r\n      duration: duration || 500,\r\n      startValue: startColor,\r\n      endValue: endColor,\r\n      byValue: endColor,\r\n      easing: function (currentTime, startValue, byValue, duration) {\r\n        var posValue = options.colorEasing\r\n          ? options.colorEasing(currentTime, duration)\r\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\r\n        return calculateColor(startValue, byValue, posValue);\r\n      },\r\n      // has to take in account for color restoring;\r\n      onComplete: function(current, valuePerc, timePerc) {\r\n        if (originalOnComplete) {\r\n          return originalOnComplete(\r\n            calculateColor(endColor, endColor, 0),\r\n            valuePerc,\r\n            timePerc\r\n          );\r\n        }\r\n      },\r\n      onChange: function(current, valuePerc, timePerc) {\r\n        if (originalOnChange) {\r\n          if (Array.isArray(current)) {\r\n            return originalOnChange(\r\n              calculateColor(current, current, 0),\r\n              valuePerc,\r\n              timePerc\r\n            );\r\n          }\r\n          originalOnChange(current, valuePerc, timePerc);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  fabric.util.animateColor = animateColor;\r\n\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  function normalize(a, c, p, s) {\r\n    if (a < Math.abs(c)) {\r\n      a = c;\r\n      s = p / 4;\r\n    }\r\n    else {\r\n      //handle the 0/0 case:\r\n      if (c === 0 && a === 0) {\r\n        s = p / (2 * Math.PI) * Math.asin(1);\r\n      }\r\n      else {\r\n        s = p / (2 * Math.PI) * Math.asin(c / a);\r\n      }\r\n    }\r\n    return { a: a, c: c, p: p, s: s };\r\n  }\r\n\r\n  function elastic(opts, t, d) {\r\n    return opts.a *\r\n      Math.pow(2, 10 * (t -= 1)) *\r\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\r\n  }\r\n\r\n  /**\r\n   * Cubic easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutCubic(t, b, c, d) {\r\n    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Cubic easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutCubic(t, b, c, d) {\r\n    t /= d / 2;\r\n    if (t < 1) {\r\n      return c / 2 * t * t * t + b;\r\n    }\r\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n  }\r\n\r\n  /**\r\n   * Quartic easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInQuart(t, b, c, d) {\r\n    return c * (t /= d) * t * t * t + b;\r\n  }\r\n\r\n  /**\r\n   * Quartic easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutQuart(t, b, c, d) {\r\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Quartic easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutQuart(t, b, c, d) {\r\n    t /= d / 2;\r\n    if (t < 1) {\r\n      return c / 2 * t * t * t * t + b;\r\n    }\r\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n  }\r\n\r\n  /**\r\n   * Quintic easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInQuint(t, b, c, d) {\r\n    return c * (t /= d) * t * t * t * t + b;\r\n  }\r\n\r\n  /**\r\n   * Quintic easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutQuint(t, b, c, d) {\r\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Quintic easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutQuint(t, b, c, d) {\r\n    t /= d / 2;\r\n    if (t < 1) {\r\n      return c / 2 * t * t * t * t * t + b;\r\n    }\r\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n  }\r\n\r\n  /**\r\n   * Sinusoidal easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInSine(t, b, c, d) {\r\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n  }\r\n\r\n  /**\r\n   * Sinusoidal easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutSine(t, b, c, d) {\r\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n  }\r\n\r\n  /**\r\n   * Sinusoidal easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutSine(t, b, c, d) {\r\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Exponential easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInExpo(t, b, c, d) {\r\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n  }\r\n\r\n  /**\r\n   * Exponential easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutExpo(t, b, c, d) {\r\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Exponential easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutExpo(t, b, c, d) {\r\n    if (t === 0) {\r\n      return b;\r\n    }\r\n    if (t === d) {\r\n      return b + c;\r\n    }\r\n    t /= d / 2;\r\n    if (t < 1) {\r\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n    }\r\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n  }\r\n\r\n  /**\r\n   * Circular easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInCirc(t, b, c, d) {\r\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Circular easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutCirc(t, b, c, d) {\r\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n  }\r\n\r\n  /**\r\n   * Circular easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutCirc(t, b, c, d) {\r\n    t /= d / 2;\r\n    if (t < 1) {\r\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n    }\r\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Elastic easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInElastic(t, b, c, d) {\r\n    var s = 1.70158, p = 0, a = c;\r\n    if (t === 0) {\r\n      return b;\r\n    }\r\n    t /= d;\r\n    if (t === 1) {\r\n      return b + c;\r\n    }\r\n    if (!p) {\r\n      p = d * 0.3;\r\n    }\r\n    var opts = normalize(a, c, p, s);\r\n    return -elastic(opts, t, d) + b;\r\n  }\r\n\r\n  /**\r\n   * Elastic easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutElastic(t, b, c, d) {\r\n    var s = 1.70158, p = 0, a = c;\r\n    if (t === 0) {\r\n      return b;\r\n    }\r\n    t /= d;\r\n    if (t === 1) {\r\n      return b + c;\r\n    }\r\n    if (!p) {\r\n      p = d * 0.3;\r\n    }\r\n    var opts = normalize(a, c, p, s);\r\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\r\n  }\r\n\r\n  /**\r\n   * Elastic easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutElastic(t, b, c, d) {\r\n    var s = 1.70158, p = 0, a = c;\r\n    if (t === 0) {\r\n      return b;\r\n    }\r\n    t /= d / 2;\r\n    if (t === 2) {\r\n      return b + c;\r\n    }\r\n    if (!p) {\r\n      p = d * (0.3 * 1.5);\r\n    }\r\n    var opts = normalize(a, c, p, s);\r\n    if (t < 1) {\r\n      return -0.5 * elastic(opts, t, d) + b;\r\n    }\r\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\r\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\r\n  }\r\n\r\n  /**\r\n   * Backwards easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInBack(t, b, c, d, s) {\r\n    if (s === undefined) {\r\n      s = 1.70158;\r\n    }\r\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n  }\r\n\r\n  /**\r\n   * Backwards easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutBack(t, b, c, d, s) {\r\n    if (s === undefined) {\r\n      s = 1.70158;\r\n    }\r\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n  }\r\n\r\n  /**\r\n   * Backwards easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutBack(t, b, c, d, s) {\r\n    if (s === undefined) {\r\n      s = 1.70158;\r\n    }\r\n    t /= d / 2;\r\n    if (t < 1) {\r\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n    }\r\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n  }\r\n\r\n  /**\r\n   * Bouncing easing in\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInBounce(t, b, c, d) {\r\n    return c - easeOutBounce (d - t, 0, c, d) + b;\r\n  }\r\n\r\n  /**\r\n   * Bouncing easing out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeOutBounce(t, b, c, d) {\r\n    if ((t /= d) < (1 / 2.75)) {\r\n      return c * (7.5625 * t * t) + b;\r\n    }\r\n    else if (t < (2 / 2.75)) {\r\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\r\n    }\r\n    else if (t < (2.5 / 2.75)) {\r\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\r\n    }\r\n    else {\r\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bouncing easing in and out\r\n   * @memberOf fabric.util.ease\r\n   */\r\n  function easeInOutBounce(t, b, c, d) {\r\n    if (t < d / 2) {\r\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\r\n    }\r\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n  }\r\n\r\n  /**\r\n   * Easing functions\r\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\r\n   * @namespace fabric.util.ease\r\n   */\r\n  fabric.util.ease = {\r\n\r\n    /**\r\n     * Quadratic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    easeInQuad: function(t, b, c, d) {\r\n      return c * (t /= d) * t + b;\r\n    },\r\n\r\n    /**\r\n     * Quadratic easing out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    easeOutQuad: function(t, b, c, d) {\r\n      return -c * (t /= d) * (t - 2) + b;\r\n    },\r\n\r\n    /**\r\n     * Quadratic easing in and out\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    easeInOutQuad: function(t, b, c, d) {\r\n      t /= (d / 2);\r\n      if (t < 1) {\r\n        return c / 2 * t * t + b;\r\n      }\r\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n    },\r\n\r\n    /**\r\n     * Cubic easing in\r\n     * @memberOf fabric.util.ease\r\n     */\r\n    easeInCubic: function(t, b, c, d) {\r\n      return c * (t /= d) * t * t + b;\r\n    },\r\n\r\n    easeOutCubic: easeOutCubic,\r\n    easeInOutCubic: easeInOutCubic,\r\n    easeInQuart: easeInQuart,\r\n    easeOutQuart: easeOutQuart,\r\n    easeInOutQuart: easeInOutQuart,\r\n    easeInQuint: easeInQuint,\r\n    easeOutQuint: easeOutQuint,\r\n    easeInOutQuint: easeInOutQuint,\r\n    easeInSine: easeInSine,\r\n    easeOutSine: easeOutSine,\r\n    easeInOutSine: easeInOutSine,\r\n    easeInExpo: easeInExpo,\r\n    easeOutExpo: easeOutExpo,\r\n    easeInOutExpo: easeInOutExpo,\r\n    easeInCirc: easeInCirc,\r\n    easeOutCirc: easeOutCirc,\r\n    easeInOutCirc: easeInOutCirc,\r\n    easeInElastic: easeInElastic,\r\n    easeOutElastic: easeOutElastic,\r\n    easeInOutElastic: easeInOutElastic,\r\n    easeInBack: easeInBack,\r\n    easeOutBack: easeOutBack,\r\n    easeInOutBack: easeInOutBack,\r\n    easeInBounce: easeInBounce,\r\n    easeOutBounce: easeOutBounce,\r\n    easeInOutBounce: easeInOutBounce\r\n  };\r\n\r\n})();\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  /**\r\n   * @name fabric\r\n   * @namespace\r\n   */\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend,\r\n      clone = fabric.util.object.clone,\r\n      toFixed = fabric.util.toFixed,\r\n      parseUnit = fabric.util.parseUnit,\r\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\r\n\r\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\r\n        'image', 'text'],\r\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\r\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\r\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\r\n\r\n      attributesMap = {\r\n        cx:                   'left',\r\n        x:                    'left',\r\n        r:                    'radius',\r\n        cy:                   'top',\r\n        y:                    'top',\r\n        display:              'visible',\r\n        visibility:           'visible',\r\n        transform:            'transformMatrix',\r\n        'fill-opacity':       'fillOpacity',\r\n        'fill-rule':          'fillRule',\r\n        'font-family':        'fontFamily',\r\n        'font-size':          'fontSize',\r\n        'font-style':         'fontStyle',\r\n        'font-weight':        'fontWeight',\r\n        'letter-spacing':     'charSpacing',\r\n        'paint-order':        'paintFirst',\r\n        'stroke-dasharray':   'strokeDashArray',\r\n        'stroke-dashoffset':  'strokeDashOffset',\r\n        'stroke-linecap':     'strokeLineCap',\r\n        'stroke-linejoin':    'strokeLineJoin',\r\n        'stroke-miterlimit':  'strokeMiterLimit',\r\n        'stroke-opacity':     'strokeOpacity',\r\n        'stroke-width':       'strokeWidth',\r\n        'text-decoration':    'textDecoration',\r\n        'text-anchor':        'textAnchor',\r\n        opacity:              'opacity',\r\n        'clip-path':          'clipPath',\r\n        'clip-rule':          'clipRule',\r\n        'vector-effect':      'strokeUniform',\r\n        'image-rendering':    'imageSmoothing',\r\n      },\r\n\r\n      colorAttributes = {\r\n        stroke: 'strokeOpacity',\r\n        fill:   'fillOpacity'\r\n      },\r\n\r\n      fSize = 'font-size', cPath = 'clip-path';\r\n\r\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\r\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\r\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\r\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\r\n\r\n  fabric.cssRules = { };\r\n  fabric.gradientDefs = { };\r\n  fabric.clipPaths = { };\r\n\r\n  function normalizeAttr(attr) {\r\n    // transform attribute names\r\n    if (attr in attributesMap) {\r\n      return attributesMap[attr];\r\n    }\r\n    return attr;\r\n  }\r\n\r\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\r\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\r\n        parsed;\r\n\r\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\r\n      value = '';\r\n    }\r\n    else if (attr === 'strokeUniform') {\r\n      return (value === 'non-scaling-stroke');\r\n    }\r\n    else if (attr === 'strokeDashArray') {\r\n      if (value === 'none') {\r\n        value = null;\r\n      }\r\n      else {\r\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\r\n      }\r\n    }\r\n    else if (attr === 'transformMatrix') {\r\n      if (parentAttributes && parentAttributes.transformMatrix) {\r\n        value = multiplyTransformMatrices(\r\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\r\n      }\r\n      else {\r\n        value = fabric.parseTransformAttribute(value);\r\n      }\r\n    }\r\n    else if (attr === 'visible') {\r\n      value = value !== 'none' && value !== 'hidden';\r\n      // display=none on parent element always takes precedence over child element\r\n      if (parentAttributes && parentAttributes.visible === false) {\r\n        value = false;\r\n      }\r\n    }\r\n    else if (attr === 'opacity') {\r\n      value = parseFloat(value);\r\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\r\n        value *= parentAttributes.opacity;\r\n      }\r\n    }\r\n    else if (attr === 'textAnchor' /* text-anchor */) {\r\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\r\n    }\r\n    else if (attr === 'charSpacing') {\r\n      // parseUnit returns px and we convert it to em\r\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\r\n    }\r\n    else if (attr === 'paintFirst') {\r\n      var fillIndex = value.indexOf('fill');\r\n      var strokeIndex = value.indexOf('stroke');\r\n      var value = 'fill';\r\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\r\n        value = 'stroke';\r\n      }\r\n      else if (fillIndex === -1 && strokeIndex > -1) {\r\n        value = 'stroke';\r\n      }\r\n    }\r\n    else if (attr === 'href' || attr === 'xlink:href' || attr === 'font') {\r\n      return value;\r\n    }\r\n    else if (attr === 'imageSmoothing') {\r\n      return (value === 'optimizeQuality');\r\n    }\r\n    else {\r\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\r\n    }\r\n\r\n    return (!isArray && isNaN(parsed) ? value : parsed);\r\n  }\r\n\r\n  /**\r\n    * @private\r\n    */\r\n  function getSvgRegex(arr) {\r\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} attributes Array of attributes to parse\r\n   */\r\n  function _setStrokeFillOpacity(attributes) {\r\n    for (var attr in colorAttributes) {\r\n\r\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\r\n        continue;\r\n      }\r\n\r\n      if (typeof attributes[attr] === 'undefined') {\r\n        if (!fabric.Object.prototype[attr]) {\r\n          continue;\r\n        }\r\n        attributes[attr] = fabric.Object.prototype[attr];\r\n      }\r\n\r\n      if (attributes[attr].indexOf('url(') === 0) {\r\n        continue;\r\n      }\r\n\r\n      var color = new fabric.Color(attributes[attr]);\r\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\r\n    }\r\n    return attributes;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function _getMultipleNodes(doc, nodeNames) {\r\n    var nodeName, nodeArray = [], nodeList, i, len;\r\n    for (i = 0, len = nodeNames.length; i < len; i++) {\r\n      nodeName = nodeNames[i];\r\n      nodeList = doc.getElementsByTagName(nodeName);\r\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\r\n    }\r\n    return nodeArray;\r\n  }\r\n\r\n  /**\r\n   * Parses \"transform\" attribute, returning an array of values\r\n   * @static\r\n   * @function\r\n   * @memberOf fabric\r\n   * @param {String} attributeValue String containing attribute value\r\n   * @return {Array} Array of 6 elements representing transformation matrix\r\n   */\r\n  fabric.parseTransformAttribute = (function() {\r\n    function rotateMatrix(matrix, args) {\r\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\r\n          x = 0, y = 0;\r\n      if (args.length === 3) {\r\n        x = args[1];\r\n        y = args[2];\r\n      }\r\n\r\n      matrix[0] = cos;\r\n      matrix[1] = sin;\r\n      matrix[2] = -sin;\r\n      matrix[3] = cos;\r\n      matrix[4] = x - (cos * x - sin * y);\r\n      matrix[5] = y - (sin * x + cos * y);\r\n    }\r\n\r\n    function scaleMatrix(matrix, args) {\r\n      var multiplierX = args[0],\r\n          multiplierY = (args.length === 2) ? args[1] : args[0];\r\n\r\n      matrix[0] = multiplierX;\r\n      matrix[3] = multiplierY;\r\n    }\r\n\r\n    function skewMatrix(matrix, args, pos) {\r\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\r\n    }\r\n\r\n    function translateMatrix(matrix, args) {\r\n      matrix[4] = args[0];\r\n      if (args.length === 2) {\r\n        matrix[5] = args[1];\r\n      }\r\n    }\r\n\r\n    // identity matrix\r\n    var iMatrix = fabric.iMatrix,\r\n\r\n        // == begin transform regexp\r\n        number = fabric.reNum,\r\n\r\n        commaWsp = fabric.commaWsp,\r\n\r\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\r\n\r\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                    commaWsp + '(' + number + ')' +\r\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\r\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\r\n\r\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\r\n                  '(' + number + ')' + commaWsp +\r\n                  '(' + number + ')' + commaWsp +\r\n                  '(' + number + ')' + commaWsp +\r\n                  '(' + number + ')' + commaWsp +\r\n                  '(' + number + ')' + commaWsp +\r\n                  '(' + number + ')' +\r\n                  '\\\\s*\\\\))',\r\n\r\n        transform = '(?:' +\r\n                    matrix + '|' +\r\n                    translate + '|' +\r\n                    scale + '|' +\r\n                    rotate + '|' +\r\n                    skewX + '|' +\r\n                    skewY +\r\n                    ')',\r\n\r\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\r\n\r\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\r\n\r\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\r\n        reTransformList = new RegExp(transformList),\r\n        // == end transform regexp\r\n\r\n        reTransform = new RegExp(transform, 'g');\r\n\r\n    return function(attributeValue) {\r\n\r\n      // start with identity matrix\r\n      var matrix = iMatrix.concat(),\r\n          matrices = [];\r\n\r\n      // return if no argument was given or\r\n      // an argument does not match transform attribute regexp\r\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\r\n        return matrix;\r\n      }\r\n\r\n      attributeValue.replace(reTransform, function(match) {\r\n\r\n        var m = new RegExp(transform).exec(match).filter(function (match) {\r\n              // match !== '' && match != null\r\n              return (!!match);\r\n            }),\r\n            operation = m[1],\r\n            args = m.slice(2).map(parseFloat);\r\n\r\n        switch (operation) {\r\n          case 'translate':\r\n            translateMatrix(matrix, args);\r\n            break;\r\n          case 'rotate':\r\n            args[0] = fabric.util.degreesToRadians(args[0]);\r\n            rotateMatrix(matrix, args);\r\n            break;\r\n          case 'scale':\r\n            scaleMatrix(matrix, args);\r\n            break;\r\n          case 'skewX':\r\n            skewMatrix(matrix, args, 2);\r\n            break;\r\n          case 'skewY':\r\n            skewMatrix(matrix, args, 1);\r\n            break;\r\n          case 'matrix':\r\n            matrix = args;\r\n            break;\r\n        }\r\n\r\n        // snapshot current matrix into matrices array\r\n        matrices.push(matrix.concat());\r\n        // reset\r\n        matrix = iMatrix.concat();\r\n      });\r\n\r\n      var combinedMatrix = matrices[0];\r\n      while (matrices.length > 1) {\r\n        matrices.shift();\r\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\r\n      }\r\n      return combinedMatrix;\r\n    };\r\n  })();\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function parseStyleString(style, oStyle) {\r\n    var attr, value;\r\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\r\n      var pair = chunk.split(':');\r\n\r\n      attr = pair[0].trim().toLowerCase();\r\n      value =  pair[1].trim();\r\n\r\n      oStyle[attr] = value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function parseStyleObject(style, oStyle) {\r\n    var attr, value;\r\n    for (var prop in style) {\r\n      if (typeof style[prop] === 'undefined') {\r\n        continue;\r\n      }\r\n\r\n      attr = prop.toLowerCase();\r\n      value = style[prop];\r\n\r\n      oStyle[attr] = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function getGlobalStylesForElement(element, svgUid) {\r\n    var styles = { };\r\n    for (var rule in fabric.cssRules[svgUid]) {\r\n      if (elementMatchesRule(element, rule.split(' '))) {\r\n        for (var property in fabric.cssRules[svgUid][rule]) {\r\n          styles[property] = fabric.cssRules[svgUid][rule][property];\r\n        }\r\n      }\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function elementMatchesRule(element, selectors) {\r\n    var firstMatching, parentMatching = true;\r\n    //start from rightmost selector.\r\n    firstMatching = selectorMatches(element, selectors.pop());\r\n    if (firstMatching && selectors.length) {\r\n      parentMatching = doesSomeParentMatch(element, selectors);\r\n    }\r\n    return firstMatching && parentMatching && (selectors.length === 0);\r\n  }\r\n\r\n  function doesSomeParentMatch(element, selectors) {\r\n    var selector, parentMatching = true;\r\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\r\n      if (parentMatching) {\r\n        selector = selectors.pop();\r\n      }\r\n      element = element.parentNode;\r\n      parentMatching = selectorMatches(element, selector);\r\n    }\r\n    return selectors.length === 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function selectorMatches(element, selector) {\r\n    var nodeName = element.nodeName,\r\n        classNames = element.getAttribute('class'),\r\n        id = element.getAttribute('id'), matcher, i;\r\n    // i check if a selector matches slicing away part from it.\r\n    // if i get empty string i should match\r\n    matcher = new RegExp('^' + nodeName, 'i');\r\n    selector = selector.replace(matcher, '');\r\n    if (id && selector.length) {\r\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\r\n      selector = selector.replace(matcher, '');\r\n    }\r\n    if (classNames && selector.length) {\r\n      classNames = classNames.split(' ');\r\n      for (i = classNames.length; i--;) {\r\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\r\n        selector = selector.replace(matcher, '');\r\n      }\r\n    }\r\n    return selector.length === 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\r\n   */\r\n  function elementById(doc, id) {\r\n    var el;\r\n    doc.getElementById && (el = doc.getElementById(id));\r\n    if (el) {\r\n      return el;\r\n    }\r\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\r\n    for (i = 0, len = nodelist.length; i < len; i++) {\r\n      node = nodelist[i];\r\n      if (id === node.getAttribute('id')) {\r\n        return node;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function parseUseDirectives(doc) {\r\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\r\n    while (nodelist.length && i < nodelist.length) {\r\n      var el = nodelist[i],\r\n          xlinkAttribute = el.getAttribute('xlink:href') || el.getAttribute('href');\r\n\r\n      if (xlinkAttribute === null) {\r\n        return;\r\n      }\r\n\r\n      var xlink = xlinkAttribute.substr(1),\r\n          x = el.getAttribute('x') || 0,\r\n          y = el.getAttribute('y') || 0,\r\n          el2 = elementById(doc, xlink).cloneNode(true),\r\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\r\n          parentNode,\r\n          oldLength = nodelist.length, attr,\r\n          j,\r\n          attrs,\r\n          len,\r\n          namespace = fabric.svgNS;\r\n\r\n      applyViewboxTransform(el2);\r\n      if (/^svg$/i.test(el2.nodeName)) {\r\n        var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\r\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\r\n          attr = attrs.item(j);\r\n          el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\r\n        }\r\n        // el2.firstChild != null\r\n        while (el2.firstChild) {\r\n          el3.appendChild(el2.firstChild);\r\n        }\r\n        el2 = el3;\r\n      }\r\n\r\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\r\n        attr = attrs.item(j);\r\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\r\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\r\n          continue;\r\n        }\r\n\r\n        if (attr.nodeName === 'transform') {\r\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\r\n        }\r\n        else {\r\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\r\n        }\r\n      }\r\n\r\n      el2.setAttribute('transform', currentTrans);\r\n      el2.setAttribute('instantiated_by_use', '1');\r\n      el2.removeAttribute('id');\r\n      parentNode = el.parentNode;\r\n      parentNode.replaceChild(el2, el);\r\n      // some browsers do not shorten nodelist after replaceChild (IE8)\r\n      if (nodelist.length === oldLength) {\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n\r\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\r\n  // matches, e.g.: +14.56e-12, etc.\r\n  var reViewBoxAttrValue = new RegExp(\r\n    '^' +\r\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\r\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\r\n    '$'\r\n  );\r\n\r\n  /**\r\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\r\n   */\r\n  function applyViewboxTransform(element) {\r\n    if (!fabric.svgViewBoxElementsRegEx.test(element.nodeName)) {\r\n      return {};\r\n    }\r\n    var viewBoxAttr = element.getAttribute('viewBox'),\r\n        scaleX = 1,\r\n        scaleY = 1,\r\n        minX = 0,\r\n        minY = 0,\r\n        viewBoxWidth, viewBoxHeight, matrix, el,\r\n        widthAttr = element.getAttribute('width'),\r\n        heightAttr = element.getAttribute('height'),\r\n        x = element.getAttribute('x') || 0,\r\n        y = element.getAttribute('y') || 0,\r\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\r\n        missingViewBox = (!viewBoxAttr || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\r\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\r\n        toBeParsed = missingViewBox && missingDimAttr,\r\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\r\n\r\n    parsedDim.width = 0;\r\n    parsedDim.height = 0;\r\n    parsedDim.toBeParsed = toBeParsed;\r\n\r\n    if (missingViewBox) {\r\n      if (((x || y) && element.parentNode && element.parentNode.nodeName !== '#document')) {\r\n        translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\r\n        matrix = (element.getAttribute('transform') || '') + translateMatrix;\r\n        element.setAttribute('transform', matrix);\r\n        element.removeAttribute('x');\r\n        element.removeAttribute('y');\r\n      }\r\n    }\r\n\r\n    if (toBeParsed) {\r\n      return parsedDim;\r\n    }\r\n\r\n    if (missingViewBox) {\r\n      parsedDim.width = parseUnit(widthAttr);\r\n      parsedDim.height = parseUnit(heightAttr);\r\n      // set a transform for elements that have x y and are inner(only) SVGs\r\n      return parsedDim;\r\n    }\r\n    minX = -parseFloat(viewBoxAttr[1]);\r\n    minY = -parseFloat(viewBoxAttr[2]);\r\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\r\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\r\n    parsedDim.minX = minX;\r\n    parsedDim.minY = minY;\r\n    parsedDim.viewBoxWidth = viewBoxWidth;\r\n    parsedDim.viewBoxHeight = viewBoxHeight;\r\n    if (!missingDimAttr) {\r\n      parsedDim.width = parseUnit(widthAttr);\r\n      parsedDim.height = parseUnit(heightAttr);\r\n      scaleX = parsedDim.width / viewBoxWidth;\r\n      scaleY = parsedDim.height / viewBoxHeight;\r\n    }\r\n    else {\r\n      parsedDim.width = viewBoxWidth;\r\n      parsedDim.height = viewBoxHeight;\r\n    }\r\n\r\n    // default is to preserve aspect ratio\r\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\r\n    if (preserveAspectRatio.alignX !== 'none') {\r\n      //translate all container for the effect of Mid, Min, Max\r\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\r\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\r\n        // calculate additional translation to move the viewbox\r\n      }\r\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\r\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\r\n        // calculate additional translation to move the viewbox\r\n      }\r\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\r\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\r\n      if (preserveAspectRatio.alignX === 'Mid') {\r\n        widthDiff /= 2;\r\n      }\r\n      if (preserveAspectRatio.alignY === 'Mid') {\r\n        heightDiff /= 2;\r\n      }\r\n      if (preserveAspectRatio.alignX === 'Min') {\r\n        widthDiff = 0;\r\n      }\r\n      if (preserveAspectRatio.alignY === 'Min') {\r\n        heightDiff = 0;\r\n      }\r\n    }\r\n\r\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\r\n      return parsedDim;\r\n    }\r\n    if ((x || y) && element.parentNode.nodeName !== '#document') {\r\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\r\n    }\r\n\r\n    matrix = translateMatrix + ' matrix(' + scaleX +\r\n                  ' 0' +\r\n                  ' 0 ' +\r\n                  scaleY + ' ' +\r\n                  (minX * scaleX + widthDiff) + ' ' +\r\n                  (minY * scaleY + heightDiff) + ') ';\r\n    // seems unused.\r\n    // parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\r\n    if (element.nodeName === 'svg') {\r\n      el = element.ownerDocument.createElementNS(fabric.svgNS, 'g');\r\n      // element.firstChild != null\r\n      while (element.firstChild) {\r\n        el.appendChild(element.firstChild);\r\n      }\r\n      element.appendChild(el);\r\n    }\r\n    else {\r\n      el = element;\r\n      el.removeAttribute('x');\r\n      el.removeAttribute('y');\r\n      matrix = el.getAttribute('transform') + matrix;\r\n    }\r\n    el.setAttribute('transform', matrix);\r\n    return parsedDim;\r\n  }\r\n\r\n  function hasAncestorWithNodeName(element, nodeName) {\r\n    while (element && (element = element.parentNode)) {\r\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\r\n        && !element.getAttribute('instantiated_by_use')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\r\n   * @static\r\n   * @function\r\n   * @memberOf fabric\r\n   * @param {SVGDocument} doc SVG document to parse\r\n   * @param {Function} callback Callback to call when parsing is finished;\r\n   * It's being passed an array of elements (parsed from a document).\r\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n   * @param {Object} [parsingOptions] options for parsing document\r\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\r\n   */\r\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\r\n    if (!doc) {\r\n      return;\r\n    }\r\n\r\n    parseUseDirectives(doc);\r\n\r\n    var svgUid =  fabric.Object.__uid++, i, len,\r\n        options = applyViewboxTransform(doc),\r\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\r\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\r\n    options.svgUid = svgUid;\r\n\r\n    if (descendants.length === 0 && fabric.isLikelyNode) {\r\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\r\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\r\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\r\n      var arr = [];\r\n      for (i = 0, len = descendants.length; i < len; i++) {\r\n        arr[i] = descendants[i];\r\n      }\r\n      descendants = arr;\r\n    }\r\n\r\n    var elements = descendants.filter(function(el) {\r\n      applyViewboxTransform(el);\r\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\r\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\r\n    });\r\n    if (!elements || (elements && !elements.length)) {\r\n      callback && callback([], {});\r\n      return;\r\n    }\r\n    var clipPaths = { };\r\n    descendants.filter(function(el) {\r\n      return el.nodeName.replace('svg:', '') === 'clipPath';\r\n    }).forEach(function(el) {\r\n      var id = el.getAttribute('id');\r\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\r\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\r\n      });\r\n    });\r\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\r\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\r\n    fabric.clipPaths[svgUid] = clipPaths;\r\n    // Precedence of rules:   style > class > attribute\r\n    fabric.parseElements(elements, function(instances, elements) {\r\n      if (callback) {\r\n        callback(instances, options, elements, descendants);\r\n        delete fabric.gradientDefs[svgUid];\r\n        delete fabric.cssRules[svgUid];\r\n        delete fabric.clipPaths[svgUid];\r\n      }\r\n    }, clone(options), reviver, parsingOptions);\r\n  };\r\n\r\n  function recursivelyParseGradientsXlink(doc, gradient) {\r\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\r\n        xlinkAttr = 'xlink:href',\r\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\r\n        referencedGradient = elementById(doc, xLink);\r\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\r\n      recursivelyParseGradientsXlink(doc, referencedGradient);\r\n    }\r\n    gradientsAttrs.forEach(function(attr) {\r\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\r\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\r\n      }\r\n    });\r\n    if (!gradient.children.length) {\r\n      var referenceClone = referencedGradient.cloneNode(true);\r\n      while (referenceClone.firstChild) {\r\n        gradient.appendChild(referenceClone.firstChild);\r\n      }\r\n    }\r\n    gradient.removeAttribute(xlinkAttr);\r\n  }\r\n\r\n  var reFontDeclaration = new RegExp(\r\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\r\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\r\n      fabric.reNum +\r\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\r\n\r\n  extend(fabric, {\r\n    /**\r\n     * Parses a short font declaration, building adding its properties to a style object\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {String} value font declaration\r\n     * @param {Object} oStyle definition\r\n     */\r\n    parseFontDeclaration: function(value, oStyle) {\r\n      var match = value.match(reFontDeclaration);\r\n\r\n      if (!match) {\r\n        return;\r\n      }\r\n      var fontStyle = match[1],\r\n          // font variant is not used\r\n          // fontVariant = match[2],\r\n          fontWeight = match[3],\r\n          fontSize = match[4],\r\n          lineHeight = match[5],\r\n          fontFamily = match[6];\r\n\r\n      if (fontStyle) {\r\n        oStyle.fontStyle = fontStyle;\r\n      }\r\n      if (fontWeight) {\r\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\r\n      }\r\n      if (fontSize) {\r\n        oStyle.fontSize = parseUnit(fontSize);\r\n      }\r\n      if (fontFamily) {\r\n        oStyle.fontFamily = fontFamily;\r\n      }\r\n      if (lineHeight) {\r\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Parses an SVG document, returning all of the gradient declarations found in it\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {SVGDocument} doc SVG document to parse\r\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\r\n     */\r\n    getGradientDefs: function(doc) {\r\n      var tagArray = [\r\n            'linearGradient',\r\n            'radialGradient',\r\n            'svg:linearGradient',\r\n            'svg:radialGradient'],\r\n          elList = _getMultipleNodes(doc, tagArray),\r\n          el, j = 0, gradientDefs = { };\r\n      j = elList.length;\r\n      while (j--) {\r\n        el = elList[j];\r\n        if (el.getAttribute('xlink:href')) {\r\n          recursivelyParseGradientsXlink(doc, el);\r\n        }\r\n        gradientDefs[el.getAttribute('id')] = el;\r\n      }\r\n      return gradientDefs;\r\n    },\r\n\r\n    /**\r\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\r\n     * Parses parent \"g\" nodes recursively upwards.\r\n     * @static\r\n     * @memberOf fabric\r\n     * @param {DOMElement} element Element to parse\r\n     * @param {Array} attributes Array of attributes to parse\r\n     * @return {Object} object containing parsed attributes' names/values\r\n     */\r\n    parseAttributes: function(element, attributes, svgUid) {\r\n\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      var value,\r\n          parentAttributes = { },\r\n          fontSize, parentFontSize;\r\n\r\n      if (typeof svgUid === 'undefined') {\r\n        svgUid = element.getAttribute('svgUid');\r\n      }\r\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\r\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\r\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\r\n      }\r\n\r\n      var ownAttributes = attributes.reduce(function(memo, attr) {\r\n        value = element.getAttribute(attr);\r\n        if (value) { // eslint-disable-line\r\n          memo[attr] = value;\r\n        }\r\n        return memo;\r\n      }, { });\r\n      // add values parsed from style, which take precedence over attributes\r\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\r\n      var cssAttrs = extend(\r\n        getGlobalStylesForElement(element, svgUid),\r\n        fabric.parseStyleAttribute(element)\r\n      );\r\n      ownAttributes = extend(\r\n        ownAttributes,\r\n        cssAttrs\r\n      );\r\n      if (cssAttrs[cPath]) {\r\n        element.setAttribute(cPath, cssAttrs[cPath]);\r\n      }\r\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n      if (ownAttributes[fSize]) {\r\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\r\n        ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\r\n      }\r\n\r\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\r\n      for (var attr in ownAttributes) {\r\n        normalizedAttr = normalizeAttr(attr);\r\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\r\n        normalizedStyle[normalizedAttr] = normalizedValue;\r\n      }\r\n      if (normalizedStyle && normalizedStyle.font) {\r\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\r\n      }\r\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\r\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\r\n    },\r\n\r\n    /**\r\n     * Transforms an array of svg elements to corresponding fabric.* instances\r\n     * @static\r\n     * @memberOf fabric\r\n     * @param {Array} elements Array of elements to parse\r\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n     */\r\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\r\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\r\n    },\r\n\r\n    /**\r\n     * Parses \"style\" attribute, retuning an object with values\r\n     * @static\r\n     * @memberOf fabric\r\n     * @param {SVGElement} element Element to parse\r\n     * @return {Object} Objects with values parsed from style attribute of an element\r\n     */\r\n    parseStyleAttribute: function(element) {\r\n      var oStyle = { },\r\n          style = element.getAttribute('style');\r\n\r\n      if (!style) {\r\n        return oStyle;\r\n      }\r\n\r\n      if (typeof style === 'string') {\r\n        parseStyleString(style, oStyle);\r\n      }\r\n      else {\r\n        parseStyleObject(style, oStyle);\r\n      }\r\n\r\n      return oStyle;\r\n    },\r\n\r\n    /**\r\n     * Parses \"points\" attribute, returning an array of values\r\n     * @static\r\n     * @memberOf fabric\r\n     * @param {String} points points attribute string\r\n     * @return {Array} array of points\r\n     */\r\n    parsePointsAttribute: function(points) {\r\n\r\n      // points attribute is required and must not be empty\r\n      if (!points) {\r\n        return null;\r\n      }\r\n\r\n      // replace commas with whitespace and remove bookending whitespace\r\n      points = points.replace(/,/g, ' ').trim();\r\n\r\n      points = points.split(/\\s+/);\r\n      var parsedPoints = [], i, len;\r\n\r\n      for (i = 0, len = points.length; i < len; i += 2) {\r\n        parsedPoints.push({\r\n          x: parseFloat(points[i]),\r\n          y: parseFloat(points[i + 1])\r\n        });\r\n      }\r\n\r\n      // odd number of points is an error\r\n      // if (parsedPoints.length % 2 !== 0) {\r\n      //   return null;\r\n      // }\r\n\r\n      return parsedPoints;\r\n    },\r\n\r\n    /**\r\n     * Returns CSS rules for a given SVG document\r\n     * @static\r\n     * @function\r\n     * @memberOf fabric\r\n     * @param {SVGDocument} doc SVG document to parse\r\n     * @return {Object} CSS rules of this document\r\n     */\r\n    getCSSRules: function(doc) {\r\n      var styles = doc.getElementsByTagName('style'), i, len,\r\n          allRules = { }, rules;\r\n\r\n      // very crude parsing of style contents\r\n      for (i = 0, len = styles.length; i < len; i++) {\r\n        var styleContents = styles[i].textContent;\r\n\r\n        // remove comments\r\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\r\n        if (styleContents.trim() === '') {\r\n          continue;\r\n        }\r\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\r\n        rules = rules.map(function(rule) { return rule.trim(); });\r\n        // eslint-disable-next-line no-loop-func\r\n        rules.forEach(function(rule) {\r\n\r\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\r\n              ruleObj = { }, declaration = match[2].trim(),\r\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\r\n\r\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\r\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\r\n                property = pair[0],\r\n                value = pair[1];\r\n            ruleObj[property] = value;\r\n          }\r\n          rule = match[1];\r\n          rule.split(',').forEach(function(_rule) {\r\n            _rule = _rule.replace(/^svg/i, '').trim();\r\n            if (_rule === '') {\r\n              return;\r\n            }\r\n            if (allRules[_rule]) {\r\n              fabric.util.object.extend(allRules[_rule], ruleObj);\r\n            }\r\n            else {\r\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      return allRules;\r\n    },\r\n\r\n    /**\r\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\r\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\r\n     * @memberOf fabric\r\n     * @param {String} url\r\n     * @param {Function} callback\r\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n     * @param {Object} [options] Object containing options for parsing\r\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n     */\r\n    loadSVGFromURL: function(url, callback, reviver, options) {\r\n\r\n      url = url.replace(/^\\n\\s*/, '').trim();\r\n      new fabric.util.request(url, {\r\n        method: 'get',\r\n        onComplete: onComplete\r\n      });\r\n\r\n      function onComplete(r) {\r\n\r\n        var xml = r.responseXML;\r\n        if (!xml || !xml.documentElement) {\r\n          callback && callback(null);\r\n          return false;\r\n        }\r\n\r\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\r\n          callback && callback(results, _options, elements, allElements);\r\n        }, reviver, options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\r\n     * @memberOf fabric\r\n     * @param {String} string\r\n     * @param {Function} callback\r\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\r\n     * @param {Object} [options] Object containing options for parsing\r\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\r\n     */\r\n    loadSVGFromString: function(string, callback, reviver, options) {\r\n      var parser = new fabric.window.DOMParser(),\r\n          doc = parser.parseFromString(string.trim(), 'text/xml');\r\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\r\n        callback(results, _options, elements, allElements);\r\n      }, reviver, options);\r\n    }\r\n  });\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions, doc) {\r\n  this.elements = elements;\r\n  this.callback = callback;\r\n  this.options = options;\r\n  this.reviver = reviver;\r\n  this.svgUid = (options && options.svgUid) || 0;\r\n  this.parsingOptions = parsingOptions;\r\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\r\n  this.doc = doc;\r\n};\r\n\r\n(function(proto) {\r\n  proto.parse = function() {\r\n    this.instances = new Array(this.elements.length);\r\n    this.numElements = this.elements.length;\r\n    this.createObjects();\r\n  };\r\n\r\n  proto.createObjects = function() {\r\n    var _this = this;\r\n    this.elements.forEach(function(element, i) {\r\n      element.setAttribute('svgUid', _this.svgUid);\r\n      _this.createObject(element, i);\r\n    });\r\n  };\r\n\r\n  proto.findTag = function(el) {\r\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\r\n  };\r\n\r\n  proto.createObject = function(el, index) {\r\n    var klass = this.findTag(el);\r\n    if (klass && klass.fromElement) {\r\n      try {\r\n        klass.fromElement(el, this.createCallback(index, el), this.options);\r\n      }\r\n      catch (err) {\r\n        fabric.log(err);\r\n      }\r\n    }\r\n    else {\r\n      this.checkIfDone();\r\n    }\r\n  };\r\n\r\n  proto.createCallback = function(index, el) {\r\n    var _this = this;\r\n    return function(obj) {\r\n      var _options;\r\n      _this.resolveGradient(obj, el, 'fill');\r\n      _this.resolveGradient(obj, el, 'stroke');\r\n      if (obj instanceof fabric.Image && obj._originalElement) {\r\n        _options = obj.parsePreserveAspectRatioAttribute(el);\r\n      }\r\n      obj._removeTransformMatrix(_options);\r\n      _this.resolveClipPath(obj, el);\r\n      _this.reviver && _this.reviver(el, obj);\r\n      _this.instances[index] = obj;\r\n      _this.checkIfDone();\r\n    };\r\n  };\r\n\r\n  proto.extractPropertyDefinition = function(obj, property, storage) {\r\n    var value = obj[property], regex = this.regexUrl;\r\n    if (!regex.test(value)) {\r\n      return;\r\n    }\r\n    regex.lastIndex = 0;\r\n    var id = regex.exec(value)[1];\r\n    regex.lastIndex = 0;\r\n    return fabric[storage][this.svgUid][id];\r\n  };\r\n\r\n  proto.resolveGradient = function(obj, el, property) {\r\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\r\n    if (gradientDef) {\r\n      var opacityAttr = el.getAttribute(property + '-opacity');\r\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\r\n      obj.set(property, gradient);\r\n    }\r\n  };\r\n\r\n  proto.createClipPathCallback = function(obj, container) {\r\n    return function(_newObj) {\r\n      _newObj._removeTransformMatrix();\r\n      _newObj.fillRule = _newObj.clipRule;\r\n      container.push(_newObj);\r\n    };\r\n  };\r\n\r\n  proto.resolveClipPath = function(obj, usingElement) {\r\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\r\n        element, klass, objTransformInv, container, gTransform, options;\r\n    if (clipPath) {\r\n      container = [];\r\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\r\n      // move the clipPath tag as sibling to the real element that is using it\r\n      var clipPathTag = clipPath[0].parentNode;\r\n      var clipPathOwner = usingElement;\r\n      while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\r\n        clipPathOwner = clipPathOwner.parentNode;\r\n      }\r\n      clipPathOwner.parentNode.appendChild(clipPathTag);\r\n      for (var i = 0; i < clipPath.length; i++) {\r\n        element = clipPath[i];\r\n        klass = this.findTag(element);\r\n        klass.fromElement(\r\n          element,\r\n          this.createClipPathCallback(obj, container),\r\n          this.options\r\n        );\r\n      }\r\n      if (container.length === 1) {\r\n        clipPath = container[0];\r\n      }\r\n      else {\r\n        clipPath = new fabric.Group(container);\r\n      }\r\n      gTransform = fabric.util.multiplyTransformMatrices(\r\n        objTransformInv,\r\n        clipPath.calcTransformMatrix()\r\n      );\r\n      if (clipPath.clipPath) {\r\n        this.resolveClipPath(clipPath, clipPathOwner);\r\n      }\r\n      var options = fabric.util.qrDecompose(gTransform);\r\n      clipPath.flipX = false;\r\n      clipPath.flipY = false;\r\n      clipPath.set('scaleX', options.scaleX);\r\n      clipPath.set('scaleY', options.scaleY);\r\n      clipPath.angle = options.angle;\r\n      clipPath.skewX = options.skewX;\r\n      clipPath.skewY = 0;\r\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\r\n      obj.clipPath = clipPath;\r\n    }\r\n    else {\r\n      // if clip-path does not resolve to any element, delete the property.\r\n      delete obj.clipPath;\r\n    }\r\n  };\r\n\r\n  proto.checkIfDone = function() {\r\n    if (--this.numElements === 0) {\r\n      this.instances = this.instances.filter(function(el) {\r\n        // eslint-disable-next-line no-eq-null, eqeqeq\r\n        return el != null;\r\n      });\r\n      this.callback(this.instances, this.elements);\r\n    }\r\n  };\r\n})(fabric.ElementsParser.prototype);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n\r\n  var fabric = global.fabric || (global.fabric = { });\r\n\r\n  if (fabric.Point) {\r\n    fabric.warn('fabric.Point is already defined');\r\n    return;\r\n  }\r\n\r\n  fabric.Point = Point;\r\n\r\n  /**\r\n   * Point class\r\n   * @class fabric.Point\r\n   * @memberOf fabric\r\n   * @constructor\r\n   * @param {Number} x\r\n   * @param {Number} y\r\n   * @return {fabric.Point} thisArg\r\n   */\r\n  function Point(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  Point.prototype = /** @lends fabric.Point.prototype */ {\r\n\r\n    type: 'point',\r\n\r\n    constructor: Point,\r\n\r\n    /**\r\n     * Adds another point to this one and returns another one\r\n     * @param {fabric.Point} that\r\n     * @return {fabric.Point} new Point instance with added values\r\n     */\r\n    add: function (that) {\r\n      return new Point(this.x + that.x, this.y + that.y);\r\n    },\r\n\r\n    /**\r\n     * Adds another point to this one\r\n     * @param {fabric.Point} that\r\n     * @return {fabric.Point} thisArg\r\n     * @chainable\r\n     */\r\n    addEquals: function (that) {\r\n      this.x += that.x;\r\n      this.y += that.y;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Adds value to this point and returns a new one\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point} new Point with added value\r\n     */\r\n    scalarAdd: function (scalar) {\r\n      return new Point(this.x + scalar, this.y + scalar);\r\n    },\r\n\r\n    /**\r\n     * Adds value to this point\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point} thisArg\r\n     * @chainable\r\n     */\r\n    scalarAddEquals: function (scalar) {\r\n      this.x += scalar;\r\n      this.y += scalar;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Subtracts another point from this point and returns a new one\r\n     * @param {fabric.Point} that\r\n     * @return {fabric.Point} new Point object with subtracted values\r\n     */\r\n    subtract: function (that) {\r\n      return new Point(this.x - that.x, this.y - that.y);\r\n    },\r\n\r\n    /**\r\n     * Subtracts another point from this point\r\n     * @param {fabric.Point} that\r\n     * @return {fabric.Point} thisArg\r\n     * @chainable\r\n     */\r\n    subtractEquals: function (that) {\r\n      this.x -= that.x;\r\n      this.y -= that.y;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Subtracts value from this point and returns a new one\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point}\r\n     */\r\n    scalarSubtract: function (scalar) {\r\n      return new Point(this.x - scalar, this.y - scalar);\r\n    },\r\n\r\n    /**\r\n     * Subtracts value from this point\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point} thisArg\r\n     * @chainable\r\n     */\r\n    scalarSubtractEquals: function (scalar) {\r\n      this.x -= scalar;\r\n      this.y -= scalar;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Multiplies this point by a value and returns a new one\r\n     * TODO: rename in scalarMultiply in 2.0\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point}\r\n     */\r\n    multiply: function (scalar) {\r\n      return new Point(this.x * scalar, this.y * scalar);\r\n    },\r\n\r\n    /**\r\n     * Multiplies this point by a value\r\n     * TODO: rename in scalarMultiplyEquals in 2.0\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point} thisArg\r\n     * @chainable\r\n     */\r\n    multiplyEquals: function (scalar) {\r\n      this.x *= scalar;\r\n      this.y *= scalar;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Divides this point by a value and returns a new one\r\n     * TODO: rename in scalarDivide in 2.0\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point}\r\n     */\r\n    divide: function (scalar) {\r\n      return new Point(this.x / scalar, this.y / scalar);\r\n    },\r\n\r\n    /**\r\n     * Divides this point by a value\r\n     * TODO: rename in scalarDivideEquals in 2.0\r\n     * @param {Number} scalar\r\n     * @return {fabric.Point} thisArg\r\n     * @chainable\r\n     */\r\n    divideEquals: function (scalar) {\r\n      this.x /= scalar;\r\n      this.y /= scalar;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns true if this point is equal to another one\r\n     * @param {fabric.Point} that\r\n     * @return {Boolean}\r\n     */\r\n    eq: function (that) {\r\n      return (this.x === that.x && this.y === that.y);\r\n    },\r\n\r\n    /**\r\n     * Returns true if this point is less than another one\r\n     * @param {fabric.Point} that\r\n     * @return {Boolean}\r\n     */\r\n    lt: function (that) {\r\n      return (this.x < that.x && this.y < that.y);\r\n    },\r\n\r\n    /**\r\n     * Returns true if this point is less than or equal to another one\r\n     * @param {fabric.Point} that\r\n     * @return {Boolean}\r\n     */\r\n    lte: function (that) {\r\n      return (this.x <= that.x && this.y <= that.y);\r\n    },\r\n\r\n    /**\r\n\r\n     * Returns true if this point is greater another one\r\n     * @param {fabric.Point} that\r\n     * @return {Boolean}\r\n     */\r\n    gt: function (that) {\r\n      return (this.x > that.x && this.y > that.y);\r\n    },\r\n\r\n    /**\r\n     * Returns true if this point is greater than or equal to another one\r\n     * @param {fabric.Point} that\r\n     * @return {Boolean}\r\n     */\r\n    gte: function (that) {\r\n      return (this.x >= that.x && this.y >= that.y);\r\n    },\r\n\r\n    /**\r\n     * Returns new point which is the result of linear interpolation with this one and another one\r\n     * @param {fabric.Point} that\r\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\r\n     * @return {fabric.Point}\r\n     */\r\n    lerp: function (that, t) {\r\n      if (typeof t === 'undefined') {\r\n        t = 0.5;\r\n      }\r\n      t = Math.max(Math.min(1, t), 0);\r\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\r\n    },\r\n\r\n    /**\r\n     * Returns distance from this point and another one\r\n     * @param {fabric.Point} that\r\n     * @return {Number}\r\n     */\r\n    distanceFrom: function (that) {\r\n      var dx = this.x - that.x,\r\n          dy = this.y - that.y;\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n    },\r\n\r\n    /**\r\n     * Returns the point between this point and another one\r\n     * @param {fabric.Point} that\r\n     * @return {fabric.Point}\r\n     */\r\n    midPointFrom: function (that) {\r\n      return this.lerp(that);\r\n    },\r\n\r\n    /**\r\n     * Returns a new point which is the min of this and another one\r\n     * @param {fabric.Point} that\r\n     * @return {fabric.Point}\r\n     */\r\n    min: function (that) {\r\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\r\n    },\r\n\r\n    /**\r\n     * Returns a new point which is the max of this and another one\r\n     * @param {fabric.Point} that\r\n     * @return {fabric.Point}\r\n     */\r\n    max: function (that) {\r\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\r\n    },\r\n\r\n    /**\r\n     * Returns string representation of this point\r\n     * @return {String}\r\n     */\r\n    toString: function () {\r\n      return this.x + ',' + this.y;\r\n    },\r\n\r\n    /**\r\n     * Sets x/y of this point\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @chainable\r\n     */\r\n    setXY: function (x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets x of this point\r\n     * @param {Number} x\r\n     * @chainable\r\n     */\r\n    setX: function (x) {\r\n      this.x = x;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets y of this point\r\n     * @param {Number} y\r\n     * @chainable\r\n     */\r\n    setY: function (y) {\r\n      this.y = y;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets x/y of this point from another point\r\n     * @param {fabric.Point} that\r\n     * @chainable\r\n     */\r\n    setFromPoint: function (that) {\r\n      this.x = that.x;\r\n      this.y = that.y;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Swaps x/y of this point and another point\r\n     * @param {fabric.Point} that\r\n     */\r\n    swap: function (that) {\r\n      var x = this.x,\r\n          y = this.y;\r\n      this.x = that.x;\r\n      this.y = that.y;\r\n      that.x = x;\r\n      that.y = y;\r\n    },\r\n\r\n    /**\r\n     * return a cloned instance of the point\r\n     * @return {fabric.Point}\r\n     */\r\n    clone: function () {\r\n      return new Point(this.x, this.y);\r\n    }\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n  var fabric = global.fabric || (global.fabric = { });\r\n\r\n  if (fabric.Intersection) {\r\n    fabric.warn('fabric.Intersection is already defined');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Intersection class\r\n   * @class fabric.Intersection\r\n   * @memberOf fabric\r\n   * @constructor\r\n   */\r\n  function Intersection(status) {\r\n    this.status = status;\r\n    this.points = [];\r\n  }\r\n\r\n  fabric.Intersection = Intersection;\r\n\r\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\r\n\r\n    constructor: Intersection,\r\n\r\n    /**\r\n     * Appends a point to intersection\r\n     * @param {fabric.Point} point\r\n     * @return {fabric.Intersection} thisArg\r\n     * @chainable\r\n     */\r\n    appendPoint: function (point) {\r\n      this.points.push(point);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Appends points to intersection\r\n     * @param {Array} points\r\n     * @return {fabric.Intersection} thisArg\r\n     * @chainable\r\n     */\r\n    appendPoints: function (points) {\r\n      this.points = this.points.concat(points);\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Checks if one line intersects another\r\n   * TODO: rename in intersectSegmentSegment\r\n   * @static\r\n   * @param {fabric.Point} a1\r\n   * @param {fabric.Point} a2\r\n   * @param {fabric.Point} b1\r\n   * @param {fabric.Point} b2\r\n   * @return {fabric.Intersection}\r\n   */\r\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\r\n    var result,\r\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\r\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\r\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\r\n    if (uB !== 0) {\r\n      var ua = uaT / uB,\r\n          ub = ubT / uB;\r\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\r\n        result = new Intersection('Intersection');\r\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\r\n      }\r\n      else {\r\n        result = new Intersection();\r\n      }\r\n    }\r\n    else {\r\n      if (uaT === 0 || ubT === 0) {\r\n        result = new Intersection('Coincident');\r\n      }\r\n      else {\r\n        result = new Intersection('Parallel');\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Checks if line intersects polygon\r\n   * TODO: rename in intersectSegmentPolygon\r\n   * fix detection of coincident\r\n   * @static\r\n   * @param {fabric.Point} a1\r\n   * @param {fabric.Point} a2\r\n   * @param {Array} points\r\n   * @return {fabric.Intersection}\r\n   */\r\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\r\n    var result = new Intersection(),\r\n        length = points.length,\r\n        b1, b2, inter, i;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      b1 = points[i];\r\n      b2 = points[(i + 1) % length];\r\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\r\n\r\n      result.appendPoints(inter.points);\r\n    }\r\n    if (result.points.length > 0) {\r\n      result.status = 'Intersection';\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Checks if polygon intersects another polygon\r\n   * @static\r\n   * @param {Array} points1\r\n   * @param {Array} points2\r\n   * @return {fabric.Intersection}\r\n   */\r\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\r\n    var result = new Intersection(),\r\n        length = points1.length, i;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      var a1 = points1[i],\r\n          a2 = points1[(i + 1) % length],\r\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\r\n\r\n      result.appendPoints(inter.points);\r\n    }\r\n    if (result.points.length > 0) {\r\n      result.status = 'Intersection';\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Checks if polygon intersects rectangle\r\n   * @static\r\n   * @param {Array} points\r\n   * @param {fabric.Point} r1\r\n   * @param {fabric.Point} r2\r\n   * @return {fabric.Intersection}\r\n   */\r\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\r\n    var min = r1.min(r2),\r\n        max = r1.max(r2),\r\n        topRight = new fabric.Point(max.x, min.y),\r\n        bottomLeft = new fabric.Point(min.x, max.y),\r\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\r\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\r\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\r\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\r\n        result = new Intersection();\r\n\r\n    result.appendPoints(inter1.points);\r\n    result.appendPoints(inter2.points);\r\n    result.appendPoints(inter3.points);\r\n    result.appendPoints(inter4.points);\r\n\r\n    if (result.points.length > 0) {\r\n      result.status = 'Intersection';\r\n    }\r\n    return result;\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { });\r\n\r\n  if (fabric.Color) {\r\n    fabric.warn('fabric.Color is already defined.');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Color class\r\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\r\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\r\n   *\r\n   * @class fabric.Color\r\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\r\n   * @return {fabric.Color} thisArg\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\r\n   */\r\n  function Color(color) {\r\n    if (!color) {\r\n      this.setSource([0, 0, 0, 1]);\r\n    }\r\n    else {\r\n      this._tryParsingColor(color);\r\n    }\r\n  }\r\n\r\n  fabric.Color = Color;\r\n\r\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\r\n\r\n    /**\r\n     * @private\r\n     * @param {String|Array} color Color value to parse\r\n     */\r\n    _tryParsingColor: function(color) {\r\n      var source;\r\n\r\n      if (color in Color.colorNameMap) {\r\n        color = Color.colorNameMap[color];\r\n      }\r\n\r\n      if (color === 'transparent') {\r\n        source = [255, 255, 255, 0];\r\n      }\r\n\r\n      if (!source) {\r\n        source = Color.sourceFromHex(color);\r\n      }\r\n      if (!source) {\r\n        source = Color.sourceFromRgb(color);\r\n      }\r\n      if (!source) {\r\n        source = Color.sourceFromHsl(color);\r\n      }\r\n      if (!source) {\r\n        //if color is not recognize let's make black as canvas does\r\n        source = [0, 0, 0, 1];\r\n      }\r\n      if (source) {\r\n        this.setSource(source);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n     * @private\r\n     * @param {Number} r Red color value\r\n     * @param {Number} g Green color value\r\n     * @param {Number} b Blue color value\r\n     * @return {Array} Hsl color\r\n     */\r\n    _rgbToHsl: function(r, g, b) {\r\n      r /= 255; g /= 255; b /= 255;\r\n\r\n      var h, s, l,\r\n          max = fabric.util.array.max([r, g, b]),\r\n          min = fabric.util.array.min([r, g, b]);\r\n\r\n      l = (max + min) / 2;\r\n\r\n      if (max === min) {\r\n        h = s = 0; // achromatic\r\n      }\r\n      else {\r\n        var d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n          case r:\r\n            h = (g - b) / d + (g < b ? 6 : 0);\r\n            break;\r\n          case g:\r\n            h = (b - r) / d + 2;\r\n            break;\r\n          case b:\r\n            h = (r - g) / d + 4;\r\n            break;\r\n        }\r\n        h /= 6;\r\n      }\r\n\r\n      return [\r\n        Math.round(h * 360),\r\n        Math.round(s * 100),\r\n        Math.round(l * 100)\r\n      ];\r\n    },\r\n\r\n    /**\r\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n     * @return {Array}\r\n     */\r\n    getSource: function() {\r\n      return this._source;\r\n    },\r\n\r\n    /**\r\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n     * @param {Array} source\r\n     */\r\n    setSource: function(source) {\r\n      this._source = source;\r\n    },\r\n\r\n    /**\r\n     * Returns color representation in RGB format\r\n     * @return {String} ex: rgb(0-255,0-255,0-255)\r\n     */\r\n    toRgb: function() {\r\n      var source = this.getSource();\r\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\r\n    },\r\n\r\n    /**\r\n     * Returns color representation in RGBA format\r\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\r\n     */\r\n    toRgba: function() {\r\n      var source = this.getSource();\r\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\r\n    },\r\n\r\n    /**\r\n     * Returns color representation in HSL format\r\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\r\n     */\r\n    toHsl: function() {\r\n      var source = this.getSource(),\r\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\r\n    },\r\n\r\n    /**\r\n     * Returns color representation in HSLA format\r\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\r\n     */\r\n    toHsla: function() {\r\n      var source = this.getSource(),\r\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\r\n\r\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\r\n    },\r\n\r\n    /**\r\n     * Returns color representation in HEX format\r\n     * @return {String} ex: FF5555\r\n     */\r\n    toHex: function() {\r\n      var source = this.getSource(), r, g, b;\r\n\r\n      r = source[0].toString(16);\r\n      r = (r.length === 1) ? ('0' + r) : r;\r\n\r\n      g = source[1].toString(16);\r\n      g = (g.length === 1) ? ('0' + g) : g;\r\n\r\n      b = source[2].toString(16);\r\n      b = (b.length === 1) ? ('0' + b) : b;\r\n\r\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\r\n    },\r\n\r\n    /**\r\n     * Returns color representation in HEXA format\r\n     * @return {String} ex: FF5555CC\r\n     */\r\n    toHexa: function() {\r\n      var source = this.getSource(), a;\r\n\r\n      a = Math.round(source[3] * 255);\r\n      a = a.toString(16);\r\n      a = (a.length === 1) ? ('0' + a) : a;\r\n\r\n      return this.toHex() + a.toUpperCase();\r\n    },\r\n\r\n    /**\r\n     * Gets value of alpha channel for this color\r\n     * @return {Number} 0-1\r\n     */\r\n    getAlpha: function() {\r\n      return this.getSource()[3];\r\n    },\r\n\r\n    /**\r\n     * Sets value of alpha channel for this color\r\n     * @param {Number} alpha Alpha value 0-1\r\n     * @return {fabric.Color} thisArg\r\n     */\r\n    setAlpha: function(alpha) {\r\n      var source = this.getSource();\r\n      source[3] = alpha;\r\n      this.setSource(source);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Transforms color to its grayscale representation\r\n     * @return {fabric.Color} thisArg\r\n     */\r\n    toGrayscale: function() {\r\n      var source = this.getSource(),\r\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\r\n          currentAlpha = source[3];\r\n      this.setSource([average, average, average, currentAlpha]);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Transforms color to its black and white representation\r\n     * @param {Number} threshold\r\n     * @return {fabric.Color} thisArg\r\n     */\r\n    toBlackWhite: function(threshold) {\r\n      var source = this.getSource(),\r\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\r\n          currentAlpha = source[3];\r\n\r\n      threshold = threshold || 127;\r\n\r\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\r\n      this.setSource([average, average, average, currentAlpha]);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Overlays color with another color\r\n     * @param {String|fabric.Color} otherColor\r\n     * @return {fabric.Color} thisArg\r\n     */\r\n    overlayWith: function(otherColor) {\r\n      if (!(otherColor instanceof Color)) {\r\n        otherColor = new Color(otherColor);\r\n      }\r\n\r\n      var result = [],\r\n          alpha = this.getAlpha(),\r\n          otherAlpha = 0.5,\r\n          source = this.getSource(),\r\n          otherSource = otherColor.getSource(), i;\r\n\r\n      for (i = 0; i < 3; i++) {\r\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\r\n      }\r\n\r\n      result[3] = alpha;\r\n      this.setSource(result);\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\r\n   * @static\r\n   * @field\r\n   * @memberOf fabric.Color\r\n   */\r\n  // eslint-disable-next-line max-len\r\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\r\n\r\n  /**\r\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\r\n   * @static\r\n   * @field\r\n   * @memberOf fabric.Color\r\n   */\r\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\r\n\r\n  /**\r\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\r\n   * @static\r\n   * @field\r\n   * @memberOf fabric.Color\r\n   */\r\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\r\n\r\n  /**\r\n   * Map of the 148 color names with HEX code\r\n   * @static\r\n   * @field\r\n   * @memberOf fabric.Color\r\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\r\n   */\r\n  fabric.Color.colorNameMap = {\r\n    aliceblue:            '#F0F8FF',\r\n    antiquewhite:         '#FAEBD7',\r\n    aqua:                 '#00FFFF',\r\n    aquamarine:           '#7FFFD4',\r\n    azure:                '#F0FFFF',\r\n    beige:                '#F5F5DC',\r\n    bisque:               '#FFE4C4',\r\n    black:                '#000000',\r\n    blanchedalmond:       '#FFEBCD',\r\n    blue:                 '#0000FF',\r\n    blueviolet:           '#8A2BE2',\r\n    brown:                '#A52A2A',\r\n    burlywood:            '#DEB887',\r\n    cadetblue:            '#5F9EA0',\r\n    chartreuse:           '#7FFF00',\r\n    chocolate:            '#D2691E',\r\n    coral:                '#FF7F50',\r\n    cornflowerblue:       '#6495ED',\r\n    cornsilk:             '#FFF8DC',\r\n    crimson:              '#DC143C',\r\n    cyan:                 '#00FFFF',\r\n    darkblue:             '#00008B',\r\n    darkcyan:             '#008B8B',\r\n    darkgoldenrod:        '#B8860B',\r\n    darkgray:             '#A9A9A9',\r\n    darkgrey:             '#A9A9A9',\r\n    darkgreen:            '#006400',\r\n    darkkhaki:            '#BDB76B',\r\n    darkmagenta:          '#8B008B',\r\n    darkolivegreen:       '#556B2F',\r\n    darkorange:           '#FF8C00',\r\n    darkorchid:           '#9932CC',\r\n    darkred:              '#8B0000',\r\n    darksalmon:           '#E9967A',\r\n    darkseagreen:         '#8FBC8F',\r\n    darkslateblue:        '#483D8B',\r\n    darkslategray:        '#2F4F4F',\r\n    darkslategrey:        '#2F4F4F',\r\n    darkturquoise:        '#00CED1',\r\n    darkviolet:           '#9400D3',\r\n    deeppink:             '#FF1493',\r\n    deepskyblue:          '#00BFFF',\r\n    dimgray:              '#696969',\r\n    dimgrey:              '#696969',\r\n    dodgerblue:           '#1E90FF',\r\n    firebrick:            '#B22222',\r\n    floralwhite:          '#FFFAF0',\r\n    forestgreen:          '#228B22',\r\n    fuchsia:              '#FF00FF',\r\n    gainsboro:            '#DCDCDC',\r\n    ghostwhite:           '#F8F8FF',\r\n    gold:                 '#FFD700',\r\n    goldenrod:            '#DAA520',\r\n    gray:                 '#808080',\r\n    grey:                 '#808080',\r\n    green:                '#008000',\r\n    greenyellow:          '#ADFF2F',\r\n    honeydew:             '#F0FFF0',\r\n    hotpink:              '#FF69B4',\r\n    indianred:            '#CD5C5C',\r\n    indigo:               '#4B0082',\r\n    ivory:                '#FFFFF0',\r\n    khaki:                '#F0E68C',\r\n    lavender:             '#E6E6FA',\r\n    lavenderblush:        '#FFF0F5',\r\n    lawngreen:            '#7CFC00',\r\n    lemonchiffon:         '#FFFACD',\r\n    lightblue:            '#ADD8E6',\r\n    lightcoral:           '#F08080',\r\n    lightcyan:            '#E0FFFF',\r\n    lightgoldenrodyellow: '#FAFAD2',\r\n    lightgray:            '#D3D3D3',\r\n    lightgrey:            '#D3D3D3',\r\n    lightgreen:           '#90EE90',\r\n    lightpink:            '#FFB6C1',\r\n    lightsalmon:          '#FFA07A',\r\n    lightseagreen:        '#20B2AA',\r\n    lightskyblue:         '#87CEFA',\r\n    lightslategray:       '#778899',\r\n    lightslategrey:       '#778899',\r\n    lightsteelblue:       '#B0C4DE',\r\n    lightyellow:          '#FFFFE0',\r\n    lime:                 '#00FF00',\r\n    limegreen:            '#32CD32',\r\n    linen:                '#FAF0E6',\r\n    magenta:              '#FF00FF',\r\n    maroon:               '#800000',\r\n    mediumaquamarine:     '#66CDAA',\r\n    mediumblue:           '#0000CD',\r\n    mediumorchid:         '#BA55D3',\r\n    mediumpurple:         '#9370DB',\r\n    mediumseagreen:       '#3CB371',\r\n    mediumslateblue:      '#7B68EE',\r\n    mediumspringgreen:    '#00FA9A',\r\n    mediumturquoise:      '#48D1CC',\r\n    mediumvioletred:      '#C71585',\r\n    midnightblue:         '#191970',\r\n    mintcream:            '#F5FFFA',\r\n    mistyrose:            '#FFE4E1',\r\n    moccasin:             '#FFE4B5',\r\n    navajowhite:          '#FFDEAD',\r\n    navy:                 '#000080',\r\n    oldlace:              '#FDF5E6',\r\n    olive:                '#808000',\r\n    olivedrab:            '#6B8E23',\r\n    orange:               '#FFA500',\r\n    orangered:            '#FF4500',\r\n    orchid:               '#DA70D6',\r\n    palegoldenrod:        '#EEE8AA',\r\n    palegreen:            '#98FB98',\r\n    paleturquoise:        '#AFEEEE',\r\n    palevioletred:        '#DB7093',\r\n    papayawhip:           '#FFEFD5',\r\n    peachpuff:            '#FFDAB9',\r\n    peru:                 '#CD853F',\r\n    pink:                 '#FFC0CB',\r\n    plum:                 '#DDA0DD',\r\n    powderblue:           '#B0E0E6',\r\n    purple:               '#800080',\r\n    rebeccapurple:        '#663399',\r\n    red:                  '#FF0000',\r\n    rosybrown:            '#BC8F8F',\r\n    royalblue:            '#4169E1',\r\n    saddlebrown:          '#8B4513',\r\n    salmon:               '#FA8072',\r\n    sandybrown:           '#F4A460',\r\n    seagreen:             '#2E8B57',\r\n    seashell:             '#FFF5EE',\r\n    sienna:               '#A0522D',\r\n    silver:               '#C0C0C0',\r\n    skyblue:              '#87CEEB',\r\n    slateblue:            '#6A5ACD',\r\n    slategray:            '#708090',\r\n    slategrey:            '#708090',\r\n    snow:                 '#FFFAFA',\r\n    springgreen:          '#00FF7F',\r\n    steelblue:            '#4682B4',\r\n    tan:                  '#D2B48C',\r\n    teal:                 '#008080',\r\n    thistle:              '#D8BFD8',\r\n    tomato:               '#FF6347',\r\n    turquoise:            '#40E0D0',\r\n    violet:               '#EE82EE',\r\n    wheat:                '#F5DEB3',\r\n    white:                '#FFFFFF',\r\n    whitesmoke:           '#F5F5F5',\r\n    yellow:               '#FFFF00',\r\n    yellowgreen:          '#9ACD32'\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Number} p\r\n   * @param {Number} q\r\n   * @param {Number} t\r\n   * @return {Number}\r\n   */\r\n  function hue2rgb(p, q, t) {\r\n    if (t < 0) {\r\n      t += 1;\r\n    }\r\n    if (t > 1) {\r\n      t -= 1;\r\n    }\r\n    if (t < 1 / 6) {\r\n      return p + (q - p) * 6 * t;\r\n    }\r\n    if (t < 1 / 2) {\r\n      return q;\r\n    }\r\n    if (t < 2 / 3) {\r\n      return p + (q - p) * (2 / 3 - t) * 6;\r\n    }\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * Returns new color object, when given a color in RGB format\r\n   * @memberOf fabric.Color\r\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\r\n   * @return {fabric.Color}\r\n   */\r\n  fabric.Color.fromRgb = function(color) {\r\n    return Color.fromSource(Color.sourceFromRgb(color));\r\n  };\r\n\r\n  /**\r\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\r\n   * @memberOf fabric.Color\r\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\r\n   * @return {Array} source\r\n   */\r\n  fabric.Color.sourceFromRgb = function(color) {\r\n    var match = color.match(Color.reRGBa);\r\n    if (match) {\r\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\r\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\r\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\r\n\r\n      return [\r\n        parseInt(r, 10),\r\n        parseInt(g, 10),\r\n        parseInt(b, 10),\r\n        match[4] ? parseFloat(match[4]) : 1\r\n      ];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns new color object, when given a color in RGBA format\r\n   * @static\r\n   * @function\r\n   * @memberOf fabric.Color\r\n   * @param {String} color\r\n   * @return {fabric.Color}\r\n   */\r\n  fabric.Color.fromRgba = Color.fromRgb;\r\n\r\n  /**\r\n   * Returns new color object, when given a color in HSL format\r\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\r\n   * @memberOf fabric.Color\r\n   * @return {fabric.Color}\r\n   */\r\n  fabric.Color.fromHsl = function(color) {\r\n    return Color.fromSource(Color.sourceFromHsl(color));\r\n  };\r\n\r\n  /**\r\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\r\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n   * @memberOf fabric.Color\r\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\r\n   * @return {Array} source\r\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\r\n   */\r\n  fabric.Color.sourceFromHsl = function(color) {\r\n    var match = color.match(Color.reHSLa);\r\n    if (!match) {\r\n      return;\r\n    }\r\n\r\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\r\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\r\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\r\n        r, g, b;\r\n\r\n    if (s === 0) {\r\n      r = g = b = l;\r\n    }\r\n    else {\r\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\r\n          p = l * 2 - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n\r\n    return [\r\n      Math.round(r * 255),\r\n      Math.round(g * 255),\r\n      Math.round(b * 255),\r\n      match[4] ? parseFloat(match[4]) : 1\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * Returns new color object, when given a color in HSLA format\r\n   * @static\r\n   * @function\r\n   * @memberOf fabric.Color\r\n   * @param {String} color\r\n   * @return {fabric.Color}\r\n   */\r\n  fabric.Color.fromHsla = Color.fromHsl;\r\n\r\n  /**\r\n   * Returns new color object, when given a color in HEX format\r\n   * @static\r\n   * @memberOf fabric.Color\r\n   * @param {String} color Color value ex: FF5555\r\n   * @return {fabric.Color}\r\n   */\r\n  fabric.Color.fromHex = function(color) {\r\n    return Color.fromSource(Color.sourceFromHex(color));\r\n  };\r\n\r\n  /**\r\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\r\n   * @static\r\n   * @memberOf fabric.Color\r\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\r\n   * @return {Array} source\r\n   */\r\n  fabric.Color.sourceFromHex = function(color) {\r\n    if (color.match(Color.reHex)) {\r\n      var value = color.slice(color.indexOf('#') + 1),\r\n          isShortNotation = (value.length === 3 || value.length === 4),\r\n          isRGBa = (value.length === 8 || value.length === 4),\r\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\r\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\r\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\r\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\r\n\r\n      return [\r\n        parseInt(r, 16),\r\n        parseInt(g, 16),\r\n        parseInt(b, 16),\r\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\r\n      ];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\r\n   * @static\r\n   * @memberOf fabric.Color\r\n   * @param {Array} source\r\n   * @return {fabric.Color}\r\n   */\r\n  fabric.Color.fromSource = function(source) {\r\n    var oColor = new Color();\r\n    oColor.setSource(source);\r\n    return oColor;\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'],\r\n      skewMap = ['ns', 'nesw', 'ew', 'nwse'],\r\n      controls = {},\r\n      LEFT = 'left', TOP = 'top', RIGHT = 'right', BOTTOM = 'bottom', CENTER = 'center',\r\n      opposite = {\r\n        top: BOTTOM,\r\n        bottom: TOP,\r\n        left: RIGHT,\r\n        right: LEFT,\r\n        center: CENTER,\r\n      }, radiansToDegrees = fabric.util.radiansToDegrees,\r\n      sign = (Math.sign || function(x) { return ((x > 0) - (x < 0)) || +x; });\r\n\r\n  /**\r\n   * Combine control position and object angle to find the control direction compared\r\n   * to the object center.\r\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\r\n   * @param {fabric.Control} control the control class\r\n   * @return {Number} 0 - 7 a quadrant number\r\n   */\r\n  function findCornerQuadrant(fabricObject, control) {\r\n    var cornerAngle = fabricObject.angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\r\n    return Math.round((cornerAngle % 360) / 45);\r\n  }\r\n\r\n  function fireEvent(eventName, options) {\r\n    var target = options.transform.target,\r\n        canvas = target.canvas,\r\n        canvasOptions = fabric.util.object.clone(options);\r\n    canvasOptions.target = target;\r\n    canvas && canvas.fire('object:' + eventName, canvasOptions);\r\n    target.fire(eventName, options);\r\n  }\r\n\r\n  /**\r\n   * Inspect event and fabricObject properties to understand if the scaling action\r\n   * @param {Event} eventData from the user action\r\n   * @param {fabric.Object} fabricObject the fabric object about to scale\r\n   * @return {Boolean} true if scale is proportional\r\n   */\r\n  function scaleIsProportional(eventData, fabricObject) {\r\n    var canvas = fabricObject.canvas, uniScaleKey = canvas.uniScaleKey,\r\n        uniformIsToggled = eventData[uniScaleKey];\r\n    return (canvas.uniformScaling && !uniformIsToggled) ||\r\n    (!canvas.uniformScaling && uniformIsToggled);\r\n  }\r\n\r\n  /**\r\n   * Checks if transform is centered\r\n   * @param {Object} transform transform data\r\n   * @return {Boolean} true if transform is centered\r\n   */\r\n  function isTransformCentered(transform) {\r\n    return transform.originX === CENTER && transform.originY === CENTER;\r\n  }\r\n\r\n  /**\r\n   * Inspect fabricObject to understand if the current scaling action is allowed\r\n   * @param {fabric.Object} fabricObject the fabric object about to scale\r\n   * @param {String} by 'x' or 'y' or ''\r\n   * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\r\n   * @return {Boolean} true if scaling is not allowed at current conditions\r\n   */\r\n  function scalingIsForbidden(fabricObject, by, scaleProportionally) {\r\n    var lockX = fabricObject.lockScalingX, lockY = fabricObject.lockScalingY;\r\n    if (lockX && lockY) {\r\n      return true;\r\n    }\r\n    if (!by && (lockX || lockY) && scaleProportionally) {\r\n      return true;\r\n    }\r\n    if (lockX && by === 'x') {\r\n      return true;\r\n    }\r\n    if (lockY && by === 'y') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * return the correct cursor style for the scale action\r\n   * @param {Event} eventData the javascript event that is causing the scale\r\n   * @param {fabric.Control} control the control that is interested in the action\r\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\r\n   * @return {String} a valid css string for the cursor\r\n   */\r\n  function scaleCursorStyleHandler(eventData, control, fabricObject) {\r\n    var notAllowed = 'not-allowed',\r\n        scaleProportionally = scaleIsProportional(eventData, fabricObject),\r\n        by = '';\r\n    if (control.x !== 0 && control.y === 0) {\r\n      by = 'x';\r\n    }\r\n    else if (control.x === 0 && control.y !== 0) {\r\n      by = 'y';\r\n    }\r\n    if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\r\n      return notAllowed;\r\n    }\r\n    var n = findCornerQuadrant(fabricObject, control);\r\n    return scaleMap[n] + '-resize';\r\n  }\r\n\r\n  /**\r\n   * return the correct cursor style for the skew action\r\n   * @param {Event} eventData the javascript event that is causing the scale\r\n   * @param {fabric.Control} control the control that is interested in the action\r\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\r\n   * @return {String} a valid css string for the cursor\r\n   */\r\n  function skewCursorStyleHandler(eventData, control, fabricObject) {\r\n    var notAllowed = 'not-allowed';\r\n    if (control.x !== 0 && fabricObject.lockSkewingY) {\r\n      return notAllowed;\r\n    }\r\n    if (control.y !== 0 && fabricObject.lockSkewingX) {\r\n      return notAllowed;\r\n    }\r\n    var n = findCornerQuadrant(fabricObject, control) % 4;\r\n    return skewMap[n] + '-resize';\r\n  }\r\n\r\n  /**\r\n   * Combine skew and scale style handlers to cover fabric standard use case\r\n   * @param {Event} eventData the javascript event that is causing the scale\r\n   * @param {fabric.Control} control the control that is interested in the action\r\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\r\n   * @return {String} a valid css string for the cursor\r\n   */\r\n  function scaleSkewCursorStyleHandler(eventData, control, fabricObject) {\r\n    if (eventData[fabricObject.canvas.altActionKey]) {\r\n      return controls.skewCursorStyleHandler(eventData, control, fabricObject);\r\n    }\r\n    return controls.scaleCursorStyleHandler(eventData, control, fabricObject);\r\n  }\r\n\r\n  /**\r\n   * Inspect event, control and fabricObject to return the correct action name\r\n   * @param {Event} eventData the javascript event that is causing the scale\r\n   * @param {fabric.Control} control the control that is interested in the action\r\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\r\n   * @return {String} an action name\r\n   */\r\n  function scaleOrSkewActionName(eventData, control, fabricObject) {\r\n    var isAlternative = eventData[fabricObject.canvas.altActionKey];\r\n    if (control.x === 0) {\r\n      // then is scaleY or skewX\r\n      return isAlternative ? 'skewX' : 'scaleY';\r\n    }\r\n    if (control.y === 0) {\r\n      // then is scaleY or skewX\r\n      return isAlternative ? 'skewY' : 'scaleX';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find the correct style for the control that is used for rotation.\r\n   * this function is very simple and it just take care of not-allowed or standard cursor\r\n   * @param {Event} eventData the javascript event that is causing the scale\r\n   * @param {fabric.Control} control the control that is interested in the action\r\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\r\n   * @return {String} a valid css string for the cursor\r\n   */\r\n  function rotationStyleHandler(eventData, control, fabricObject) {\r\n    if (fabricObject.lockRotation) {\r\n      return 'not-allowed';\r\n    }\r\n    return control.cursorStyle;\r\n  }\r\n\r\n  function commonEventInfo(eventData, transform, x, y) {\r\n    return {\r\n      e: eventData,\r\n      transform: transform,\r\n      pointer: {\r\n        x: x,\r\n        y: y,\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Wrap an action handler with saving/restoring object position on the transform.\r\n   * this is the code that permits to objects to keep their position while transforming.\r\n   * @param {Function} actionHandler the function to wrap\r\n   * @return {Function} a function with an action handler signature\r\n   */\r\n  function wrapWithFixedAnchor(actionHandler) {\r\n    return function(eventData, transform, x, y) {\r\n      var target = transform.target, centerPoint = target.getCenterPoint(),\r\n          constraint = target.translateToOriginPoint(centerPoint, transform.originX, transform.originY),\r\n          actionPerformed = actionHandler(eventData, transform, x, y);\r\n      target.setPositionByOrigin(constraint, transform.originX, transform.originY);\r\n      return actionPerformed;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Wrap an action handler with firing an event if the action is performed\r\n   * @param {Function} actionHandler the function to wrap\r\n   * @return {Function} a function with an action handler signature\r\n   */\r\n  function wrapWithFireEvent(eventName, actionHandler) {\r\n    return function(eventData, transform, x, y) {\r\n      var actionPerformed = actionHandler(eventData, transform, x, y);\r\n      if (actionPerformed) {\r\n        fireEvent(eventName, commonEventInfo(eventData, transform, x, y));\r\n      }\r\n      return actionPerformed;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Transforms a point described by x and y in a distance from the top left corner of the object\r\n   * bounding box.\r\n   * @param {Object} transform\r\n   * @param {String} originX\r\n   * @param {String} originY\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @return {Fabric.Point} the normalized point\r\n   */\r\n  function getLocalPoint(transform, originX, originY, x, y) {\r\n    var target = transform.target,\r\n        control = target.controls[transform.corner],\r\n        zoom = target.canvas.getZoom(),\r\n        padding = target.padding / zoom,\r\n        localPoint = target.toLocalPoint(new fabric.Point(x, y), originX, originY);\r\n    if (localPoint.x >= padding) {\r\n      localPoint.x -= padding;\r\n    }\r\n    if (localPoint.x <= -padding) {\r\n      localPoint.x += padding;\r\n    }\r\n    if (localPoint.y >= padding) {\r\n      localPoint.y -= padding;\r\n    }\r\n    if (localPoint.y <= padding) {\r\n      localPoint.y += padding;\r\n    }\r\n    localPoint.x -= control.offsetX;\r\n    localPoint.y -= control.offsetY;\r\n    return localPoint;\r\n  }\r\n\r\n  /**\r\n   * Detect if the fabric object is flipped on one side.\r\n   * @param {fabric.Object} target\r\n   * @return {Boolean} true if one flip, but not two.\r\n   */\r\n  function targetHasOneFlip(target) {\r\n    return target.flipX !== target.flipY;\r\n  }\r\n\r\n  /**\r\n   * Utility function to compensate the scale factor when skew is applied on both axes\r\n   * @private\r\n   */\r\n  function compensateScaleForSkew(target, oppositeSkew, scaleToCompensate, axis, reference) {\r\n    if (target[oppositeSkew] !== 0) {\r\n      var newDim = target._getTransformedDimensions()[axis];\r\n      var newValue = reference / newDim * target[scaleToCompensate];\r\n      target.set(scaleToCompensate, newValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Action handler for skewing on the X axis\r\n   * @private\r\n   */\r\n  function skewObjectX(eventData, transform, x, y) {\r\n    var target = transform.target,\r\n        // find how big the object would be, if there was no skewX. takes in account scaling\r\n        dimNoSkew = target._getTransformedDimensions(0, target.skewY),\r\n        localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\r\n        // the mouse is in the center of the object, and we want it to stay there.\r\n        // so the object will grow twice as much as the mouse.\r\n        // this makes the skew growth to localPoint * 2 - dimNoSkew.\r\n        totalSkewSize = Math.abs(localPoint.x * 2) - dimNoSkew.x,\r\n        currentSkew = target.skewX, newSkew;\r\n    if (totalSkewSize < 2) {\r\n      // let's make it easy to go back to position 0.\r\n      newSkew = 0;\r\n    }\r\n    else {\r\n      newSkew = radiansToDegrees(\r\n        Math.atan2((totalSkewSize / target.scaleX), (dimNoSkew.y / target.scaleY))\r\n      );\r\n      // now we have to find the sign of the skew.\r\n      // it mostly depend on the origin of transformation.\r\n      if (transform.originX === LEFT && transform.originY === BOTTOM) {\r\n        newSkew = -newSkew;\r\n      }\r\n      if (transform.originX === RIGHT && transform.originY === TOP) {\r\n        newSkew = -newSkew;\r\n      }\r\n      if (targetHasOneFlip(target)) {\r\n        newSkew = -newSkew;\r\n      }\r\n    }\r\n    var hasSkewed = currentSkew !== newSkew;\r\n    if (hasSkewed) {\r\n      var dimBeforeSkewing = target._getTransformedDimensions().y;\r\n      target.set('skewX', newSkew);\r\n      compensateScaleForSkew(target, 'skewY', 'scaleY', 'y', dimBeforeSkewing);\r\n    }\r\n    return hasSkewed;\r\n  }\r\n\r\n  /**\r\n   * Action handler for skewing on the Y axis\r\n   * @private\r\n   */\r\n  function skewObjectY(eventData, transform, x, y) {\r\n    var target = transform.target,\r\n        // find how big the object would be, if there was no skewX. takes in account scaling\r\n        dimNoSkew = target._getTransformedDimensions(target.skewX, 0),\r\n        localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\r\n        // the mouse is in the center of the object, and we want it to stay there.\r\n        // so the object will grow twice as much as the mouse.\r\n        // this makes the skew growth to localPoint * 2 - dimNoSkew.\r\n        totalSkewSize = Math.abs(localPoint.y * 2) - dimNoSkew.y,\r\n        currentSkew = target.skewY, newSkew;\r\n    if (totalSkewSize < 2) {\r\n      // let's make it easy to go back to position 0.\r\n      newSkew = 0;\r\n    }\r\n    else {\r\n      newSkew = radiansToDegrees(\r\n        Math.atan2((totalSkewSize / target.scaleY), (dimNoSkew.x / target.scaleX))\r\n      );\r\n      // now we have to find the sign of the skew.\r\n      // it mostly depend on the origin of transformation.\r\n      if (transform.originX === LEFT && transform.originY === BOTTOM) {\r\n        newSkew = -newSkew;\r\n      }\r\n      if (transform.originX === RIGHT && transform.originY === TOP) {\r\n        newSkew = -newSkew;\r\n      }\r\n      if (targetHasOneFlip(target)) {\r\n        newSkew = -newSkew;\r\n      }\r\n    }\r\n    var hasSkewed = currentSkew !== newSkew;\r\n    if (hasSkewed) {\r\n      var dimBeforeSkewing = target._getTransformedDimensions().x;\r\n      target.set('skewY', newSkew);\r\n      compensateScaleForSkew(target, 'skewX', 'scaleX', 'x', dimBeforeSkewing);\r\n    }\r\n    return hasSkewed;\r\n  }\r\n\r\n  /**\r\n   * Wrapped Action handler for skewing on the Y axis, takes care of the\r\n   * skew direction and determine the correct transform origin for the anchor point\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function skewHandlerX(eventData, transform, x, y) {\r\n    // step1 figure out and change transform origin.\r\n    // if skewX > 0 and originY bottom we anchor on right\r\n    // if skewX > 0 and originY top we anchor on left\r\n    // if skewX < 0 and originY bottom we anchor on left\r\n    // if skewX < 0 and originY top we anchor on right\r\n    // if skewX is 0, we look for mouse position to understand where are we going.\r\n    var target = transform.target, currentSkew = target.skewX, originX, originY = transform.originY;\r\n    if (target.lockSkewingX) {\r\n      return false;\r\n    }\r\n    if (currentSkew === 0) {\r\n      var localPointFromCenter = getLocalPoint(transform, CENTER, CENTER, x, y);\r\n      if (localPointFromCenter.x > 0) {\r\n        // we are pulling right, anchor left;\r\n        originX = LEFT;\r\n      }\r\n      else {\r\n        // we are pulling right, anchor right\r\n        originX = RIGHT;\r\n      }\r\n    }\r\n    else {\r\n      if (currentSkew > 0) {\r\n        originX = originY === TOP ? LEFT : RIGHT;\r\n      }\r\n      if (currentSkew < 0) {\r\n        originX = originY === TOP ? RIGHT : LEFT;\r\n      }\r\n      // is the object flipped on one side only? swap the origin.\r\n      if (targetHasOneFlip(target)) {\r\n        originX = originX === LEFT ? RIGHT : LEFT;\r\n      }\r\n    }\r\n\r\n    // once we have the origin, we find the anchor point\r\n    transform.originX = originX;\r\n    var finalHandler = wrapWithFireEvent('skewing', wrapWithFixedAnchor(skewObjectX));\r\n    return finalHandler(eventData, transform, x, y);\r\n  }\r\n\r\n  /**\r\n   * Wrapped Action handler for skewing on the Y axis, takes care of the\r\n   * skew direction and determine the correct transform origin for the anchor point\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function skewHandlerY(eventData, transform, x, y) {\r\n    // step1 figure out and change transform origin.\r\n    // if skewY > 0 and originX left we anchor on top\r\n    // if skewY > 0 and originX right we anchor on bottom\r\n    // if skewY < 0 and originX left we anchor on bottom\r\n    // if skewY < 0 and originX right we anchor on top\r\n    // if skewY is 0, we look for mouse position to understand where are we going.\r\n    var target = transform.target, currentSkew = target.skewY, originY, originX = transform.originX;\r\n    if (target.lockSkewingY) {\r\n      return false;\r\n    }\r\n    if (currentSkew === 0) {\r\n      var localPointFromCenter = getLocalPoint(transform, CENTER, CENTER, x, y);\r\n      if (localPointFromCenter.y > 0) {\r\n        // we are pulling down, anchor up;\r\n        originY = TOP;\r\n      }\r\n      else {\r\n        // we are pulling up, anchor down\r\n        originY = BOTTOM;\r\n      }\r\n    }\r\n    else {\r\n      if (currentSkew > 0) {\r\n        originY = originX === LEFT ? TOP : BOTTOM;\r\n      }\r\n      if (currentSkew < 0) {\r\n        originY = originX === LEFT ? BOTTOM : TOP;\r\n      }\r\n      // is the object flipped on one side only? swap the origin.\r\n      if (targetHasOneFlip(target)) {\r\n        originY = originY === TOP ? BOTTOM : TOP;\r\n      }\r\n    }\r\n\r\n    // once we have the origin, we find the anchor point\r\n    transform.originY = originY;\r\n    var finalHandler = wrapWithFireEvent('skewing', wrapWithFixedAnchor(skewObjectY));\r\n    return finalHandler(eventData, transform, x, y);\r\n  }\r\n\r\n  /**\r\n   * Action handler for rotation and snapping, without anchor point.\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   * @private\r\n   */\r\n  function rotationWithSnapping(eventData, transform, x, y) {\r\n    var t = transform,\r\n        target = t.target,\r\n        pivotPoint = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\r\n\r\n    if (target.lockRotation) {\r\n      return false;\r\n    }\r\n\r\n    var lastAngle = Math.atan2(t.ey - pivotPoint.y, t.ex - pivotPoint.x),\r\n        curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x),\r\n        angle = radiansToDegrees(curAngle - lastAngle + t.theta),\r\n        hasRotated = true;\r\n\r\n    if (target.snapAngle > 0) {\r\n      var snapAngle  = target.snapAngle,\r\n          snapThreshold  = target.snapThreshold || snapAngle,\r\n          rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\r\n          leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\r\n\r\n      if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\r\n        angle = leftAngleLocked;\r\n      }\r\n      else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\r\n        angle = rightAngleLocked;\r\n      }\r\n    }\r\n\r\n    // normalize angle to positive value\r\n    if (angle < 0) {\r\n      angle = 360 + angle;\r\n    }\r\n    angle %= 360;\r\n\r\n    hasRotated = target.angle !== angle;\r\n    target.angle = angle;\r\n    return hasRotated;\r\n  }\r\n\r\n  /**\r\n   * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @param {Object} options additional information for scaling\r\n   * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\r\n   * @return {Boolean} true if some change happened\r\n   * @private\r\n   */\r\n  function scaleObject(eventData, transform, x, y, options) {\r\n    options = options || {};\r\n    var target = transform.target,\r\n        lockScalingX = target.lockScalingX, lockScalingY = target.lockScalingY,\r\n        by = options.by, newPoint, scaleX, scaleY, dim,\r\n        scaleProportionally = scaleIsProportional(eventData, target),\r\n        forbidScaling = scalingIsForbidden(target, by, scaleProportionally),\r\n        signX, signY, gestureScale = transform.gestureScale;\r\n\r\n    if (forbidScaling) {\r\n      return false;\r\n    }\r\n    if (gestureScale) {\r\n      scaleX = transform.scaleX * gestureScale;\r\n      scaleY = transform.scaleY * gestureScale;\r\n    }\r\n    else {\r\n      newPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y);\r\n      // use of sign: We use sign to detect change of direction of an action. sign usually change when\r\n      // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\r\n      // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\r\n      // cross many time the origin point and flip the object. so we need a way to filter out the noise.\r\n      // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\r\n      signX = by !== 'y' ? sign(newPoint.x) : 1;\r\n      signY = by !== 'x' ? sign(newPoint.y) : 1;\r\n      if (!transform.signX) {\r\n        transform.signX = signX;\r\n      }\r\n      if (!transform.signY) {\r\n        transform.signY = signY;\r\n      }\r\n\r\n      if (target.lockScalingFlip &&\r\n        (transform.signX !== signX || transform.signY !== signY)\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      dim = target._getTransformedDimensions();\r\n      // missing detection of flip and logic to switch the origin\r\n      if (scaleProportionally && !by) {\r\n        // uniform scaling\r\n        var distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\r\n            original = transform.original,\r\n            originalDistance = Math.abs(dim.x * original.scaleX / target.scaleX) +\r\n              Math.abs(dim.y * original.scaleY / target.scaleY),\r\n            scale = distance / originalDistance;\r\n        scaleX = original.scaleX * scale;\r\n        scaleY = original.scaleY * scale;\r\n      }\r\n      else {\r\n        scaleX = Math.abs(newPoint.x * target.scaleX / dim.x);\r\n        scaleY = Math.abs(newPoint.y * target.scaleY / dim.y);\r\n      }\r\n      // if we are scaling by center, we need to double the scale\r\n      if (isTransformCentered(transform)) {\r\n        scaleX *= 2;\r\n        scaleY *= 2;\r\n      }\r\n      if (transform.signX !== signX && by !== 'y') {\r\n        transform.originX = opposite[transform.originX];\r\n        scaleX *= -1;\r\n        transform.signX = signX;\r\n      }\r\n      if (transform.signY !== signY && by !== 'x') {\r\n        transform.originY = opposite[transform.originY];\r\n        scaleY *= -1;\r\n        transform.signY = signY;\r\n      }\r\n    }\r\n    // minScale is taken are in the setter.\r\n    var oldScaleX = target.scaleX, oldScaleY = target.scaleY;\r\n    if (!by) {\r\n      !lockScalingX && target.set('scaleX', scaleX);\r\n      !lockScalingY && target.set('scaleY', scaleY);\r\n    }\r\n    else {\r\n      // forbidden cases already handled on top here.\r\n      by === 'x' && target.set('scaleX', scaleX);\r\n      by === 'y' && target.set('scaleY', scaleY);\r\n    }\r\n    return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\r\n  }\r\n\r\n  /**\r\n   * Generic scaling logic, to scale from corners either equally or freely.\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function scaleObjectFromCorner(eventData, transform, x, y) {\r\n    return scaleObject(eventData, transform, x, y);\r\n  }\r\n\r\n  /**\r\n   * Scaling logic for the X axis.\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function scaleObjectX(eventData, transform, x, y) {\r\n    return scaleObject(eventData, transform, x, y , { by: 'x' });\r\n  }\r\n\r\n  /**\r\n   * Scaling logic for the Y axis.\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function scaleObjectY(eventData, transform, x, y) {\r\n    return scaleObject(eventData, transform, x, y , { by: 'y' });\r\n  }\r\n\r\n  /**\r\n   * Composed action handler to either scale Y or skew X\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function scalingYOrSkewingX(eventData, transform, x, y) {\r\n    // ok some safety needed here.\r\n    if (eventData[transform.target.canvas.altActionKey]) {\r\n      return controls.skewHandlerX(eventData, transform, x, y);\r\n    }\r\n    return controls.scalingY(eventData, transform, x, y);\r\n  }\r\n\r\n  /**\r\n   * Composed action handler to either scale X or skew Y\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function scalingXOrSkewingY(eventData, transform, x, y) {\r\n    // ok some safety needed here.\r\n    if (eventData[transform.target.canvas.altActionKey]) {\r\n      return controls.skewHandlerY(eventData, transform, x, y);\r\n    }\r\n    return controls.scalingX(eventData, transform, x, y);\r\n  }\r\n\r\n  /**\r\n   * Action handler to change textbox width\r\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if some change happened\r\n   */\r\n  function changeWidth(eventData, transform, x, y) {\r\n    var target = transform.target, localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\r\n        strokePadding = target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\r\n        multiplier = isTransformCentered(transform) ? 2 : 1,\r\n        oldWidth = target.width,\r\n        newWidth = Math.abs(localPoint.x * multiplier / target.scaleX) - strokePadding;\r\n    target.set('width', Math.max(newWidth, 0));\r\n    return oldWidth !== newWidth;\r\n  }\r\n\r\n  /**\r\n   * Action handler\r\n   * @private\r\n   * @param {Event} eventData javascript event that is doing the transform\r\n   * @param {Object} transform javascript object containing a series of information around the current transform\r\n   * @param {number} x current mouse x position, canvas normalized\r\n   * @param {number} y current mouse y position, canvas normalized\r\n   * @return {Boolean} true if the translation occurred\r\n   */\r\n  function dragHandler(eventData, transform, x, y) {\r\n    var target = transform.target,\r\n        newLeft = x - transform.offsetX,\r\n        newTop = y - transform.offsetY,\r\n        moveX = !target.get('lockMovementX') && target.left !== newLeft,\r\n        moveY = !target.get('lockMovementY') && target.top !== newTop;\r\n    moveX && target.set('left', newLeft);\r\n    moveY && target.set('top', newTop);\r\n    if (moveX || moveY) {\r\n      fireEvent('moving', commonEventInfo(eventData, transform, x, y));\r\n    }\r\n    return moveX || moveY;\r\n  }\r\n\r\n  controls.scaleCursorStyleHandler = scaleCursorStyleHandler;\r\n  controls.skewCursorStyleHandler = skewCursorStyleHandler;\r\n  controls.scaleSkewCursorStyleHandler = scaleSkewCursorStyleHandler;\r\n  controls.rotationWithSnapping = wrapWithFireEvent('rotating', wrapWithFixedAnchor(rotationWithSnapping));\r\n  controls.scalingEqually = wrapWithFireEvent('scaling', wrapWithFixedAnchor( scaleObjectFromCorner));\r\n  controls.scalingX = wrapWithFireEvent('scaling', wrapWithFixedAnchor(scaleObjectX));\r\n  controls.scalingY = wrapWithFireEvent('scaling', wrapWithFixedAnchor(scaleObjectY));\r\n  controls.scalingYOrSkewingX = scalingYOrSkewingX;\r\n  controls.scalingXOrSkewingY = scalingXOrSkewingY;\r\n  controls.changeWidth = wrapWithFireEvent('resizing', wrapWithFixedAnchor(changeWidth));\r\n  controls.skewHandlerX = skewHandlerX;\r\n  controls.skewHandlerY = skewHandlerY;\r\n  controls.dragHandler = dragHandler;\r\n  controls.scaleOrSkewActionName = scaleOrSkewActionName;\r\n  controls.rotationStyleHandler = rotationStyleHandler;\r\n  controls.fireEvent = fireEvent;\r\n  controls.wrapWithFixedAnchor = wrapWithFixedAnchor;\r\n  controls.wrapWithFireEvent = wrapWithFireEvent;\r\n  controls.getLocalPoint = getLocalPoint;\r\n  fabric.controlsUtils = controls;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      degreesToRadians = fabric.util.degreesToRadians,\r\n      controls = fabric.controlsUtils;\r\n\r\n  /**\r\n   * Render a round control, as per fabric features.\r\n   * This function is written to respect object properties like transparentCorners, cornerSize\r\n   * cornerColor, cornerStrokeColor\r\n   * plus the addition of offsetY and offsetX.\r\n   * @param {CanvasRenderingContext2D} ctx context to render on\r\n   * @param {Number} left x coordinate where the control center should be\r\n   * @param {Number} top y coordinate where the control center should be\r\n   * @param {Object} styleOverride override for fabric.Object controls style\r\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\r\n   */\r\n  function renderCircleControl (ctx, left, top, styleOverride, fabricObject) {\r\n    styleOverride = styleOverride || {};\r\n    var xSize = this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\r\n        ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\r\n        transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\r\n          styleOverride.transparentCorners : fabricObject.transparentCorners,\r\n        methodName = transparentCorners ? 'stroke' : 'fill',\r\n        stroke = !transparentCorners && (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\r\n        myLeft = left,\r\n        myTop = top, size;\r\n    ctx.save();\r\n    ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor;\r\n    ctx.strokeStyle = styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor;\r\n    // as soon as fabric react v5, remove ie11, use proper ellipse code.\r\n    if (xSize > ySize) {\r\n      size = xSize;\r\n      ctx.scale(1.0, ySize / xSize);\r\n      myTop = top * xSize / ySize;\r\n    }\r\n    else if (ySize > xSize) {\r\n      size = ySize;\r\n      ctx.scale(xSize / ySize, 1.0);\r\n      myLeft = left * ySize / xSize;\r\n    }\r\n    else {\r\n      size = xSize;\r\n    }\r\n    // this is still wrong\r\n    ctx.lineWidth = 1;\r\n    ctx.beginPath();\r\n    ctx.arc(myLeft, myTop, size / 2, 0, 2 * Math.PI, false);\r\n    ctx[methodName]();\r\n    if (stroke) {\r\n      ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Render a square control, as per fabric features.\r\n   * This function is written to respect object properties like transparentCorners, cornerSize\r\n   * cornerColor, cornerStrokeColor\r\n   * plus the addition of offsetY and offsetX.\r\n   * @param {CanvasRenderingContext2D} ctx context to render on\r\n   * @param {Number} left x coordinate where the control center should be\r\n   * @param {Number} top y coordinate where the control center should be\r\n   * @param {Object} styleOverride override for fabric.Object controls style\r\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\r\n   */\r\n  function renderSquareControl(ctx, left, top, styleOverride, fabricObject) {\r\n    styleOverride = styleOverride || {};\r\n    var xSize = this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\r\n        ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\r\n        transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\r\n          styleOverride.transparentCorners : fabricObject.transparentCorners,\r\n        methodName = transparentCorners ? 'stroke' : 'fill',\r\n        stroke = !transparentCorners && (\r\n          styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor\r\n        ), xSizeBy2 = xSize / 2, ySizeBy2 = ySize / 2;\r\n    ctx.save();\r\n    ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor;\r\n    ctx.strokeStyle = styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor;\r\n    // this is still wrong\r\n    ctx.lineWidth = 1;\r\n    ctx.translate(left, top);\r\n    ctx.rotate(degreesToRadians(fabricObject.angle));\r\n    // this does not work, and fixed with ( && ) does not make sense.\r\n    // to have real transparent corners we need the controls on upperCanvas\r\n    // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\r\n    ctx[methodName + 'Rect'](-xSizeBy2, -ySizeBy2, xSize, ySize);\r\n    if (stroke) {\r\n      ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  controls.renderCircleControl = renderCircleControl;\r\n  controls.renderSquareControl = renderSquareControl;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { });\r\n\r\n  function Control(options) {\r\n    for (var i in options) {\r\n      this[i] = options[i];\r\n    }\r\n  }\r\n\r\n  fabric.Control = Control;\r\n\r\n  fabric.Control.prototype = /** @lends fabric.Control.prototype */ {\r\n\r\n    /**\r\n     * keep track of control visibility.\r\n     * mainly for backward compatibility.\r\n     * if you do not want to see a control, you can remove it\r\n     * from the controlset.\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    visible: true,\r\n\r\n    /**\r\n     * Name of the action that the control will likely execute.\r\n     * This is optional. FabricJS uses to identify what the user is doing for some\r\n     * extra optimizations. If you are writing a custom control and you want to know\r\n     * somewhere else in the code what is going on, you can use this string here.\r\n     * you can also provide a custom getActionName if your control run multiple actions\r\n     * depending on some external state.\r\n     * default to scale since is the most common, used on 4 corners by default\r\n     * @type {String}\r\n     * @default 'scale'\r\n     */\r\n    actionName: 'scale',\r\n\r\n    /**\r\n     * Drawing angle of the control.\r\n     * NOT used for now, but name marked as needed for internal logic\r\n     * example: to reuse the same drawing function for different rotated controls\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    angle: 0,\r\n\r\n    /**\r\n     * Relative position of the control. X\r\n     * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\r\n     * of the bounding box.\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    x: 0,\r\n\r\n    /**\r\n     * Relative position of the control. Y\r\n     * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\r\n     * of the bounding box.\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    y: 0,\r\n\r\n    /**\r\n     * Horizontal offset of the control from the defined position. In pixels\r\n     * Positive offset moves the control to the right, negative to the left.\r\n     * It used when you want to have position of control that does not scale with\r\n     * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\r\n     * the boundindbox, with an offset of 30 pixels vertically. Those 30 pixels will\r\n     * stay 30 pixels no matter how the object is big. Another example is having 2\r\n     * controls in the corner, that stay in the same position when the object scale.\r\n     * of the bounding box.\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    offsetX: 0,\r\n\r\n    /**\r\n     * Vertical offset of the control from the defined position. In pixels\r\n     * Positive offset moves the control to the bottom, negative to the top.\r\n     * @type {Number}\r\n     * @default 0\r\n     */\r\n    offsetY: 0,\r\n\r\n    /**\r\n     * Sets the length of the control. If null, defaults to object's cornerSize.\r\n     * Expects both sizeX and sizeY to be set when set.\r\n     * @type {?Number}\r\n     * @default null\r\n     */\r\n    sizeX: null,\r\n\r\n    /**\r\n     * Sets the height of the control. If null, defaults to object's cornerSize.\r\n     * Expects both sizeX and sizeY to be set when set.\r\n     * @type {?Number}\r\n     * @default null\r\n     */\r\n    sizeY: null,\r\n\r\n    /**\r\n     * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\r\n     * Expects both touchSizeX and touchSizeY to be set when set.\r\n     * @type {?Number}\r\n     * @default null\r\n     */\r\n    touchSizeX: null,\r\n\r\n    /**\r\n     * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\r\n     * Expects both touchSizeX and touchSizeY to be set when set.\r\n     * @type {?Number}\r\n     * @default null\r\n     */\r\n    touchSizeY: null,\r\n\r\n    /**\r\n     * Css cursor style to display when the control is hovered.\r\n     * if the method `cursorStyleHandler` is provided, this property is ignored.\r\n     * @type {String}\r\n     * @default 'crosshair'\r\n     */\r\n    cursorStyle: 'crosshair',\r\n\r\n    /**\r\n     * If controls has an offsetY or offsetX, draw a line that connects\r\n     * the control to the bounding box\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    withConnection: false,\r\n\r\n    /**\r\n     * The control actionHandler, provide one to handle action ( control being moved )\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {Object} transformData properties of the current transform\r\n     * @param {Number} x x position of the cursor\r\n     * @param {Number} y y position of the cursor\r\n     * @return {Boolean} true if the action/event modified the object\r\n     */\r\n    actionHandler: function(/* eventData, transformData, x, y */) { },\r\n\r\n    /**\r\n     * The control handler for mouse down, provide one to handle mouse down on control\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {Object} transformData properties of the current transform\r\n     * @param {Number} x x position of the cursor\r\n     * @param {Number} y y position of the cursor\r\n     * @return {Boolean} true if the action/event modified the object\r\n     */\r\n    mouseDownHandler: function(/* eventData, transformData, x, y */) { },\r\n\r\n    /**\r\n     * The control mouseUpHandler, provide one to handle an effect on mouse up.\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {Object} transformData properties of the current transform\r\n     * @param {Number} x x position of the cursor\r\n     * @param {Number} y y position of the cursor\r\n     * @return {Boolean} true if the action/event modified the object\r\n     */\r\n    mouseUpHandler: function(/* eventData, transformData, x, y */) { },\r\n\r\n    /**\r\n     * Returns control actionHandler\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {fabric.Object} fabricObject on which the control is displayed\r\n     * @param {fabric.Control} control control for which the action handler is being asked\r\n     * @return {Function} the action handler\r\n     */\r\n    getActionHandler: function(/* eventData, fabricObject, control */) {\r\n      return this.actionHandler;\r\n    },\r\n\r\n    /**\r\n     * Returns control mouseDown handler\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {fabric.Object} fabricObject on which the control is displayed\r\n     * @param {fabric.Control} control control for which the action handler is being asked\r\n     * @return {Function} the action handler\r\n     */\r\n    getMouseDownHandler: function(/* eventData, fabricObject, control */) {\r\n      return this.mouseDownHandler;\r\n    },\r\n\r\n    /**\r\n     * Returns control mouseUp handler\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {fabric.Object} fabricObject on which the control is displayed\r\n     * @param {fabric.Control} control control for which the action handler is being asked\r\n     * @return {Function} the action handler\r\n     */\r\n    getMouseUpHandler: function(/* eventData, fabricObject, control */) {\r\n      return this.mouseUpHandler;\r\n    },\r\n\r\n    /**\r\n     * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\r\n     * function you can pass one in the constructor\r\n     * the cursorStyle property\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {fabric.Control} control the current control ( likely this)\r\n     * @param {fabric.Object} object on which the control is displayed\r\n     * @return {String}\r\n     */\r\n    cursorStyleHandler: function(eventData, control /* fabricObject */) {\r\n      return control.cursorStyle;\r\n    },\r\n\r\n    /**\r\n     * Returns the action name. The basic implementation just return the actionName property.\r\n     * @param {Event} eventData the native mouse event\r\n     * @param {fabric.Control} control the current control ( likely this)\r\n     * @param {fabric.Object} object on which the control is displayed\r\n     * @return {String}\r\n     */\r\n    getActionName: function(eventData, control /* fabricObject */) {\r\n      return control.actionName;\r\n    },\r\n\r\n    /**\r\n     * Returns controls visibility\r\n     * @param {fabric.Object} object on which the control is displayed\r\n     * @param {String} controlKey key where the control is memorized on the\r\n     * @return {Boolean}\r\n     */\r\n    getVisibility: function(fabricObject, controlKey) {\r\n      var objectVisibility = fabricObject._controlsVisibility;\r\n      if (objectVisibility && typeof objectVisibility[controlKey] !== 'undefined') {\r\n        return objectVisibility[controlKey];\r\n      }\r\n      return this.visible;\r\n    },\r\n\r\n    /**\r\n     * Sets controls visibility\r\n     * @param {Boolean} visibility for the object\r\n     * @return {Void}\r\n     */\r\n    setVisibility: function(visibility /* name, fabricObject */) {\r\n      this.visible = visibility;\r\n    },\r\n\r\n\r\n    positionHandler: function(dim, finalMatrix /*, fabricObject, currentControl */) {\r\n      var point = fabric.util.transformPoint({\r\n        x: this.x * dim.x + this.offsetX,\r\n        y: this.y * dim.y + this.offsetY }, finalMatrix);\r\n      return point;\r\n    },\r\n\r\n    /**\r\n     * Returns the coords for this control based on object values.\r\n     * @param {Number} objectAngle angle from the fabric object holding the control\r\n     * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\r\n     *   isTouch is true)\r\n     * @param {Number} centerX x coordinate where the control center should be\r\n     * @param {Number} centerY y coordinate where the control center should be\r\n     * @param {boolean} isTouch true if touch corner, false if normal corner\r\n     */\r\n    calcCornerCoords: function(objectAngle, objectCornerSize, centerX, centerY, isTouch) {\r\n      var cosHalfOffset,\r\n          sinHalfOffset,\r\n          cosHalfOffsetComp,\r\n          sinHalfOffsetComp,\r\n          xSize = (isTouch) ? this.touchSizeX : this.sizeX,\r\n          ySize = (isTouch) ? this.touchSizeY : this.sizeY;\r\n      if (xSize && ySize && xSize !== ySize) {\r\n        // handle rectangular corners\r\n        var controlTriangleAngle = Math.atan2(ySize, xSize);\r\n        var cornerHypotenuse = Math.sqrt(xSize * xSize + ySize * ySize) / 2;\r\n        var newTheta = controlTriangleAngle - fabric.util.degreesToRadians(objectAngle);\r\n        var newThetaComp = Math.PI / 2 - controlTriangleAngle - fabric.util.degreesToRadians(objectAngle);\r\n        cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta);\r\n        sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta);\r\n        // use complementary angle for two corners\r\n        cosHalfOffsetComp = cornerHypotenuse * fabric.util.cos(newThetaComp);\r\n        sinHalfOffsetComp = cornerHypotenuse * fabric.util.sin(newThetaComp);\r\n      }\r\n      else {\r\n        // handle square corners\r\n        // use default object corner size unless size is defined\r\n        var cornerSize = (xSize && ySize) ? xSize : objectCornerSize;\r\n        /* 0.7071067812 stands for sqrt(2)/2 */\r\n        cornerHypotenuse = cornerSize * 0.7071067812;\r\n        // complementary angles are equal since they're both 45 degrees\r\n        var newTheta = fabric.util.degreesToRadians(45 - objectAngle);\r\n        cosHalfOffset = cosHalfOffsetComp = cornerHypotenuse * fabric.util.cos(newTheta);\r\n        sinHalfOffset = sinHalfOffsetComp = cornerHypotenuse * fabric.util.sin(newTheta);\r\n      }\r\n\r\n      return {\r\n        tl: {\r\n          x: centerX - sinHalfOffsetComp,\r\n          y: centerY - cosHalfOffsetComp,\r\n        },\r\n        tr: {\r\n          x: centerX + cosHalfOffset,\r\n          y: centerY - sinHalfOffset,\r\n        },\r\n        bl: {\r\n          x: centerX - cosHalfOffset,\r\n          y: centerY + sinHalfOffset,\r\n        },\r\n        br: {\r\n          x: centerX + sinHalfOffsetComp,\r\n          y: centerY + cosHalfOffsetComp,\r\n        },\r\n      };\r\n    },\r\n\r\n    /**\r\n    * Render function for the control.\r\n    * When this function runs the context is unscaled. unrotate. Just retina scaled.\r\n    * all the functions will have to translate to the point left,top before starting Drawing\r\n    * if they want to draw a control where the position is detected.\r\n    * left and top are the result of the positionHandler function\r\n    * @param {RenderingContext2D} ctx the context where the control will be drawn\r\n    * @param {Number} left position of the canvas where we are about to render the control.\r\n    * @param {Number} top position of the canvas where we are about to render the control.\r\n    * @param {Object} styleOverride\r\n    * @param {fabric.Object} fabricObject the object where the control is about to be rendered\r\n    */\r\n    render: function(ctx, left, top, styleOverride, fabricObject) {\r\n      styleOverride = styleOverride || {};\r\n      switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\r\n        case 'circle':\r\n          fabric.controlsUtils.renderCircleControl.call(this, ctx, left, top, styleOverride, fabricObject);\r\n          break;\r\n        default:\r\n          fabric.controlsUtils.renderSquareControl.call(this, ctx, left, top, styleOverride, fabricObject);\r\n      }\r\n    },\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function() {\r\n\r\n  /* _FROM_SVG_START_ */\r\n  function getColorStop(el, multiplier) {\r\n    var style = el.getAttribute('style'),\r\n        offset = el.getAttribute('offset') || 0,\r\n        color, colorAlpha, opacity, i;\r\n\r\n    // convert percents to absolute values\r\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\r\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\r\n    if (style) {\r\n      var keyValuePairs = style.split(/\\s*;\\s*/);\r\n\r\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\r\n        keyValuePairs.pop();\r\n      }\r\n\r\n      for (i = keyValuePairs.length; i--; ) {\r\n\r\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\r\n            key = split[0].trim(),\r\n            value = split[1].trim();\r\n\r\n        if (key === 'stop-color') {\r\n          color = value;\r\n        }\r\n        else if (key === 'stop-opacity') {\r\n          opacity = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!color) {\r\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\r\n    }\r\n    if (!opacity) {\r\n      opacity = el.getAttribute('stop-opacity');\r\n    }\r\n\r\n    color = new fabric.Color(color);\r\n    colorAlpha = color.getAlpha();\r\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\r\n    opacity *= colorAlpha * multiplier;\r\n\r\n    return {\r\n      offset: offset,\r\n      color: color.toRgb(),\r\n      opacity: opacity\r\n    };\r\n  }\r\n\r\n  function getLinearCoords(el) {\r\n    return {\r\n      x1: el.getAttribute('x1') || 0,\r\n      y1: el.getAttribute('y1') || 0,\r\n      x2: el.getAttribute('x2') || '100%',\r\n      y2: el.getAttribute('y2') || 0\r\n    };\r\n  }\r\n\r\n  function getRadialCoords(el) {\r\n    return {\r\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\r\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\r\n      r1: 0,\r\n      x2: el.getAttribute('cx') || '50%',\r\n      y2: el.getAttribute('cy') || '50%',\r\n      r2: el.getAttribute('r') || '50%'\r\n    };\r\n  }\r\n  /* _FROM_SVG_END_ */\r\n\r\n  var clone = fabric.util.object.clone;\r\n\r\n  /**\r\n   * Gradient class\r\n   * @class fabric.Gradient\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\r\n   * @see {@link fabric.Gradient#initialize} for constructor definition\r\n   */\r\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\r\n\r\n    /**\r\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    offsetX: 0,\r\n\r\n    /**\r\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    offsetY: 0,\r\n\r\n    /**\r\n     * A transform matrix to apply to the gradient before painting.\r\n     * Imported from svg gradients, is not applied with the current transform in the center.\r\n     * Before this transform is applied, the origin point is at the top left corner of the object\r\n     * plus the addition of offsetY and offsetX.\r\n     * @type Number[]\r\n     * @default null\r\n     */\r\n    gradientTransform: null,\r\n\r\n    /**\r\n     * coordinates units for coords.\r\n     * If `pixels`, the number of coords are in the same unit of width / height.\r\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\r\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\r\n     * allowed values pixels or percentage.\r\n     * @type String\r\n     * @default 'pixels'\r\n     */\r\n    gradientUnits: 'pixels',\r\n\r\n    /**\r\n     * Gradient type linear or radial\r\n     * @type String\r\n     * @default 'pixels'\r\n     */\r\n    type: 'linear',\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\r\n     * @param {Object} [options.type] gradient type linear or radial\r\n     * @param {Object} [options.gradientUnits] gradient units\r\n     * @param {Object} [options.offsetX] SVG import compatibility\r\n     * @param {Object} [options.offsetY] SVG import compatibility\r\n     * @param {Object[]} options.colorStops contains the colorstops.\r\n     * @param {Object} options.coords contains the coords of the gradient\r\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\r\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\r\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\r\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\r\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\r\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\r\n     * @return {fabric.Gradient} thisArg\r\n     */\r\n    initialize: function(options) {\r\n      options || (options = { });\r\n      options.coords || (options.coords = { });\r\n\r\n      var coords, _this = this;\r\n\r\n      // sets everything, then coords and colorstops get sets again\r\n      Object.keys(options).forEach(function(option) {\r\n        _this[option] = options[option];\r\n      });\r\n\r\n      if (this.id) {\r\n        this.id += '_' + fabric.Object.__uid++;\r\n      }\r\n      else {\r\n        this.id = fabric.Object.__uid++;\r\n      }\r\n\r\n      coords = {\r\n        x1: options.coords.x1 || 0,\r\n        y1: options.coords.y1 || 0,\r\n        x2: options.coords.x2 || 0,\r\n        y2: options.coords.y2 || 0\r\n      };\r\n\r\n      if (this.type === 'radial') {\r\n        coords.r1 = options.coords.r1 || 0;\r\n        coords.r2 = options.coords.r2 || 0;\r\n      }\r\n\r\n      this.coords = coords;\r\n      this.colorStops = options.colorStops.slice();\r\n    },\r\n\r\n    /**\r\n     * Adds another colorStop\r\n     * @param {Object} colorStop Object with offset and color\r\n     * @return {fabric.Gradient} thisArg\r\n     */\r\n    addColorStop: function(colorStops) {\r\n      for (var position in colorStops) {\r\n        var color = new fabric.Color(colorStops[position]);\r\n        this.colorStops.push({\r\n          offset: parseFloat(position),\r\n          color: color.toRgb(),\r\n          opacity: color.getAlpha()\r\n        });\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of a gradient\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object}\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      var object = {\r\n        type: this.type,\r\n        coords: this.coords,\r\n        colorStops: this.colorStops,\r\n        offsetX: this.offsetX,\r\n        offsetY: this.offsetY,\r\n        gradientUnits: this.gradientUnits,\r\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\r\n      };\r\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n      return object;\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns SVG representation of an gradient\r\n     * @param {Object} object Object to create a gradient for\r\n     * @return {String} SVG representation of an gradient (linear/radial)\r\n     */\r\n    toSVG: function(object, options) {\r\n      var coords = clone(this.coords, true), i, len, options = options || {},\r\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\r\n          needsSwap = coords.r1 > coords.r2,\r\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\r\n          offsetX = -this.offsetX, offsetY = -this.offsetY,\r\n          withViewport = !!options.additionalTransform,\r\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox';\r\n      // colorStops must be sorted ascending\r\n      colorStops.sort(function(a, b) {\r\n        return a.offset - b.offset;\r\n      });\r\n\r\n      if (gradientUnits === 'objectBoundingBox') {\r\n        offsetX /= object.width;\r\n        offsetY /= object.height;\r\n      }\r\n      else {\r\n        offsetX += object.width / 2;\r\n        offsetY += object.height / 2;\r\n      }\r\n      if (object.type === 'path' && this.gradientUnits !== 'percentage') {\r\n        offsetX -= object.pathOffset.x;\r\n        offsetY -= object.pathOffset.y;\r\n      }\r\n\r\n\r\n      transform[4] -= offsetX;\r\n      transform[5] -= offsetY;\r\n\r\n      commonAttributes = 'id=\"SVGID_' + this.id +\r\n                     '\" gradientUnits=\"' + gradientUnits + '\"';\r\n      commonAttributes += ' gradientTransform=\"' + (withViewport ?\r\n        options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\r\n\r\n      if (this.type === 'linear') {\r\n        markup = [\r\n          '<linearGradient ',\r\n          commonAttributes,\r\n          ' x1=\"', coords.x1,\r\n          '\" y1=\"', coords.y1,\r\n          '\" x2=\"', coords.x2,\r\n          '\" y2=\"', coords.y2,\r\n          '\">\\n'\r\n        ];\r\n      }\r\n      else if (this.type === 'radial') {\r\n        // svg radial gradient has just 1 radius. the biggest.\r\n        markup = [\r\n          '<radialGradient ',\r\n          commonAttributes,\r\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\r\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\r\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\r\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\r\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\r\n          '\">\\n'\r\n        ];\r\n      }\r\n\r\n      if (this.type === 'radial') {\r\n        if (needsSwap) {\r\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\r\n          colorStops = colorStops.concat();\r\n          colorStops.reverse();\r\n          for (i = 0, len = colorStops.length; i < len; i++) {\r\n            colorStops[i].offset = 1 - colorStops[i].offset;\r\n          }\r\n        }\r\n        var minRadius = Math.min(coords.r1, coords.r2);\r\n        if (minRadius > 0) {\r\n          // i have to shift all colorStops and add new one in 0.\r\n          var maxRadius = Math.max(coords.r1, coords.r2),\r\n              percentageShift = minRadius / maxRadius;\r\n          for (i = 0, len = colorStops.length; i < len; i++) {\r\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (i = 0, len = colorStops.length; i < len; i++) {\r\n        var colorStop = colorStops[i];\r\n        markup.push(\r\n          '<stop ',\r\n          'offset=\"', (colorStop.offset * 100) + '%',\r\n          '\" style=\"stop-color:', colorStop.color,\r\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\r\n          '\"/>\\n'\r\n        );\r\n      }\r\n\r\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\r\n\r\n      return markup.join('');\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    /**\r\n     * Returns an instance of CanvasGradient\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @return {CanvasGradient}\r\n     */\r\n    toLive: function(ctx) {\r\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\r\n\r\n      if (!this.type) {\r\n        return;\r\n      }\r\n\r\n      if (this.type === 'linear') {\r\n        gradient = ctx.createLinearGradient(\r\n          coords.x1, coords.y1, coords.x2, coords.y2);\r\n      }\r\n      else if (this.type === 'radial') {\r\n        gradient = ctx.createRadialGradient(\r\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\r\n      }\r\n\r\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\r\n        var color = this.colorStops[i].color,\r\n            opacity = this.colorStops[i].opacity,\r\n            offset = this.colorStops[i].offset;\r\n\r\n        if (typeof opacity !== 'undefined') {\r\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\r\n        }\r\n        gradient.addColorStop(offset, color);\r\n      }\r\n\r\n      return gradient;\r\n    }\r\n  });\r\n\r\n  fabric.util.object.extend(fabric.Gradient, {\r\n\r\n    /* _FROM_SVG_START_ */\r\n    /**\r\n     * Returns {@link fabric.Gradient} instance from an SVG element\r\n     * @static\r\n     * @memberOf fabric.Gradient\r\n     * @param {SVGGradientElement} el SVG gradient element\r\n     * @param {fabric.Object} instance\r\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\r\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly gradients\r\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\r\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\r\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\r\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\r\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\r\n     * @return {fabric.Gradient} Gradient instance\r\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\r\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\r\n     */\r\n    fromElement: function(el, instance, opacityAttr, svgOptions) {\r\n      /**\r\n       *  @example:\r\n       *\r\n       *  <linearGradient id=\"linearGrad1\">\r\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\r\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\r\n       *  </linearGradient>\r\n       *\r\n       *  OR\r\n       *\r\n       *  <linearGradient id=\"linearGrad2\">\r\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\r\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\r\n       *  </linearGradient>\r\n       *\r\n       *  OR\r\n       *\r\n       *  <radialGradient id=\"radialGrad1\">\r\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\r\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n       *  </radialGradient>\r\n       *\r\n       *  OR\r\n       *\r\n       *  <radialGradient id=\"radialGrad2\">\r\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\r\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\r\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\r\n       *  </radialGradient>\r\n       *\r\n       */\r\n\r\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\r\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\r\n      if (isNaN(multiplier)) {\r\n        multiplier = 1;\r\n      }\r\n\r\n      var colorStopEls = el.getElementsByTagName('stop'),\r\n          type,\r\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ?\r\n            'pixels' : 'percentage',\r\n          gradientTransform = el.getAttribute('gradientTransform') || '',\r\n          colorStops = [],\r\n          coords, i, offsetX = 0, offsetY = 0,\r\n          transformMatrix;\r\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\r\n        type = 'linear';\r\n        coords = getLinearCoords(el);\r\n      }\r\n      else {\r\n        type = 'radial';\r\n        coords = getRadialCoords(el);\r\n      }\r\n\r\n      for (i = colorStopEls.length; i--; ) {\r\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\r\n      }\r\n\r\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\r\n\r\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\r\n\r\n      if (gradientUnits === 'pixels') {\r\n        offsetX = -instance.left;\r\n        offsetY = -instance.top;\r\n      }\r\n\r\n      var gradient = new fabric.Gradient({\r\n        id: el.getAttribute('id'),\r\n        type: type,\r\n        coords: coords,\r\n        colorStops: colorStops,\r\n        gradientUnits: gradientUnits,\r\n        gradientTransform: transformMatrix,\r\n        offsetX: offsetX,\r\n        offsetY: offsetY,\r\n      });\r\n\r\n      return gradient;\r\n    }\r\n    /* _FROM_SVG_END_ */\r\n  });\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\r\n    var propValue, finalValue;\r\n    Object.keys(options).forEach(function(prop) {\r\n      propValue = options[prop];\r\n      if (propValue === 'Infinity') {\r\n        finalValue = 1;\r\n      }\r\n      else if (propValue === '-Infinity') {\r\n        finalValue = 0;\r\n      }\r\n      else {\r\n        finalValue = parseFloat(options[prop], 10);\r\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\r\n          finalValue *= 0.01;\r\n          if (gradientUnits === 'pixels') {\r\n            // then we need to fix those percentages here in svg parsing\r\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\r\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\r\n            }\r\n            if (prop === 'y1' || prop === 'y2') {\r\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      options[prop] = finalValue;\r\n    });\r\n  }\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  var toFixed = fabric.util.toFixed;\r\n\r\n  /**\r\n   * Pattern class\r\n   * @class fabric.Pattern\r\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\r\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\r\n   * @see {@link fabric.Pattern#initialize} for constructor definition\r\n   */\r\n\r\n\r\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\r\n\r\n    /**\r\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\r\n     * @type String\r\n     * @default\r\n     */\r\n    repeat: 'repeat',\r\n\r\n    /**\r\n     * Pattern horizontal offset from object's left/top corner\r\n     * @type Number\r\n     * @default\r\n     */\r\n    offsetX: 0,\r\n\r\n    /**\r\n     * Pattern vertical offset from object's left/top corner\r\n     * @type Number\r\n     * @default\r\n     */\r\n    offsetY: 0,\r\n\r\n    /**\r\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n     * @type String\r\n     * @default\r\n     */\r\n    crossOrigin: '',\r\n\r\n    /**\r\n     * transform matrix to change the pattern, imported from svgs.\r\n     * @type Array\r\n     * @default\r\n     */\r\n    patternTransform: null,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     * @param {Function} [callback] function to invoke after callback init.\r\n     * @return {fabric.Pattern} thisArg\r\n     */\r\n    initialize: function(options, callback) {\r\n      options || (options = { });\r\n\r\n      this.id = fabric.Object.__uid++;\r\n      this.setOptions(options);\r\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\r\n        callback && callback(this);\r\n        return;\r\n      }\r\n      else {\r\n        // img src string\r\n        var _this = this;\r\n        this.source = fabric.util.createImage();\r\n        fabric.util.loadImage(options.source, function(img, isError) {\r\n          _this.source = img;\r\n          callback && callback(_this, isError);\r\n        }, null, this.crossOrigin);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of a pattern\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} Object representation of a pattern instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n          source, object;\r\n\r\n      // <img> element\r\n      if (typeof this.source.src === 'string') {\r\n        source = this.source.src;\r\n      }\r\n      // <canvas> element\r\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\r\n        source = this.source.toDataURL();\r\n      }\r\n\r\n      object = {\r\n        type: 'pattern',\r\n        source: source,\r\n        repeat: this.repeat,\r\n        crossOrigin: this.crossOrigin,\r\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\r\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\r\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\r\n      };\r\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n\r\n      return object;\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns SVG representation of a pattern\r\n     * @param {fabric.Object} object\r\n     * @return {String} SVG representation of a pattern\r\n     */\r\n    toSVG: function(object) {\r\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\r\n          patternWidth = patternSource.width / object.width,\r\n          patternHeight = patternSource.height / object.height,\r\n          patternOffsetX = this.offsetX / object.width,\r\n          patternOffsetY = this.offsetY / object.height,\r\n          patternImgSrc = '';\r\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\r\n        patternHeight = 1;\r\n        if (patternOffsetY) {\r\n          patternHeight += Math.abs(patternOffsetY);\r\n        }\r\n      }\r\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\r\n        patternWidth = 1;\r\n        if (patternOffsetX) {\r\n          patternWidth += Math.abs(patternOffsetX);\r\n        }\r\n\r\n      }\r\n      if (patternSource.src) {\r\n        patternImgSrc = patternSource.src;\r\n      }\r\n      else if (patternSource.toDataURL) {\r\n        patternImgSrc = patternSource.toDataURL();\r\n      }\r\n\r\n      return '<pattern id=\"SVGID_' + this.id +\r\n                    '\" x=\"' + patternOffsetX +\r\n                    '\" y=\"' + patternOffsetY +\r\n                    '\" width=\"' + patternWidth +\r\n                    '\" height=\"' + patternHeight + '\">\\n' +\r\n               '<image x=\"0\" y=\"0\"' +\r\n                      ' width=\"' + patternSource.width +\r\n                      '\" height=\"' + patternSource.height +\r\n                      '\" xlink:href=\"' + patternImgSrc +\r\n               '\"></image>\\n' +\r\n             '</pattern>\\n';\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    setOptions: function(options) {\r\n      for (var prop in options) {\r\n        this[prop] = options[prop];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns an instance of CanvasPattern\r\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\r\n     * @return {CanvasPattern}\r\n     */\r\n    toLive: function(ctx) {\r\n      var source = this.source;\r\n      // if the image failed to load, return, and allow rest to continue loading\r\n      if (!source) {\r\n        return '';\r\n      }\r\n\r\n      // if an image\r\n      if (typeof source.src !== 'undefined') {\r\n        if (!source.complete) {\r\n          return '';\r\n        }\r\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\r\n          return '';\r\n        }\r\n      }\r\n      return ctx.createPattern(source, this.repeat);\r\n    }\r\n  });\r\n})();\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      toFixed = fabric.util.toFixed;\r\n\r\n  if (fabric.Shadow) {\r\n    fabric.warn('fabric.Shadow is already defined.');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Shadow class\r\n   * @class fabric.Shadow\r\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\r\n   * @see {@link fabric.Shadow#initialize} for constructor definition\r\n   */\r\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\r\n\r\n    /**\r\n     * Shadow color\r\n     * @type String\r\n     * @default\r\n     */\r\n    color: 'rgb(0,0,0)',\r\n\r\n    /**\r\n     * Shadow blur\r\n     * @type Number\r\n     */\r\n    blur: 0,\r\n\r\n    /**\r\n     * Shadow horizontal offset\r\n     * @type Number\r\n     * @default\r\n     */\r\n    offsetX: 0,\r\n\r\n    /**\r\n     * Shadow vertical offset\r\n     * @type Number\r\n     * @default\r\n     */\r\n    offsetY: 0,\r\n\r\n    /**\r\n     * Whether the shadow should affect stroke operations\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    affectStroke: false,\r\n\r\n    /**\r\n     * Indicates whether toObject should include default values\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    includeDefaultValues: true,\r\n\r\n    /**\r\n     * When `false`, the shadow will scale with the object.\r\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\r\n     * default to false\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    nonScaling: false,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\r\n     * @return {fabric.Shadow} thisArg\r\n     */\r\n    initialize: function(options) {\r\n\r\n      if (typeof options === 'string') {\r\n        options = this._parseShadow(options);\r\n      }\r\n\r\n      for (var prop in options) {\r\n        this[prop] = options[prop];\r\n      }\r\n\r\n      this.id = fabric.Object.__uid++;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} shadow Shadow value to parse\r\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\r\n     */\r\n    _parseShadow: function(shadow) {\r\n      var shadowStr = shadow.trim(),\r\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\r\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\r\n\r\n      return {\r\n        color: color.trim(),\r\n        offsetX: parseFloat(offsetsAndBlur[1], 10) || 0,\r\n        offsetY: parseFloat(offsetsAndBlur[2], 10) || 0,\r\n        blur: parseFloat(offsetsAndBlur[3], 10) || 0\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns a string representation of an instance\r\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\r\n     * @return {String} Returns CSS3 text-shadow declaration\r\n     */\r\n    toString: function() {\r\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns SVG representation of a shadow\r\n     * @param {fabric.Object} object\r\n     * @return {String} SVG representation of a shadow\r\n     */\r\n    toSVG: function(object) {\r\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n          offset = fabric.util.rotateVector(\r\n            { x: this.offsetX, y: this.offsetY },\r\n            fabric.util.degreesToRadians(-object.angle)),\r\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\r\n\r\n      if (object.width && object.height) {\r\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\r\n        // we add some extra space to filter box to contain the blur ( 20 )\r\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\r\n      }\r\n      if (object.flipX) {\r\n        offset.x *= -1;\r\n      }\r\n      if (object.flipY) {\r\n        offset.y *= -1;\r\n      }\r\n\r\n      return (\r\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\r\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\r\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\r\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\r\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\r\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\r\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\r\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\r\n          '\\t<feMerge>\\n' +\r\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\r\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\r\n          '\\t</feMerge>\\n' +\r\n        '</filter>\\n');\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    /**\r\n     * Returns object representation of a shadow\r\n     * @return {Object} Object representation of a shadow instance\r\n     */\r\n    toObject: function() {\r\n      if (this.includeDefaultValues) {\r\n        return {\r\n          color: this.color,\r\n          blur: this.blur,\r\n          offsetX: this.offsetX,\r\n          offsetY: this.offsetY,\r\n          affectStroke: this.affectStroke,\r\n          nonScaling: this.nonScaling\r\n        };\r\n      }\r\n      var obj = { }, proto = fabric.Shadow.prototype;\r\n\r\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\r\n        if (this[prop] !== proto[prop]) {\r\n          obj[prop] = this[prop];\r\n        }\r\n      }, this);\r\n\r\n      return obj;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\r\n   * @static\r\n   * @field\r\n   * @memberOf fabric.Shadow\r\n   */\r\n  // eslint-disable-next-line max-len\r\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?(\\d+(?:\\.\\d*)?(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function () {\r\n\r\n  'use strict';\r\n\r\n  if (fabric.StaticCanvas) {\r\n    fabric.warn('fabric.StaticCanvas is already defined.');\r\n    return;\r\n  }\r\n\r\n  // aliases for faster resolution\r\n  var extend = fabric.util.object.extend,\r\n      getElementOffset = fabric.util.getElementOffset,\r\n      removeFromArray = fabric.util.removeFromArray,\r\n      toFixed = fabric.util.toFixed,\r\n      transformPoint = fabric.util.transformPoint,\r\n      invertTransform = fabric.util.invertTransform,\r\n      getNodeCanvas = fabric.util.getNodeCanvas,\r\n      createCanvasElement = fabric.util.createCanvasElement,\r\n\r\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\r\n\r\n  /**\r\n   * Static canvas class\r\n   * @class fabric.StaticCanvas\r\n   * @mixes fabric.Collection\r\n   * @mixes fabric.Observable\r\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\r\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\r\n   * @fires before:render\r\n   * @fires after:render\r\n   * @fires canvas:cleared\r\n   * @fires object:added\r\n   * @fires object:removed\r\n   */\r\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n     * @param {Object} [options] Options object\r\n     * @return {Object} thisArg\r\n     */\r\n    initialize: function(el, options) {\r\n      options || (options = { });\r\n      this.renderAndResetBound = this.renderAndReset.bind(this);\r\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n      this._initStatic(el, options);\r\n    },\r\n\r\n    /**\r\n     * Background color of canvas instance.\r\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\r\n     * @type {(String|fabric.Pattern)}\r\n     * @default\r\n     */\r\n    backgroundColor: '',\r\n\r\n    /**\r\n     * Background image of canvas instance.\r\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\r\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\r\n     * vale. As an alternative you can disable image objectCaching\r\n     * @type fabric.Image\r\n     * @default\r\n     */\r\n    backgroundImage: null,\r\n\r\n    /**\r\n     * Overlay color of canvas instance.\r\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\r\n     * @since 1.3.9\r\n     * @type {(String|fabric.Pattern)}\r\n     * @default\r\n     */\r\n    overlayColor: '',\r\n\r\n    /**\r\n     * Overlay image of canvas instance.\r\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\r\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\r\n     * vale. As an alternative you can disable image objectCaching\r\n     * @type fabric.Image\r\n     * @default\r\n     */\r\n    overlayImage: null,\r\n\r\n    /**\r\n     * Indicates whether toObject/toDatalessObject should include default values\r\n     * if set to false, takes precedence over the object value.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    includeDefaultValues: true,\r\n\r\n    /**\r\n     * Indicates whether objects' state should be saved\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    stateful: false,\r\n\r\n    /**\r\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\r\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\r\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\r\n     * since the renders are quequed and executed one per frame.\r\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\r\n     * Left default to true to do not break documentation and old app, fiddles.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    renderOnAddRemove: true,\r\n\r\n    /**\r\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    controlsAboveOverlay: false,\r\n\r\n    /**\r\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    allowTouchScrolling: false,\r\n\r\n    /**\r\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    imageSmoothingEnabled: true,\r\n\r\n    /**\r\n     * The transformation (in the format of Canvas transform) which focuses the viewport\r\n     * @type Array\r\n     * @default\r\n     */\r\n    viewportTransform: fabric.iMatrix.concat(),\r\n\r\n    /**\r\n     * if set to false background image is not affected by viewport transform\r\n     * @since 1.6.3\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    backgroundVpt: true,\r\n\r\n    /**\r\n     * if set to false overlya image is not affected by viewport transform\r\n     * @since 1.6.3\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    overlayVpt: true,\r\n\r\n    /**\r\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    enableRetinaScaling: true,\r\n\r\n    /**\r\n     * Describe canvas element extension over design\r\n     * properties are tl,tr,bl,br.\r\n     * if canvas is not zoomed/panned those points are the four corner of canvas\r\n     * if canvas is viewportTransformed you those points indicate the extension\r\n     * of canvas element in plain untrasformed coordinates\r\n     * The coordinates get updated with @method calcViewportBoundaries.\r\n     * @memberOf fabric.StaticCanvas.prototype\r\n     */\r\n    vptCoords: { },\r\n\r\n    /**\r\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\r\n     * are not included in current viewport.\r\n     * May greatly help in applications with crowded canvas and use of zoom/pan\r\n     * If One of the corner of the bounding box of the object is on the canvas\r\n     * the objects get rendered.\r\n     * @memberOf fabric.StaticCanvas.prototype\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    skipOffscreen: true,\r\n\r\n    /**\r\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\r\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\r\n     * top left corner of the canvas.\r\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\r\n     * @type fabric.Object\r\n     */\r\n    clipPath: undefined,\r\n\r\n    /**\r\n     * @private\r\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _initStatic: function(el, options) {\r\n      var cb = this.requestRenderAllBound;\r\n      this._objects = [];\r\n      this._createLowerCanvas(el);\r\n      this._initOptions(options);\r\n      // only initialize retina scaling once\r\n      if (!this.interactive) {\r\n        this._initRetinaScaling();\r\n      }\r\n\r\n      if (options.overlayImage) {\r\n        this.setOverlayImage(options.overlayImage, cb);\r\n      }\r\n      if (options.backgroundImage) {\r\n        this.setBackgroundImage(options.backgroundImage, cb);\r\n      }\r\n      if (options.backgroundColor) {\r\n        this.setBackgroundColor(options.backgroundColor, cb);\r\n      }\r\n      if (options.overlayColor) {\r\n        this.setOverlayColor(options.overlayColor, cb);\r\n      }\r\n      this.calcOffset();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _isRetinaScaling: function() {\r\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} retinaScaling if applied, otherwise 1;\r\n     */\r\n    getRetinaScaling: function() {\r\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _initRetinaScaling: function() {\r\n      if (!this._isRetinaScaling()) {\r\n        return;\r\n      }\r\n      var scaleRatio = fabric.devicePixelRatio;\r\n      this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\r\n      if (this.upperCanvasEl) {\r\n        this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\r\n      }\r\n    },\r\n\r\n    __initRetinaScaling: function(scaleRatio, canvas, context) {\r\n      canvas.setAttribute('width', this.width * scaleRatio);\r\n      canvas.setAttribute('height', this.height * scaleRatio);\r\n      context.scale(scaleRatio, scaleRatio);\r\n    },\r\n\r\n\r\n    /**\r\n     * Calculates canvas element offset relative to the document\r\n     * This method is also attached as \"resize\" event handler of window\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     */\r\n    calcOffset: function () {\r\n      this._offset = getElementOffset(this.lowerCanvasEl);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\r\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\r\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\r\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\r\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\r\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n     *   // Needed to position overlayImage at 0/0\r\n     *   originX: 'left',\r\n     *   originY: 'top'\r\n     * });\r\n     * @example <caption>overlayImage with different properties</caption>\r\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n     *   opacity: 0.5,\r\n     *   angle: 45,\r\n     *   left: 400,\r\n     *   top: 400,\r\n     *   originX: 'left',\r\n     *   originY: 'top'\r\n     * });\r\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\r\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img, isError) {\r\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\r\n     * });\r\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\r\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n     *   width: canvas.width,\r\n     *   height: canvas.height,\r\n     *   // Needed to position overlayImage at 0/0\r\n     *   originX: 'left',\r\n     *   originY: 'top'\r\n     * });\r\n     * @example <caption>overlayImage loaded from cross-origin</caption>\r\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\r\n     *   opacity: 0.5,\r\n     *   angle: 45,\r\n     *   left: 400,\r\n     *   top: 400,\r\n     *   originX: 'left',\r\n     *   originY: 'top',\r\n     *   crossOrigin: 'anonymous'\r\n     * });\r\n     */\r\n    setOverlayImage: function (image, callback, options) {\r\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\r\n    },\r\n\r\n    /**\r\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\r\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\r\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\r\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\r\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\r\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n     *   // Needed to position backgroundImage at 0/0\r\n     *   originX: 'left',\r\n     *   originY: 'top'\r\n     * });\r\n     * @example <caption>backgroundImage with different properties</caption>\r\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n     *   opacity: 0.5,\r\n     *   angle: 45,\r\n     *   left: 400,\r\n     *   top: 400,\r\n     *   originX: 'left',\r\n     *   originY: 'top'\r\n     * });\r\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\r\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img, isError) {\r\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\r\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\r\n     * });\r\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\r\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n     *   width: canvas.width,\r\n     *   height: canvas.height,\r\n     *   // Needed to position backgroundImage at 0/0\r\n     *   originX: 'left',\r\n     *   originY: 'top'\r\n     * });\r\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\r\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\r\n     *   opacity: 0.5,\r\n     *   angle: 45,\r\n     *   left: 400,\r\n     *   top: 400,\r\n     *   originX: 'left',\r\n     *   originY: 'top',\r\n     *   crossOrigin: 'anonymous'\r\n     * });\r\n     */\r\n    // TODO: fix stretched examples\r\n    setBackgroundImage: function (image, callback, options) {\r\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\r\n    },\r\n\r\n    /**\r\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\r\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\r\n     * @param {Function} callback Callback to invoke when foreground color is set\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\r\n     * @example <caption>Normal overlayColor - color value</caption>\r\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\r\n     * canvas.setOverlayColor({\r\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n     * }, canvas.renderAll.bind(canvas));\r\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\r\n     * canvas.setOverlayColor({\r\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n     *   repeat: 'repeat',\r\n     *   offsetX: 200,\r\n     *   offsetY: 100\r\n     * }, canvas.renderAll.bind(canvas));\r\n     */\r\n    setOverlayColor: function(overlayColor, callback) {\r\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\r\n    },\r\n\r\n    /**\r\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\r\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\r\n     * @param {Function} callback Callback to invoke when background color is set\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\r\n     * @example <caption>Normal backgroundColor - color value</caption>\r\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\r\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\r\n     * canvas.setBackgroundColor({\r\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\r\n     * }, canvas.renderAll.bind(canvas));\r\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\r\n     * canvas.setBackgroundColor({\r\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\r\n     *   repeat: 'repeat',\r\n     *   offsetX: 200,\r\n     *   offsetY: 100\r\n     * }, canvas.renderAll.bind(canvas));\r\n     */\r\n    setBackgroundColor: function(backgroundColor, callback) {\r\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\r\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\r\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\r\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay. The first argument is the created image, the second argument is a flag indicating whether an error occurred or not.\r\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\r\n     */\r\n    __setBgOverlayImage: function(property, image, callback, options) {\r\n      if (typeof image === 'string') {\r\n        fabric.util.loadImage(image, function(img, isError) {\r\n          if (img) {\r\n            var instance = new fabric.Image(img, options);\r\n            this[property] = instance;\r\n            instance.canvas = this;\r\n          }\r\n          callback && callback(img, isError);\r\n        }, this, options && options.crossOrigin);\r\n      }\r\n      else {\r\n        options && image.setOptions(options);\r\n        this[property] = image;\r\n        image && (image.canvas = this);\r\n        callback && callback(image, false);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\r\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\r\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\r\n     * @param {Function} [callback] Callback is invoked when color is set\r\n     */\r\n    __setBgOverlayColor: function(property, color, callback) {\r\n      this[property] = color;\r\n      this._initGradient(color, property);\r\n      this._initPattern(color, property, callback);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _createCanvasElement: function() {\r\n      var element = createCanvasElement();\r\n      if (!element) {\r\n        throw CANVAS_INIT_ERROR;\r\n      }\r\n      if (!element.style) {\r\n        element.style = { };\r\n      }\r\n      if (typeof element.getContext === 'undefined') {\r\n        throw CANVAS_INIT_ERROR;\r\n      }\r\n      return element;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _initOptions: function (options) {\r\n      var lowerCanvasEl = this.lowerCanvasEl;\r\n      this._setOptions(options);\r\n\r\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\r\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\r\n\r\n      if (!this.lowerCanvasEl.style) {\r\n        return;\r\n      }\r\n\r\n      lowerCanvasEl.width = this.width;\r\n      lowerCanvasEl.height = this.height;\r\n\r\n      lowerCanvasEl.style.width = this.width + 'px';\r\n      lowerCanvasEl.style.height = this.height + 'px';\r\n\r\n      this.viewportTransform = this.viewportTransform.slice();\r\n    },\r\n\r\n    /**\r\n     * Creates a bottom canvas\r\n     * @private\r\n     * @param {HTMLElement} [canvasEl]\r\n     */\r\n    _createLowerCanvas: function (canvasEl) {\r\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\r\n      if (canvasEl && canvasEl.getContext) {\r\n        this.lowerCanvasEl = canvasEl;\r\n      }\r\n      else {\r\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\r\n      }\r\n\r\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\r\n      this._originalCanvasStyle = this.lowerCanvasEl.style;\r\n      if (this.interactive) {\r\n        this._applyCanvasStyle(this.lowerCanvasEl);\r\n      }\r\n\r\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\r\n    },\r\n\r\n    /**\r\n     * Returns canvas width (in px)\r\n     * @return {Number}\r\n     */\r\n    getWidth: function () {\r\n      return this.width;\r\n    },\r\n\r\n    /**\r\n     * Returns canvas height (in px)\r\n     * @return {Number}\r\n     */\r\n    getHeight: function () {\r\n      return this.height;\r\n    },\r\n\r\n    /**\r\n     * Sets width of this canvas instance\r\n     * @param {Number|String} value                         Value to set width to\r\n     * @param {Object}        [options]                     Options object\r\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    setWidth: function (value, options) {\r\n      return this.setDimensions({ width: value }, options);\r\n    },\r\n\r\n    /**\r\n     * Sets height of this canvas instance\r\n     * @param {Number|String} value                         Value to set height to\r\n     * @param {Object}        [options]                     Options object\r\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    setHeight: function (value, options) {\r\n      return this.setDimensions({ height: value }, options);\r\n    },\r\n\r\n    /**\r\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\r\n     * @param {Object}        dimensions                    Object with width/height properties\r\n     * @param {Number|String} [dimensions.width]            Width of canvas element\r\n     * @param {Number|String} [dimensions.height]           Height of canvas element\r\n     * @param {Object}        [options]                     Options object\r\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    setDimensions: function (dimensions, options) {\r\n      var cssValue;\r\n\r\n      options = options || {};\r\n\r\n      for (var prop in dimensions) {\r\n        cssValue = dimensions[prop];\r\n\r\n        if (!options.cssOnly) {\r\n          this._setBackstoreDimension(prop, dimensions[prop]);\r\n          cssValue += 'px';\r\n          this.hasLostContext = true;\r\n        }\r\n\r\n        if (!options.backstoreOnly) {\r\n          this._setCssDimension(prop, cssValue);\r\n        }\r\n      }\r\n      if (this._isCurrentlyDrawing) {\r\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\r\n      }\r\n      this._initRetinaScaling();\r\n      this.calcOffset();\r\n\r\n      if (!options.cssOnly) {\r\n        this.requestRenderAll();\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Helper for setting width/height\r\n     * @private\r\n     * @param {String} prop property (width|height)\r\n     * @param {Number} value value to set property to\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    _setBackstoreDimension: function (prop, value) {\r\n      this.lowerCanvasEl[prop] = value;\r\n\r\n      if (this.upperCanvasEl) {\r\n        this.upperCanvasEl[prop] = value;\r\n      }\r\n\r\n      if (this.cacheCanvasEl) {\r\n        this.cacheCanvasEl[prop] = value;\r\n      }\r\n\r\n      this[prop] = value;\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Helper for setting css width/height\r\n     * @private\r\n     * @param {String} prop property (width|height)\r\n     * @param {String} value value to set property to\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    _setCssDimension: function (prop, value) {\r\n      this.lowerCanvasEl.style[prop] = value;\r\n\r\n      if (this.upperCanvasEl) {\r\n        this.upperCanvasEl.style[prop] = value;\r\n      }\r\n\r\n      if (this.wrapperEl) {\r\n        this.wrapperEl.style[prop] = value;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns canvas zoom level\r\n     * @return {Number}\r\n     */\r\n    getZoom: function () {\r\n      return this.viewportTransform[0];\r\n    },\r\n\r\n    /**\r\n     * Sets viewport transform of this canvas instance\r\n     * @param {Array} vpt the transform in the form of context.transform\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    setViewportTransform: function (vpt) {\r\n      var activeObject = this._activeObject,\r\n          backgroundObject = this.backgroundImage,\r\n          overlayObject = this.overlayImage,\r\n          object, i, len;\r\n      this.viewportTransform = vpt;\r\n      for (i = 0, len = this._objects.length; i < len; i++) {\r\n        object = this._objects[i];\r\n        object.group || object.setCoords(true);\r\n      }\r\n      if (activeObject) {\r\n        activeObject.setCoords();\r\n      }\r\n      if (backgroundObject) {\r\n        backgroundObject.setCoords(true);\r\n      }\r\n      if (overlayObject) {\r\n        overlayObject.setCoords(true);\r\n      }\r\n      this.calcViewportBoundaries();\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets zoom level of this canvas instance, the zoom centered around point\r\n     * meaning that following zoom to point with the same point will have the visual\r\n     * effect of the zoom originating from that point. The point won't move.\r\n     * It has nothing to do with canvas center or visual center of the viewport.\r\n     * @param {fabric.Point} point to zoom with respect to\r\n     * @param {Number} value to set zoom to, less than 1 zooms out\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    zoomToPoint: function (point, value) {\r\n      // TODO: just change the scale, preserve other transformations\r\n      var before = point, vpt = this.viewportTransform.slice(0);\r\n      point = transformPoint(point, invertTransform(this.viewportTransform));\r\n      vpt[0] = value;\r\n      vpt[3] = value;\r\n      var after = transformPoint(point, vpt);\r\n      vpt[4] += before.x - after.x;\r\n      vpt[5] += before.y - after.y;\r\n      return this.setViewportTransform(vpt);\r\n    },\r\n\r\n    /**\r\n     * Sets zoom level of this canvas instance\r\n     * @param {Number} value to set zoom to, less than 1 zooms out\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    setZoom: function (value) {\r\n      this.zoomToPoint(new fabric.Point(0, 0), value);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Pan viewport so as to place point at top left corner of canvas\r\n     * @param {fabric.Point} point to move to\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    absolutePan: function (point) {\r\n      var vpt = this.viewportTransform.slice(0);\r\n      vpt[4] = -point.x;\r\n      vpt[5] = -point.y;\r\n      return this.setViewportTransform(vpt);\r\n    },\r\n\r\n    /**\r\n     * Pans viewpoint relatively\r\n     * @param {fabric.Point} point (position vector) to move by\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable true\r\n     */\r\n    relativePan: function (point) {\r\n      return this.absolutePan(new fabric.Point(\r\n        -point.x - this.viewportTransform[4],\r\n        -point.y - this.viewportTransform[5]\r\n      ));\r\n    },\r\n\r\n    /**\r\n     * Returns &lt;canvas> element corresponding to this instance\r\n     * @return {HTMLCanvasElement}\r\n     */\r\n    getElement: function () {\r\n      return this.lowerCanvasEl;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {fabric.Object} obj Object that was added\r\n     */\r\n    _onObjectAdded: function(obj) {\r\n      this.stateful && obj.setupState();\r\n      obj._set('canvas', this);\r\n      obj.setCoords();\r\n      this.fire('object:added', { target: obj });\r\n      obj.fire('added');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {fabric.Object} obj Object that was removed\r\n     */\r\n    _onObjectRemoved: function(obj) {\r\n      this.fire('object:removed', { target: obj });\r\n      obj.fire('removed');\r\n      delete obj.canvas;\r\n    },\r\n\r\n    /**\r\n     * Clears specified context of canvas element\r\n     * @param {CanvasRenderingContext2D} ctx Context to clear\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    clearContext: function(ctx) {\r\n      ctx.clearRect(0, 0, this.width, this.height);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns context of canvas where objects are drawn\r\n     * @return {CanvasRenderingContext2D}\r\n     */\r\n    getContext: function () {\r\n      return this.contextContainer;\r\n    },\r\n\r\n    /**\r\n     * Clears all contexts (background, main, top) of an instance\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    clear: function () {\r\n      this.remove.apply(this, this.getObjects());\r\n      this.backgroundImage = null;\r\n      this.overlayImage = null;\r\n      this.backgroundColor = '';\r\n      this.overlayColor = '';\r\n      if (this._hasITextHandlers) {\r\n        this.off('mouse:up', this._mouseUpITextHandler);\r\n        this._iTextInstances = null;\r\n        this._hasITextHandlers = false;\r\n      }\r\n      this.clearContext(this.contextContainer);\r\n      this.fire('canvas:cleared');\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Renders the canvas\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     */\r\n    renderAll: function () {\r\n      var canvasToDrawOn = this.contextContainer;\r\n      this.renderCanvas(canvasToDrawOn, this._objects);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Function created to be instance bound at initialization\r\n     * used in requestAnimationFrame rendering\r\n     * Let the fabricJS call it. If you call it manually you could have more\r\n     * animationFrame stacking on to of each other\r\n     * for an imperative rendering, use canvas.renderAll\r\n     * @private\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     */\r\n    renderAndReset: function() {\r\n      this.isRendering = 0;\r\n      this.renderAll();\r\n    },\r\n\r\n    /**\r\n     * Append a renderAll request to next animation frame.\r\n     * unless one is already in progress, in that case nothing is done\r\n     * a boolean flag will avoid appending more.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     */\r\n    requestRenderAll: function () {\r\n      if (!this.isRendering) {\r\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\r\n     * helps to determinate when an object is in the current rendering viewport using\r\n     * object absolute coordinates ( aCoords )\r\n     * @return {Object} points.tl\r\n     * @chainable\r\n     */\r\n    calcViewportBoundaries: function() {\r\n      var points = { }, width = this.width, height = this.height,\r\n          iVpt = invertTransform(this.viewportTransform);\r\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\r\n      points.br = transformPoint({ x: width, y: height }, iVpt);\r\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\r\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\r\n      this.vptCoords = points;\r\n      return points;\r\n    },\r\n\r\n    cancelRequestedRender: function() {\r\n      if (this.isRendering) {\r\n        fabric.util.cancelAnimFrame(this.isRendering);\r\n        this.isRendering = 0;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Renders background, objects, overlay and controls.\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @param {Array} objects to render\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     */\r\n    renderCanvas: function(ctx, objects) {\r\n      var v = this.viewportTransform, path = this.clipPath;\r\n      this.cancelRequestedRender();\r\n      this.calcViewportBoundaries();\r\n      this.clearContext(ctx);\r\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothingEnabled);\r\n      this.fire('before:render', { ctx: ctx, });\r\n      this._renderBackground(ctx);\r\n\r\n      ctx.save();\r\n      //apply viewport transform once for all rendering process\r\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n      this._renderObjects(ctx, objects);\r\n      ctx.restore();\r\n      if (!this.controlsAboveOverlay && this.interactive) {\r\n        this.drawControls(ctx);\r\n      }\r\n      if (path) {\r\n        path.canvas = this;\r\n        // needed to setup a couple of variables\r\n        path.shouldCache();\r\n        path._transformDone = true;\r\n        path.renderCache({ forClipping: true });\r\n        this.drawClipPathOnCanvas(ctx);\r\n      }\r\n      this._renderOverlay(ctx);\r\n      if (this.controlsAboveOverlay && this.interactive) {\r\n        this.drawControls(ctx);\r\n      }\r\n      this.fire('after:render', { ctx: ctx, });\r\n    },\r\n\r\n    /**\r\n     * Paint the cached clipPath on the lowerCanvasEl\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    drawClipPathOnCanvas: function(ctx) {\r\n      var v = this.viewportTransform, path = this.clipPath;\r\n      ctx.save();\r\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n      // DEBUG: uncomment this line, comment the following\r\n      // ctx.globalAlpha = 0.4;\r\n      ctx.globalCompositeOperation = 'destination-in';\r\n      path.transform(ctx);\r\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\r\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {Array} objects to render\r\n     */\r\n    _renderObjects: function(ctx, objects) {\r\n      var i, len;\r\n      for (i = 0, len = objects.length; i < len; ++i) {\r\n        objects[i] && objects[i].render(ctx);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {string} property 'background' or 'overlay'\r\n     */\r\n    _renderBackgroundOrOverlay: function(ctx, property) {\r\n      var fill = this[property + 'Color'], object = this[property + 'Image'],\r\n          v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\r\n      if (!fill && !object) {\r\n        return;\r\n      }\r\n      if (fill) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(this.width, 0);\r\n        ctx.lineTo(this.width, this.height);\r\n        ctx.lineTo(0, this.height);\r\n        ctx.closePath();\r\n        ctx.fillStyle = fill.toLive\r\n          ? fill.toLive(ctx, this)\r\n          : fill;\r\n        if (needsVpt) {\r\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        }\r\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\r\n        var m = fill.gradientTransform || fill.patternTransform;\r\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n      if (object) {\r\n        ctx.save();\r\n        if (needsVpt) {\r\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n        }\r\n        object.render(ctx);\r\n        ctx.restore();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderBackground: function(ctx) {\r\n      this._renderBackgroundOrOverlay(ctx, 'background');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderOverlay: function(ctx) {\r\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\r\n    },\r\n\r\n    /**\r\n     * Returns coordinates of a center of canvas.\r\n     * Returned value is an object with top and left properties\r\n     * @return {Object} object with \"top\" and \"left\" number values\r\n     */\r\n    getCenter: function () {\r\n      return {\r\n        top: this.height / 2,\r\n        left: this.width / 2\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Centers object horizontally in the canvas\r\n     * @param {fabric.Object} object Object to center horizontally\r\n     * @return {fabric.Canvas} thisArg\r\n     */\r\n    centerObjectH: function (object) {\r\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically in the canvas\r\n     * @param {fabric.Object} object Object to center vertically\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    centerObjectV: function (object) {\r\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically and horizontally in the canvas\r\n     * @param {fabric.Object} object Object to center vertically and horizontally\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    centerObject: function(object) {\r\n      var center = this.getCenter();\r\n\r\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically and horizontally in the viewport\r\n     * @param {fabric.Object} object Object to center vertically and horizontally\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    viewportCenterObject: function(object) {\r\n      var vpCenter = this.getVpCenter();\r\n\r\n      return this._centerObject(object, vpCenter);\r\n    },\r\n\r\n    /**\r\n     * Centers object horizontally in the viewport, object.top is unchanged\r\n     * @param {fabric.Object} object Object to center vertically and horizontally\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    viewportCenterObjectH: function(object) {\r\n      var vpCenter = this.getVpCenter();\r\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object Vertically in the viewport, object.top is unchanged\r\n     * @param {fabric.Object} object Object to center vertically and horizontally\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    viewportCenterObjectV: function(object) {\r\n      var vpCenter = this.getVpCenter();\r\n\r\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\r\n    },\r\n\r\n    /**\r\n     * Calculate the point in canvas that correspond to the center of actual viewport.\r\n     * @return {fabric.Point} vpCenter, viewport center\r\n     * @chainable\r\n     */\r\n    getVpCenter: function() {\r\n      var center = this.getCenter(),\r\n          iVpt = invertTransform(this.viewportTransform);\r\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {fabric.Object} object Object to center\r\n     * @param {fabric.Point} center Center point\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    _centerObject: function(object, center) {\r\n      object.setPositionByOrigin(center, 'center', 'center');\r\n      object.setCoords();\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns dataless JSON representation of canvas\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {String} json string\r\n     */\r\n    toDatalessJSON: function (propertiesToInclude) {\r\n      return this.toDatalessObject(propertiesToInclude);\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of canvas\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function (propertiesToInclude) {\r\n      return this._toObjectMethod('toObject', propertiesToInclude);\r\n    },\r\n\r\n    /**\r\n     * Returns dataless object representation of canvas\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toDatalessObject: function (propertiesToInclude) {\r\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _toObjectMethod: function (methodName, propertiesToInclude) {\r\n\r\n      var clipPath = this.clipPath, data = {\r\n        version: fabric.version,\r\n        objects: this._toObjects(methodName, propertiesToInclude),\r\n      };\r\n      if (clipPath && !clipPath.excludeFromExport) {\r\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\r\n      }\r\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\r\n\r\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\r\n\r\n      return data;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _toObjects: function(methodName, propertiesToInclude) {\r\n      return this._objects.filter(function(object) {\r\n        return !object.excludeFromExport;\r\n      }).map(function(instance) {\r\n        return this._toObject(instance, methodName, propertiesToInclude);\r\n      }, this);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _toObject: function(instance, methodName, propertiesToInclude) {\r\n      var originalValue;\r\n\r\n      if (!this.includeDefaultValues) {\r\n        originalValue = instance.includeDefaultValues;\r\n        instance.includeDefaultValues = false;\r\n      }\r\n\r\n      var object = instance[methodName](propertiesToInclude);\r\n      if (!this.includeDefaultValues) {\r\n        instance.includeDefaultValues = originalValue;\r\n      }\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\r\n      var data = {}, bgImage = this.backgroundImage, overlayImage = this.overlayImage,\r\n          bgColor = this.backgroundColor, overlayColor = this.overlayColor;\r\n\r\n      if (bgColor && bgColor.toObject) {\r\n        if (!bgColor.excludeFromExport) {\r\n          data.background = bgColor.toObject(propertiesToInclude);\r\n        }\r\n      }\r\n      else if (bgColor) {\r\n        data.background = bgColor;\r\n      }\r\n\r\n      if (overlayColor && overlayColor.toObject) {\r\n        if (!overlayColor.excludeFromExport) {\r\n          data.overlay = overlayColor.toObject(propertiesToInclude);\r\n        }\r\n      }\r\n      else if (overlayColor) {\r\n        data.overlay = overlayColor;\r\n      }\r\n\r\n      if (bgImage && !bgImage.excludeFromExport) {\r\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\r\n      }\r\n      if (overlayImage && !overlayImage.excludeFromExport) {\r\n        data.overlayImage = this._toObject(overlayImage, methodName, propertiesToInclude);\r\n      }\r\n\r\n      return data;\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\r\n     * a zoomed canvas will then produce zoomed SVG output.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    svgViewportTransformation: true,\r\n\r\n    /**\r\n     * Returns SVG representation of canvas\r\n     * @function\r\n     * @param {Object} [options] Options object for SVG output\r\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\r\n     * @param {Object} [options.viewBox] SVG viewbox object\r\n     * @param {Number} [options.viewBox.x] x-coordinate of viewbox\r\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\r\n     * @param {Number} [options.viewBox.width] Width of viewbox\r\n     * @param {Number} [options.viewBox.height] Height of viewbox\r\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\r\n     * @param {String} [options.width] desired width of svg with or without units\r\n     * @param {String} [options.height] desired height of svg with or without units\r\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\r\n     * @return {String} SVG string\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\r\n     * @example <caption>Normal SVG output</caption>\r\n     * var svg = canvas.toSVG();\r\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\r\n     * var svg = canvas.toSVG({suppressPreamble: true});\r\n     * @example <caption>SVG output with viewBox attribute</caption>\r\n     * var svg = canvas.toSVG({\r\n     *   viewBox: {\r\n     *     x: 100,\r\n     *     y: 100,\r\n     *     width: 200,\r\n     *     height: 300\r\n     *   }\r\n     * });\r\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\r\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\r\n     * @example <caption>Modify SVG output with reviver function</caption>\r\n     * var svg = canvas.toSVG(null, function(svg) {\r\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\r\n     * });\r\n     */\r\n    toSVG: function(options, reviver) {\r\n      options || (options = { });\r\n      options.reviver = reviver;\r\n      var markup = [];\r\n\r\n      this._setSVGPreamble(markup, options);\r\n      this._setSVGHeader(markup, options);\r\n      if (this.clipPath) {\r\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\r\n      }\r\n      this._setSVGBgOverlayColor(markup, 'background');\r\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\r\n      this._setSVGObjects(markup, reviver);\r\n      if (this.clipPath) {\r\n        markup.push('</g>\\n');\r\n      }\r\n      this._setSVGBgOverlayColor(markup, 'overlay');\r\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\r\n\r\n      markup.push('</svg>');\r\n\r\n      return markup.join('');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setSVGPreamble: function(markup, options) {\r\n      if (options.suppressPreamble) {\r\n        return;\r\n      }\r\n      markup.push(\r\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\r\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\r\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\r\n      );\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setSVGHeader: function(markup, options) {\r\n      var width = options.width || this.width,\r\n          height = options.height || this.height,\r\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\r\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n      if (options.viewBox) {\r\n        viewBox = 'viewBox=\"' +\r\n                options.viewBox.x + ' ' +\r\n                options.viewBox.y + ' ' +\r\n                options.viewBox.width + ' ' +\r\n                options.viewBox.height + '\" ';\r\n      }\r\n      else {\r\n        if (this.svgViewportTransformation) {\r\n          vpt = this.viewportTransform;\r\n          viewBox = 'viewBox=\"' +\r\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\r\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\r\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\r\n        }\r\n      }\r\n\r\n      markup.push(\r\n        '<svg ',\r\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\r\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\r\n        'version=\"1.1\" ',\r\n        'width=\"', width, '\" ',\r\n        'height=\"', height, '\" ',\r\n        viewBox,\r\n        'xml:space=\"preserve\">\\n',\r\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\r\n        '<defs>\\n',\r\n        this.createSVGFontFacesMarkup(),\r\n        this.createSVGRefElementsMarkup(),\r\n        this.createSVGClipPathMarkup(options),\r\n        '</defs>\\n'\r\n      );\r\n    },\r\n\r\n    createSVGClipPathMarkup: function(options) {\r\n      var clipPath = this.clipPath;\r\n      if (clipPath) {\r\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\r\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\r\n          this.clipPath.toClipPathSVG(options.reviver) +\r\n          '</clipPath>\\n';\r\n      }\r\n      return '';\r\n    },\r\n\r\n    /**\r\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\r\n     * @return {String}\r\n     */\r\n    createSVGRefElementsMarkup: function() {\r\n      var _this = this,\r\n          markup = ['background', 'overlay'].map(function(prop) {\r\n            var fill = _this[prop + 'Color'];\r\n            if (fill && fill.toLive) {\r\n              var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\r\n                  object = {\r\n                    width: _this.width / (shouldTransform ? vpt[0] : 1),\r\n                    height: _this.height / (shouldTransform ? vpt[3] : 1)\r\n                  };\r\n              return fill.toSVG(\r\n                object,\r\n                { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\r\n              );\r\n            }\r\n          });\r\n      return markup.join('');\r\n    },\r\n\r\n    /**\r\n     * Creates markup containing SVG font faces,\r\n     * font URLs for font faces must be collected by developers\r\n     * and are not extracted from the DOM by fabricjs\r\n     * @param {Array} objects Array of fabric objects\r\n     * @return {String}\r\n     */\r\n    createSVGFontFacesMarkup: function() {\r\n      var markup = '', fontList = { }, obj, fontFamily,\r\n          style, row, rowIndex, _char, charIndex, i, len,\r\n          fontPaths = fabric.fontPaths, objects = [];\r\n\r\n      this._objects.forEach(function add(object) {\r\n        objects.push(object);\r\n        if (object._objects) {\r\n          object._objects.forEach(add);\r\n        }\r\n      });\r\n\r\n      for (i = 0, len = objects.length; i < len; i++) {\r\n        obj = objects[i];\r\n        fontFamily = obj.fontFamily;\r\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\r\n          continue;\r\n        }\r\n        fontList[fontFamily] = true;\r\n        if (!obj.styles) {\r\n          continue;\r\n        }\r\n        style = obj.styles;\r\n        for (rowIndex in style) {\r\n          row = style[rowIndex];\r\n          for (charIndex in row) {\r\n            _char = row[charIndex];\r\n            fontFamily = _char.fontFamily;\r\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\r\n              fontList[fontFamily] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (var j in fontList) {\r\n        markup += [\r\n          '\\t\\t@font-face {\\n',\r\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\r\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\r\n          '\\t\\t}\\n'\r\n        ].join('');\r\n      }\r\n\r\n      if (markup) {\r\n        markup = [\r\n          '\\t<style type=\"text/css\">',\r\n          '<![CDATA[\\n',\r\n          markup,\r\n          ']]>',\r\n          '</style>\\n'\r\n        ].join('');\r\n      }\r\n\r\n      return markup;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setSVGObjects: function(markup, reviver) {\r\n      var instance, i, len, objects = this._objects;\r\n      for (i = 0, len = objects.length; i < len; i++) {\r\n        instance = objects[i];\r\n        if (instance.excludeFromExport) {\r\n          continue;\r\n        }\r\n        this._setSVGObject(markup, instance, reviver);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setSVGObject: function(markup, instance, reviver) {\r\n      markup.push(instance.toSVG(reviver));\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\r\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\r\n        markup.push(this[property].toSVG(reviver));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setSVGBgOverlayColor: function(markup, property) {\r\n      var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\r\n          finalHeight = this.height;\r\n      if (!filler) {\r\n        return;\r\n      }\r\n      if (filler.toLive) {\r\n        var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\r\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\r\n        markup.push(\r\n          '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\r\n          ' x=\"', filler.offsetX - finalWidth / 2,\r\n          '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\r\n          'width=\"',\r\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\r\n            ? filler.source.width\r\n            : finalWidth ),\r\n          '\" height=\"',\r\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\r\n            ? filler.source.height\r\n            : finalHeight),\r\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\r\n          '></rect>\\n'\r\n        );\r\n      }\r\n      else {\r\n        markup.push(\r\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\r\n          'fill=\"', filler, '\"',\r\n          '></rect>\\n'\r\n        );\r\n      }\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    /**\r\n     * Moves an object or the objects of a multiple selection\r\n     * to the bottom of the stack of drawn objects\r\n     * @param {fabric.Object} object Object to send to back\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    sendToBack: function (object) {\r\n      if (!object) {\r\n        return this;\r\n      }\r\n      var activeSelection = this._activeObject,\r\n          i, obj, objs;\r\n      if (object === activeSelection && object.type === 'activeSelection') {\r\n        objs = activeSelection._objects;\r\n        for (i = objs.length; i--;) {\r\n          obj = objs[i];\r\n          removeFromArray(this._objects, obj);\r\n          this._objects.unshift(obj);\r\n        }\r\n      }\r\n      else {\r\n        removeFromArray(this._objects, object);\r\n        this._objects.unshift(object);\r\n      }\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object or the objects of a multiple selection\r\n     * to the top of the stack of drawn objects\r\n     * @param {fabric.Object} object Object to send\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    bringToFront: function (object) {\r\n      if (!object) {\r\n        return this;\r\n      }\r\n      var activeSelection = this._activeObject,\r\n          i, obj, objs;\r\n      if (object === activeSelection && object.type === 'activeSelection') {\r\n        objs = activeSelection._objects;\r\n        for (i = 0; i < objs.length; i++) {\r\n          obj = objs[i];\r\n          removeFromArray(this._objects, obj);\r\n          this._objects.push(obj);\r\n        }\r\n      }\r\n      else {\r\n        removeFromArray(this._objects, object);\r\n        this._objects.push(object);\r\n      }\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Moves an object or a selection down in stack of drawn objects\r\n     * An optional parameter, intersecting allows to move the object in behind\r\n     * the first intersecting object. Where intersection is calculated with\r\n     * bounding box. If no intersection is found, there will not be change in the\r\n     * stack.\r\n     * @param {fabric.Object} object Object to send\r\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    sendBackwards: function (object, intersecting) {\r\n      if (!object) {\r\n        return this;\r\n      }\r\n      var activeSelection = this._activeObject,\r\n          i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n      if (object === activeSelection && object.type === 'activeSelection') {\r\n        objs = activeSelection._objects;\r\n        for (i = 0; i < objs.length; i++) {\r\n          obj = objs[i];\r\n          idx = this._objects.indexOf(obj);\r\n          if (idx > 0 + objsMoved) {\r\n            newIdx = idx - 1;\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.splice(newIdx, 0, obj);\r\n          }\r\n          objsMoved++;\r\n        }\r\n      }\r\n      else {\r\n        idx = this._objects.indexOf(object);\r\n        if (idx !== 0) {\r\n          // if object is not on the bottom of stack\r\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\r\n          removeFromArray(this._objects, object);\r\n          this._objects.splice(newIdx, 0, object);\r\n        }\r\n      }\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _findNewLowerIndex: function(object, idx, intersecting) {\r\n      var newIdx, i;\r\n\r\n      if (intersecting) {\r\n        newIdx = idx;\r\n\r\n        // traverse down the stack looking for the nearest intersecting object\r\n        for (i = idx - 1; i >= 0; --i) {\r\n\r\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                               object.isContainedWithinObject(this._objects[i]) ||\r\n                               this._objects[i].isContainedWithinObject(object);\r\n\r\n          if (isIntersecting) {\r\n            newIdx = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        newIdx = idx - 1;\r\n      }\r\n\r\n      return newIdx;\r\n    },\r\n\r\n    /**\r\n     * Moves an object or a selection up in stack of drawn objects\r\n     * An optional parameter, intersecting allows to move the object in front\r\n     * of the first intersecting object. Where intersection is calculated with\r\n     * bounding box. If no intersection is found, there will not be change in the\r\n     * stack.\r\n     * @param {fabric.Object} object Object to send\r\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    bringForward: function (object, intersecting) {\r\n      if (!object) {\r\n        return this;\r\n      }\r\n      var activeSelection = this._activeObject,\r\n          i, obj, idx, newIdx, objs, objsMoved = 0;\r\n\r\n      if (object === activeSelection && object.type === 'activeSelection') {\r\n        objs = activeSelection._objects;\r\n        for (i = objs.length; i--;) {\r\n          obj = objs[i];\r\n          idx = this._objects.indexOf(obj);\r\n          if (idx < this._objects.length - 1 - objsMoved) {\r\n            newIdx = idx + 1;\r\n            removeFromArray(this._objects, obj);\r\n            this._objects.splice(newIdx, 0, obj);\r\n          }\r\n          objsMoved++;\r\n        }\r\n      }\r\n      else {\r\n        idx = this._objects.indexOf(object);\r\n        if (idx !== this._objects.length - 1) {\r\n          // if object is not on top of stack (last item in an array)\r\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\r\n          removeFromArray(this._objects, object);\r\n          this._objects.splice(newIdx, 0, object);\r\n        }\r\n      }\r\n      this.renderOnAddRemove && this.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _findNewUpperIndex: function(object, idx, intersecting) {\r\n      var newIdx, i, len;\r\n\r\n      if (intersecting) {\r\n        newIdx = idx;\r\n\r\n        // traverse up the stack looking for the nearest intersecting object\r\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\r\n\r\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\r\n                               object.isContainedWithinObject(this._objects[i]) ||\r\n                               this._objects[i].isContainedWithinObject(object);\r\n\r\n          if (isIntersecting) {\r\n            newIdx = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        newIdx = idx + 1;\r\n      }\r\n\r\n      return newIdx;\r\n    },\r\n\r\n    /**\r\n     * Moves an object to specified level in stack of drawn objects\r\n     * @param {fabric.Object} object Object to send\r\n     * @param {Number} index Position to move to\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    moveTo: function (object, index) {\r\n      removeFromArray(this._objects, object);\r\n      this._objects.splice(index, 0, object);\r\n      return this.renderOnAddRemove && this.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * Clears a canvas element and dispose objects\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    dispose: function () {\r\n      // cancel eventually ongoing renders\r\n      if (this.isRendering) {\r\n        fabric.util.cancelAnimFrame(this.isRendering);\r\n        this.isRendering = 0;\r\n      }\r\n      this.forEachObject(function(object) {\r\n        object.dispose && object.dispose();\r\n      });\r\n      this._objects = [];\r\n      if (this.backgroundImage && this.backgroundImage.dispose) {\r\n        this.backgroundImage.dispose();\r\n      }\r\n      this.backgroundImage = null;\r\n      if (this.overlayImage && this.overlayImage.dispose) {\r\n        this.overlayImage.dispose();\r\n      }\r\n      this.overlayImage = null;\r\n      this._iTextInstances = null;\r\n      this.contextContainer = null;\r\n      // restore canvas style\r\n      this.lowerCanvasEl.classList.remove('lower-canvas');\r\n      this.lowerCanvasEl.style = this._originalCanvasStyle;\r\n      delete this._originalCanvasStyle;\r\n      // restore canvas size to original size in case retina scaling was applied\r\n      this.lowerCanvasEl.setAttribute('width', this.width);\r\n      this.lowerCanvasEl.setAttribute('height', this.height);\r\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\r\n      this.lowerCanvasEl = undefined;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns a string representation of an instance\r\n     * @return {String} string representation of an instance\r\n     */\r\n    toString: function () {\r\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\r\n               '{ objects: ' + this._objects.length + ' }>';\r\n    }\r\n  });\r\n\r\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\r\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\r\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\r\n\r\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\r\n\r\n    /**\r\n     * @static\r\n     * @type String\r\n     * @default\r\n     */\r\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\r\n\r\n    /**\r\n     * Provides a way to check support of some of the canvas methods\r\n     * (either those of HTMLCanvasElement itself, or rendering context)\r\n     *\r\n     * @param {String} methodName Method to check support for;\r\n     *                            Could be one of \"setLineDash\"\r\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\r\n     *                          `null` if canvas element or context can not be initialized\r\n     */\r\n    supports: function (methodName) {\r\n      var el = createCanvasElement();\r\n\r\n      if (!el || !el.getContext) {\r\n        return null;\r\n      }\r\n\r\n      var ctx = el.getContext('2d');\r\n      if (!ctx) {\r\n        return null;\r\n      }\r\n\r\n      switch (methodName) {\r\n\r\n        case 'setLineDash':\r\n          return typeof ctx.setLineDash !== 'undefined';\r\n\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns Object representation of canvas\r\n   * this alias is provided because if you call JSON.stringify on an instance,\r\n   * the toJSON object will be invoked if it exists.\r\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\r\n   * @function\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} JSON compatible object\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\r\n   * @example <caption>JSON without additional properties</caption>\r\n   * var json = canvas.toJSON();\r\n   * @example <caption>JSON with additional properties included</caption>\r\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\r\n   * @example <caption>JSON without default values</caption>\r\n   * canvas.includeDefaultValues = false;\r\n   * var json = canvas.toJSON();\r\n   */\r\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\r\n\r\n  if (fabric.isLikelyNode) {\r\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\r\n      var impl = getNodeCanvas(this.lowerCanvasEl);\r\n      return impl && impl.createPNGStream();\r\n    };\r\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\r\n      var impl = getNodeCanvas(this.lowerCanvasEl);\r\n      return impl && impl.createJPEGStream(opts);\r\n    };\r\n  }\r\n})();\r\n\r\n\r\n/**\r\n * BaseBrush class\r\n * @class fabric.BaseBrush\r\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\r\n */\r\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\r\n\r\n  /**\r\n   * Color of a brush\r\n   * @type String\r\n   * @default\r\n   */\r\n  color: 'rgb(0, 0, 0)',\r\n\r\n  /**\r\n   * Width of a brush, has to be a Number, no string literals\r\n   * @type Number\r\n   * @default\r\n   */\r\n  width: 1,\r\n\r\n  /**\r\n   * Shadow object representing shadow of this shape.\r\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\r\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\r\n   * @type fabric.Shadow\r\n   * @default\r\n   */\r\n  shadow: null,\r\n\r\n  /**\r\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\r\n   * @type String\r\n   * @default\r\n   */\r\n  strokeLineCap: 'round',\r\n\r\n  /**\r\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\r\n   * @type String\r\n   * @default\r\n   */\r\n  strokeLineJoin: 'round',\r\n\r\n  /**\r\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\r\n   * @type Number\r\n   * @default\r\n   */\r\n  strokeMiterLimit:         10,\r\n\r\n  /**\r\n   * Stroke Dash Array.\r\n   * @type Array\r\n   * @default\r\n   */\r\n  strokeDashArray: null,\r\n\r\n  /**\r\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\r\n   * @type Boolean\r\n   * @default false\r\n  */\r\n\r\n  limitedToCanvasSize: false,\r\n\r\n\r\n  /**\r\n   * Sets brush styles\r\n   * @private\r\n   */\r\n  _setBrushStyles: function() {\r\n    var ctx = this.canvas.contextTop;\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    ctx.lineCap = this.strokeLineCap;\r\n    ctx.miterLimit = this.strokeMiterLimit;\r\n    ctx.lineJoin = this.strokeLineJoin;\r\n    ctx.setLineDash(this.strokeDashArray || []);\r\n  },\r\n\r\n  /**\r\n   * Sets the transformation on given context\r\n   * @param {RenderingContext2d} ctx context to render on\r\n   * @private\r\n   */\r\n  _saveAndTransform: function(ctx) {\r\n    var v = this.canvas.viewportTransform;\r\n    ctx.save();\r\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n  },\r\n\r\n  /**\r\n   * Sets brush shadow styles\r\n   * @private\r\n   */\r\n  _setShadow: function() {\r\n    if (!this.shadow) {\r\n      return;\r\n    }\r\n\r\n    var canvas = this.canvas,\r\n        shadow = this.shadow,\r\n        ctx = canvas.contextTop,\r\n        zoom = canvas.getZoom();\r\n    if (canvas && canvas._isRetinaScaling()) {\r\n      zoom *= fabric.devicePixelRatio;\r\n    }\r\n\r\n    ctx.shadowColor = shadow.color;\r\n    ctx.shadowBlur = shadow.blur * zoom;\r\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\r\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\r\n  },\r\n\r\n  needsFullRender: function() {\r\n    var color = new fabric.Color(this.color);\r\n    return color.getAlpha() < 1 || !!this.shadow;\r\n  },\r\n\r\n  /**\r\n   * Removes brush shadow styles\r\n   * @private\r\n   */\r\n  _resetShadow: function() {\r\n    var ctx = this.canvas.contextTop;\r\n\r\n    ctx.shadowColor = '';\r\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n  },\r\n\r\n  /**\r\n   * Check is pointer is outside canvas boundaries\r\n   * @param {Object} pointer\r\n   * @private\r\n  */\r\n  _isOutSideCanvas: function(pointer) {\r\n    return pointer.x < 0 || pointer.x > this.canvas.getWidth() || pointer.y < 0 || pointer.y > this.canvas.getHeight();\r\n  }\r\n});\r\n\r\n\r\n(function() {\r\n  /**\r\n   * PencilBrush class\r\n   * @class fabric.PencilBrush\r\n   * @extends fabric.BaseBrush\r\n   */\r\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\r\n\r\n    /**\r\n     * Discard points that are less than `decimate` pixel distant from each other\r\n     * @type Number\r\n     * @default 0.4\r\n     */\r\n    decimate: 0.4,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {fabric.Canvas} canvas\r\n     * @return {fabric.PencilBrush} Instance of a pencil brush\r\n     */\r\n    initialize: function(canvas) {\r\n      this.canvas = canvas;\r\n      this._points = [];\r\n    },\r\n\r\n    /**\r\n     * Invoked inside on mouse down and mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    _drawSegment: function (ctx, p1, p2) {\r\n      var midPoint = p1.midPointFrom(p2);\r\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n      return midPoint;\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse down\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseDown: function(pointer, options) {\r\n      if (!this.canvas._isMainEvent(options.e)) {\r\n        return;\r\n      }\r\n      this._prepareForDrawing(pointer);\r\n      // capture coordinates immediately\r\n      // this allows to draw dots (when movement never occurs)\r\n      this._captureDrawingPath(pointer);\r\n      this._render();\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse move\r\n     * @param {Object} pointer\r\n     */\r\n    onMouseMove: function(pointer, options) {\r\n      if (!this.canvas._isMainEvent(options.e)) {\r\n        return;\r\n      }\r\n      if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\r\n        return;\r\n      }\r\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\r\n        if (this.needsFullRender()) {\r\n          // redraw curve\r\n          // clear top canvas\r\n          this.canvas.clearContext(this.canvas.contextTop);\r\n          this._render();\r\n        }\r\n        else {\r\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\r\n          // draw the curve update\r\n          this._saveAndTransform(ctx);\r\n          if (this.oldEnd) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\r\n          }\r\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Invoked on mouse up\r\n     */\r\n    onMouseUp: function(options) {\r\n      if (!this.canvas._isMainEvent(options.e)) {\r\n        return true;\r\n      }\r\n      this.oldEnd = undefined;\r\n      this._finalizeAndAddPath();\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} pointer Actual mouse position related to the canvas.\r\n     */\r\n    _prepareForDrawing: function(pointer) {\r\n\r\n      var p = new fabric.Point(pointer.x, pointer.y);\r\n\r\n      this._reset();\r\n      this._addPoint(p);\r\n      this.canvas.contextTop.moveTo(p.x, p.y);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {fabric.Point} point Point to be added to points array\r\n     */\r\n    _addPoint: function(point) {\r\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\r\n        return false;\r\n      }\r\n      this._points.push(point);\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Clear points array and set contextTop canvas style.\r\n     * @private\r\n     */\r\n    _reset: function() {\r\n      this._points = [];\r\n      this._setBrushStyles();\r\n      this._setShadow();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} pointer Actual mouse position related to the canvas.\r\n     */\r\n    _captureDrawingPath: function(pointer) {\r\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\r\n      return this._addPoint(pointerPoint);\r\n    },\r\n\r\n    /**\r\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\r\n     * @private\r\n     */\r\n    _render: function() {\r\n      var ctx  = this.canvas.contextTop, i, len,\r\n          p1 = this._points[0],\r\n          p2 = this._points[1];\r\n\r\n      this._saveAndTransform(ctx);\r\n      ctx.beginPath();\r\n      //if we only have 2 points in the path and they are the same\r\n      //it means that the user only clicked the canvas without moving the mouse\r\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\r\n      //that's why we set them apart a bit\r\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\r\n        var width = this.width / 1000;\r\n        p1 = new fabric.Point(p1.x, p1.y);\r\n        p2 = new fabric.Point(p2.x, p2.y);\r\n        p1.x -= width;\r\n        p2.x += width;\r\n      }\r\n      ctx.moveTo(p1.x, p1.y);\r\n\r\n      for (i = 1, len = this._points.length; i < len; i++) {\r\n        // we pick the point between pi + 1 & pi + 2 as the\r\n        // end point and p1 as our control point.\r\n        this._drawSegment(ctx, p1, p2);\r\n        p1 = this._points[i];\r\n        p2 = this._points[i + 1];\r\n      }\r\n      // Draw last line as a straight line while\r\n      // we wait for the next point to be able to calculate\r\n      // the bezier control point\r\n      ctx.lineTo(p1.x, p1.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Converts points to SVG path\r\n     * @param {Array} points Array of points\r\n     * @return {(string|number)[][]} SVG path commands\r\n     */\r\n    convertPointsToSVGPath: function (points) {\r\n      var correction = this.width / 1000;\r\n      return fabric.util.getSmoothPathFromPoints(points, correction);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {(string|number)[][]} pathData SVG path commands\r\n     * @returns {boolean}\r\n     */\r\n    _isEmptySVGPath: function (pathData) {\r\n      var pathString = fabric.util.joinPath(pathData);\r\n      return pathString === 'M 0 0 Q 0 0 0 0 L 0 0';\r\n    },\r\n\r\n    /**\r\n     * Creates fabric.Path object to add on canvas\r\n     * @param {(string|number)[][]} pathData Path data\r\n     * @return {fabric.Path} Path to add on canvas\r\n     */\r\n    createPath: function(pathData) {\r\n      var path = new fabric.Path(pathData, {\r\n        fill: null,\r\n        stroke: this.color,\r\n        strokeWidth: this.width,\r\n        strokeLineCap: this.strokeLineCap,\r\n        strokeMiterLimit: this.strokeMiterLimit,\r\n        strokeLineJoin: this.strokeLineJoin,\r\n        strokeDashArray: this.strokeDashArray,\r\n      });\r\n      if (this.shadow) {\r\n        this.shadow.affectStroke = true;\r\n        path.shadow = new fabric.Shadow(this.shadow);\r\n      }\r\n\r\n      return path;\r\n    },\r\n\r\n    /**\r\n     * Decimate points array with the decimate value\r\n     */\r\n    decimatePoints: function(points, distance) {\r\n      if (points.length <= 2) {\r\n        return points;\r\n      }\r\n      var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\r\n          i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\r\n          cDistance;\r\n      for (i = 1; i < l - 1; i++) {\r\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\r\n        if (cDistance >= adjustedDistance) {\r\n          lastPoint = points[i];\r\n          newPoints.push(lastPoint);\r\n        }\r\n      }\r\n      /**\r\n       * Add the last point from the original line to the end of the array.\r\n       * This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\r\n       */\r\n      newPoints.push(points[l]);\r\n      return newPoints;\r\n    },\r\n\r\n    /**\r\n     * On mouseup after drawing the path on contextTop canvas\r\n     * we use the points captured to create an new fabric path object\r\n     * and add it to the fabric canvas.\r\n     */\r\n    _finalizeAndAddPath: function() {\r\n      var ctx = this.canvas.contextTop;\r\n      ctx.closePath();\r\n      if (this.decimate) {\r\n        this._points = this.decimatePoints(this._points, this.decimate);\r\n      }\r\n      var pathData = this.convertPointsToSVGPath(this._points);\r\n      if (this._isEmptySVGPath(pathData)) {\r\n        // do not create 0 width/height paths, as they are\r\n        // rendered inconsistently across browsers\r\n        // Firefox 4, for example, renders a dot,\r\n        // whereas Chrome 10 renders nothing\r\n        this.canvas.requestRenderAll();\r\n        return;\r\n      }\r\n\r\n      var path = this.createPath(pathData);\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this.canvas.fire('before:path:created', { path: path });\r\n      this.canvas.add(path);\r\n      this.canvas.requestRenderAll();\r\n      path.setCoords();\r\n      this._resetShadow();\r\n\r\n\r\n      // fire event 'path' created\r\n      this.canvas.fire('path:created', { path: path });\r\n    }\r\n  });\r\n})();\r\n\r\n\r\n/**\r\n * CircleBrush class\r\n * @class fabric.CircleBrush\r\n */\r\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\r\n\r\n  /**\r\n   * Width of a brush\r\n   * @type Number\r\n   * @default\r\n   */\r\n  width: 10,\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {fabric.Canvas} canvas\r\n   * @return {fabric.CircleBrush} Instance of a circle brush\r\n   */\r\n  initialize: function(canvas) {\r\n    this.canvas = canvas;\r\n    this.points = [];\r\n  },\r\n\r\n  /**\r\n   * Invoked inside on mouse down and mouse move\r\n   * @param {Object} pointer\r\n   */\r\n  drawDot: function(pointer) {\r\n    var point = this.addPoint(pointer),\r\n        ctx = this.canvas.contextTop;\r\n    this._saveAndTransform(ctx);\r\n    this.dot(ctx, point);\r\n    ctx.restore();\r\n  },\r\n\r\n  dot: function(ctx, point) {\r\n    ctx.fillStyle = point.fill;\r\n    ctx.beginPath();\r\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  },\r\n\r\n  /**\r\n   * Invoked on mouse down\r\n   */\r\n  onMouseDown: function(pointer) {\r\n    this.points.length = 0;\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._setShadow();\r\n    this.drawDot(pointer);\r\n  },\r\n\r\n  /**\r\n   * Render the full state of the brush\r\n   * @private\r\n   */\r\n  _render: function() {\r\n    var ctx  = this.canvas.contextTop, i, len,\r\n        points = this.points;\r\n    this._saveAndTransform(ctx);\r\n    for (i = 0, len = points.length; i < len; i++) {\r\n      this.dot(ctx, points[i]);\r\n    }\r\n    ctx.restore();\r\n  },\r\n\r\n  /**\r\n   * Invoked on mouse move\r\n   * @param {Object} pointer\r\n   */\r\n  onMouseMove: function(pointer) {\r\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\r\n      return;\r\n    }\r\n    if (this.needsFullRender()) {\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this.addPoint(pointer);\r\n      this._render();\r\n    }\r\n    else {\r\n      this.drawDot(pointer);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Invoked on mouse up\r\n   */\r\n  onMouseUp: function() {\r\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\r\n    this.canvas.renderOnAddRemove = false;\r\n\r\n    var circles = [];\r\n\r\n    for (i = 0, len = this.points.length; i < len; i++) {\r\n      var point = this.points[i],\r\n          circle = new fabric.Circle({\r\n            radius: point.radius,\r\n            left: point.x,\r\n            top: point.y,\r\n            originX: 'center',\r\n            originY: 'center',\r\n            fill: point.fill\r\n          });\r\n\r\n      this.shadow && (circle.shadow = new fabric.Shadow(this.shadow));\r\n\r\n      circles.push(circle);\r\n    }\r\n    var group = new fabric.Group(circles);\r\n    group.canvas = this.canvas;\r\n\r\n    this.canvas.fire('before:path:created', { path: group });\r\n    this.canvas.add(group);\r\n    this.canvas.fire('path:created', { path: group });\r\n\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._resetShadow();\r\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n    this.canvas.requestRenderAll();\r\n  },\r\n\r\n  /**\r\n   * @param {Object} pointer\r\n   * @return {fabric.Point} Just added pointer point\r\n   */\r\n  addPoint: function(pointer) {\r\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\r\n\r\n        circleRadius = fabric.util.getRandomInt(\r\n          Math.max(0, this.width - 20), this.width + 20) / 2,\r\n\r\n        circleColor = new fabric.Color(this.color)\r\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\r\n          .toRgba();\r\n\r\n    pointerPoint.radius = circleRadius;\r\n    pointerPoint.fill = circleColor;\r\n\r\n    this.points.push(pointerPoint);\r\n\r\n    return pointerPoint;\r\n  }\r\n});\r\n\r\n\r\n/**\r\n * SprayBrush class\r\n * @class fabric.SprayBrush\r\n */\r\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\r\n\r\n  /**\r\n   * Width of a spray\r\n   * @type Number\r\n   * @default\r\n   */\r\n  width:              10,\r\n\r\n  /**\r\n   * Density of a spray (number of dots per chunk)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  density:            20,\r\n\r\n  /**\r\n   * Width of spray dots\r\n   * @type Number\r\n   * @default\r\n   */\r\n  dotWidth:           1,\r\n\r\n  /**\r\n   * Width variance of spray dots\r\n   * @type Number\r\n   * @default\r\n   */\r\n  dotWidthVariance:   1,\r\n\r\n  /**\r\n   * Whether opacity of a dot should be random\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  randomOpacity:        false,\r\n\r\n  /**\r\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  optimizeOverlapping:  true,\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {fabric.Canvas} canvas\r\n   * @return {fabric.SprayBrush} Instance of a spray brush\r\n   */\r\n  initialize: function(canvas) {\r\n    this.canvas = canvas;\r\n    this.sprayChunks = [];\r\n  },\r\n\r\n  /**\r\n   * Invoked on mouse down\r\n   * @param {Object} pointer\r\n   */\r\n  onMouseDown: function(pointer) {\r\n    this.sprayChunks.length = 0;\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._setShadow();\r\n\r\n    this.addSprayChunk(pointer);\r\n    this.render(this.sprayChunkPoints);\r\n  },\r\n\r\n  /**\r\n   * Invoked on mouse move\r\n   * @param {Object} pointer\r\n   */\r\n  onMouseMove: function(pointer) {\r\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\r\n      return;\r\n    }\r\n    this.addSprayChunk(pointer);\r\n    this.render(this.sprayChunkPoints);\r\n  },\r\n\r\n  /**\r\n   * Invoked on mouse up\r\n   */\r\n  onMouseUp: function() {\r\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\r\n    this.canvas.renderOnAddRemove = false;\r\n\r\n    var rects = [];\r\n\r\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n      var sprayChunk = this.sprayChunks[i];\r\n\r\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\r\n\r\n        var rect = new fabric.Rect({\r\n          width: sprayChunk[j].width,\r\n          height: sprayChunk[j].width,\r\n          left: sprayChunk[j].x + 1,\r\n          top: sprayChunk[j].y + 1,\r\n          originX: 'center',\r\n          originY: 'center',\r\n          fill: this.color\r\n        });\r\n        rects.push(rect);\r\n      }\r\n    }\r\n\r\n    if (this.optimizeOverlapping) {\r\n      rects = this._getOptimizedRects(rects);\r\n    }\r\n\r\n    var group = new fabric.Group(rects);\r\n    this.shadow && group.set('shadow', new fabric.Shadow(this.shadow));\r\n    this.canvas.fire('before:path:created', { path: group });\r\n    this.canvas.add(group);\r\n    this.canvas.fire('path:created', { path: group });\r\n\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._resetShadow();\r\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n    this.canvas.requestRenderAll();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array} rects\r\n   */\r\n  _getOptimizedRects: function(rects) {\r\n\r\n    // avoid creating duplicate rects at the same coordinates\r\n    var uniqueRects = { }, key, i, len;\r\n\r\n    for (i = 0, len = rects.length; i < len; i++) {\r\n      key = rects[i].left + '' + rects[i].top;\r\n      if (!uniqueRects[key]) {\r\n        uniqueRects[key] = rects[i];\r\n      }\r\n    }\r\n    var uniqueRectsArray = [];\r\n    for (key in uniqueRects) {\r\n      uniqueRectsArray.push(uniqueRects[key]);\r\n    }\r\n\r\n    return uniqueRectsArray;\r\n  },\r\n\r\n  /**\r\n   * Render new chunk of spray brush\r\n   */\r\n  render: function(sprayChunk) {\r\n    var ctx = this.canvas.contextTop, i, len;\r\n    ctx.fillStyle = this.color;\r\n\r\n    this._saveAndTransform(ctx);\r\n\r\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\r\n      var point = sprayChunk[i];\r\n      if (typeof point.opacity !== 'undefined') {\r\n        ctx.globalAlpha = point.opacity;\r\n      }\r\n      ctx.fillRect(point.x, point.y, point.width, point.width);\r\n    }\r\n    ctx.restore();\r\n  },\r\n\r\n  /**\r\n   * Render all spray chunks\r\n   */\r\n  _render: function() {\r\n    var ctx = this.canvas.contextTop, i, ilen;\r\n    ctx.fillStyle = this.color;\r\n\r\n    this._saveAndTransform(ctx);\r\n\r\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\r\n      this.render(this.sprayChunks[i]);\r\n    }\r\n    ctx.restore();\r\n  },\r\n\r\n  /**\r\n   * @param {Object} pointer\r\n   */\r\n  addSprayChunk: function(pointer) {\r\n    this.sprayChunkPoints = [];\r\n\r\n    var x, y, width, radius = this.width / 2, i;\r\n\r\n    for (i = 0; i < this.density; i++) {\r\n\r\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\r\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\r\n\r\n      if (this.dotWidthVariance) {\r\n        width = fabric.util.getRandomInt(\r\n          // bottom clamp width to 1\r\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\r\n          this.dotWidth + this.dotWidthVariance);\r\n      }\r\n      else {\r\n        width = this.dotWidth;\r\n      }\r\n\r\n      var point = new fabric.Point(x, y);\r\n      point.width = width;\r\n\r\n      if (this.randomOpacity) {\r\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\r\n      }\r\n\r\n      this.sprayChunkPoints.push(point);\r\n    }\r\n\r\n    this.sprayChunks.push(this.sprayChunkPoints);\r\n  }\r\n});\r\n\r\n\r\n/**\r\n * PatternBrush class\r\n * @class fabric.PatternBrush\r\n * @extends fabric.BaseBrush\r\n */\r\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\r\n\r\n  getPatternSrc: function() {\r\n\r\n    var dotWidth = 20,\r\n        dotDistance = 5,\r\n        patternCanvas = fabric.util.createCanvasElement(),\r\n        patternCtx = patternCanvas.getContext('2d');\r\n\r\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\r\n\r\n    patternCtx.fillStyle = this.color;\r\n    patternCtx.beginPath();\r\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\r\n    patternCtx.closePath();\r\n    patternCtx.fill();\r\n\r\n    return patternCanvas;\r\n  },\r\n\r\n  getPatternSrcFunction: function() {\r\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\r\n  },\r\n\r\n  /**\r\n   * Creates \"pattern\" instance property\r\n   */\r\n  getPattern: function() {\r\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\r\n  },\r\n\r\n  /**\r\n   * Sets brush styles\r\n   */\r\n  _setBrushStyles: function() {\r\n    this.callSuper('_setBrushStyles');\r\n    this.canvas.contextTop.strokeStyle = this.getPattern();\r\n  },\r\n\r\n  /**\r\n   * Creates path\r\n   */\r\n  createPath: function(pathData) {\r\n    var path = this.callSuper('createPath', pathData),\r\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\r\n\r\n    path.stroke = new fabric.Pattern({\r\n      source: this.source || this.getPatternSrcFunction(),\r\n      offsetX: -topLeft.x,\r\n      offsetY: -topLeft.y\r\n    });\r\n    return path;\r\n  }\r\n});\r\n\r\n\r\n(function() {\r\n\r\n  var getPointer = fabric.util.getPointer,\r\n      degreesToRadians = fabric.util.degreesToRadians,\r\n      isTouchEvent = fabric.util.isTouchEvent;\r\n\r\n  /**\r\n   * Canvas class\r\n   * @class fabric.Canvas\r\n   * @extends fabric.StaticCanvas\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\r\n   * @see {@link fabric.Canvas#initialize} for constructor definition\r\n   *\r\n   * @fires object:modified at the end of a transform or any change when statefull is true\r\n   * @fires object:rotating while an object is being rotated from the control\r\n   * @fires object:scaling while an object is being scaled by controls\r\n   * @fires object:moving while an object is being dragged\r\n   * @fires object:skewing while an object is being skewed from the controls\r\n   *\r\n   * @fires before:transform before a transform is is started\r\n   * @fires before:selection:cleared\r\n   * @fires selection:cleared\r\n   * @fires selection:updated\r\n   * @fires selection:created\r\n   *\r\n   * @fires path:created after a drawing operation ends and the path is added\r\n   * @fires mouse:down\r\n   * @fires mouse:move\r\n   * @fires mouse:up\r\n   * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\r\n   * @fires mouse:move:before on mouse move, before the inner fabric logic runs\r\n   * @fires mouse:up:before on mouse up, before the inner fabric logic runs\r\n   * @fires mouse:over\r\n   * @fires mouse:out\r\n   * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\r\n   *\r\n   * @fires dragover\r\n   * @fires dragenter\r\n   * @fires dragleave\r\n   * @fires drop\r\n   * @fires after:render at the end of the render process, receives the context in the callback\r\n   * @fires before:render at start the render process, receives the context in the callback\r\n   *\r\n   * the following events are deprecated:\r\n   * @fires object:rotated at the end of a rotation transform\r\n   * @fires object:scaled at the end of a scale transform\r\n   * @fires object:moved at the end of translation transform\r\n   * @fires object:skewed at the end of a skew transform\r\n   */\r\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\r\n     * @param {Object} [options] Options object\r\n     * @return {Object} thisArg\r\n     */\r\n    initialize: function(el, options) {\r\n      options || (options = { });\r\n      this.renderAndResetBound = this.renderAndReset.bind(this);\r\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\r\n      this._initStatic(el, options);\r\n      this._initInteractive();\r\n      this._createCacheCanvas();\r\n    },\r\n\r\n    /**\r\n     * When true, objects can be transformed by one side (unproportionally)\r\n     * when dragged on the corners that normally would not do that.\r\n     * @type Boolean\r\n     * @default\r\n     * @since fabric 4.0 // changed name and default value\r\n     */\r\n    uniformScaling:      true,\r\n\r\n    /**\r\n     * Indicates which key switches uniform scaling.\r\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n     * If `null` or 'none' or any other string that is not a modifier key\r\n     * feature is disabled.\r\n     * totally wrong named. this sounds like `uniform scaling`\r\n     * if Canvas.uniformScaling is true, pressing this will set it to false\r\n     * and viceversa.\r\n     * @since 1.6.2\r\n     * @type String\r\n     * @default\r\n     */\r\n    uniScaleKey:           'shiftKey',\r\n\r\n    /**\r\n     * When true, objects use center point as the origin of scale transformation.\r\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n     * @since 1.3.4\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    centeredScaling:        false,\r\n\r\n    /**\r\n     * When true, objects use center point as the origin of rotate transformation.\r\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n     * @since 1.3.4\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    centeredRotation:       false,\r\n\r\n    /**\r\n     * Indicates which key enable centered Transform\r\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n     * If `null` or 'none' or any other string that is not a modifier key\r\n     * feature is disabled feature disabled.\r\n     * @since 1.6.2\r\n     * @type String\r\n     * @default\r\n     */\r\n    centeredKey:           'altKey',\r\n\r\n    /**\r\n     * Indicates which key enable alternate action on corner\r\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n     * If `null` or 'none' or any other string that is not a modifier key\r\n     * feature is disabled feature disabled.\r\n     * @since 1.6.2\r\n     * @type String\r\n     * @default\r\n     */\r\n    altActionKey:           'shiftKey',\r\n\r\n    /**\r\n     * Indicates that canvas is interactive. This property should not be changed.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    interactive:            true,\r\n\r\n    /**\r\n     * Indicates whether group selection should be enabled\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    selection:              true,\r\n\r\n    /**\r\n     * Indicates which key or keys enable multiple click selection\r\n     * Pass value as a string or array of strings\r\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n     * If `null` or empty or containing any other string that is not a modifier key\r\n     * feature is disabled.\r\n     * @since 1.6.2\r\n     * @type String|Array\r\n     * @default\r\n     */\r\n    selectionKey:           'shiftKey',\r\n\r\n    /**\r\n     * Indicates which key enable alternative selection\r\n     * in case of target overlapping with active object\r\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n     * For a series of reason that come from the general expectations on how\r\n     * things should work, this feature works only for preserveObjectStacking true.\r\n     * If `null` or 'none' or any other string that is not a modifier key\r\n     * feature is disabled.\r\n     * @since 1.6.5\r\n     * @type null|String\r\n     * @default\r\n     */\r\n    altSelectionKey:           null,\r\n\r\n    /**\r\n     * Color of selection\r\n     * @type String\r\n     * @default\r\n     */\r\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\r\n\r\n    /**\r\n     * Default dash array pattern\r\n     * If not empty the selection border is dashed\r\n     * @type Array\r\n     */\r\n    selectionDashArray:     [],\r\n\r\n    /**\r\n     * Color of the border of selection (usually slightly darker than color of selection itself)\r\n     * @type String\r\n     * @default\r\n     */\r\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\r\n\r\n    /**\r\n     * Width of a line used in object/group selection\r\n     * @type Number\r\n     * @default\r\n     */\r\n    selectionLineWidth:     1,\r\n\r\n    /**\r\n     * Select only shapes that are fully contained in the dragged selection rectangle.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    selectionFullyContained: false,\r\n\r\n    /**\r\n     * Default cursor value used when hovering over an object on canvas\r\n     * @type String\r\n     * @default\r\n     */\r\n    hoverCursor:            'move',\r\n\r\n    /**\r\n     * Default cursor value used when moving an object on canvas\r\n     * @type String\r\n     * @default\r\n     */\r\n    moveCursor:             'move',\r\n\r\n    /**\r\n     * Default cursor value used for the entire canvas\r\n     * @type String\r\n     * @default\r\n     */\r\n    defaultCursor:          'default',\r\n\r\n    /**\r\n     * Cursor value used during free drawing\r\n     * @type String\r\n     * @default\r\n     */\r\n    freeDrawingCursor:      'crosshair',\r\n\r\n    /**\r\n     * Cursor value used for rotation point\r\n     * @type String\r\n     * @default\r\n     */\r\n    rotationCursor:         'crosshair',\r\n\r\n    /**\r\n     * Cursor value used for disabled elements ( corners with disabled action )\r\n     * @type String\r\n     * @since 2.0.0\r\n     * @default\r\n     */\r\n    notAllowedCursor:         'not-allowed',\r\n\r\n    /**\r\n     * Default element class that's given to wrapper (div) element of canvas\r\n     * @type String\r\n     * @default\r\n     */\r\n    containerClass:         'canvas-container',\r\n\r\n    /**\r\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    perPixelTargetFind:     false,\r\n\r\n    /**\r\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\r\n     * @type Number\r\n     * @default\r\n     */\r\n    targetFindTolerance:    0,\r\n\r\n    /**\r\n     * When true, target detection is skipped. Target detection will return always undefined.\r\n     * click selection won't work anymore, events will fire with no targets.\r\n     * if something is selected before setting it to true, it will be deselected at the first click.\r\n     * area selection will still work. check the `selection` property too.\r\n     * if you deactivate both, you should look into staticCanvas.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    skipTargetFind:         false,\r\n\r\n    /**\r\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\r\n     * After mousedown, mousemove creates a shape,\r\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\r\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    isDrawingMode:          false,\r\n\r\n    /**\r\n     * Indicates whether objects should remain in current stack position when selected.\r\n     * When false objects are brought to top and rendered as part of the selection group\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    preserveObjectStacking: false,\r\n\r\n    /**\r\n     * Indicates the angle that an object will lock to while rotating.\r\n     * @type Number\r\n     * @since 1.6.7\r\n     * @default\r\n     */\r\n    snapAngle: 0,\r\n\r\n    /**\r\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\r\n     * When `null`, the snapThreshold will default to the snapAngle.\r\n     * @type null|Number\r\n     * @since 1.6.7\r\n     * @default\r\n     */\r\n    snapThreshold: null,\r\n\r\n    /**\r\n     * Indicates if the right click on canvas can output the context menu or not\r\n     * @type Boolean\r\n     * @since 1.6.5\r\n     * @default\r\n     */\r\n    stopContextMenu: false,\r\n\r\n    /**\r\n     * Indicates if the canvas can fire right click events\r\n     * @type Boolean\r\n     * @since 1.6.5\r\n     * @default\r\n     */\r\n    fireRightClick: false,\r\n\r\n    /**\r\n     * Indicates if the canvas can fire middle click events\r\n     * @type Boolean\r\n     * @since 1.7.8\r\n     * @default\r\n     */\r\n    fireMiddleClick: false,\r\n\r\n    /**\r\n     * Keep track of the subTargets for Mouse Events\r\n     * @type fabric.Object[]\r\n     */\r\n    targets: [],\r\n\r\n    /**\r\n     * Keep track of the hovered target\r\n     * @type fabric.Object\r\n     * @private\r\n     */\r\n    _hoveredTarget: null,\r\n\r\n    /**\r\n     * hold the list of nested targets hovered\r\n     * @type fabric.Object[]\r\n     * @private\r\n     */\r\n    _hoveredTargets: [],\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _initInteractive: function() {\r\n      this._currentTransform = null;\r\n      this._groupSelector = null;\r\n      this._initWrapperElement();\r\n      this._createUpperCanvas();\r\n      this._initEventListeners();\r\n\r\n      this._initRetinaScaling();\r\n\r\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\r\n\r\n      this.calcOffset();\r\n    },\r\n\r\n    /**\r\n     * Divides objects in two groups, one to render immediately\r\n     * and one to render as activeGroup.\r\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\r\n     */\r\n    _chooseObjectsToRender: function() {\r\n      var activeObjects = this.getActiveObjects(),\r\n          object, objsToRender, activeGroupObjects;\r\n\r\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\r\n        objsToRender = [];\r\n        activeGroupObjects = [];\r\n        for (var i = 0, length = this._objects.length; i < length; i++) {\r\n          object = this._objects[i];\r\n          if (activeObjects.indexOf(object) === -1 ) {\r\n            objsToRender.push(object);\r\n          }\r\n          else {\r\n            activeGroupObjects.push(object);\r\n          }\r\n        }\r\n        if (activeObjects.length > 1) {\r\n          this._activeObject._objects = activeGroupObjects;\r\n        }\r\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\r\n      }\r\n      else {\r\n        objsToRender = this._objects;\r\n      }\r\n      return objsToRender;\r\n    },\r\n\r\n    /**\r\n     * Renders both the top canvas and the secondary container canvas.\r\n     * @return {fabric.Canvas} instance\r\n     * @chainable\r\n     */\r\n    renderAll: function () {\r\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\r\n        this.clearContext(this.contextTop);\r\n        this.contextTopDirty = false;\r\n      }\r\n      if (this.hasLostContext) {\r\n        this.renderTopLayer(this.contextTop);\r\n      }\r\n      var canvasToDrawOn = this.contextContainer;\r\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\r\n      return this;\r\n    },\r\n\r\n    renderTopLayer: function(ctx) {\r\n      ctx.save();\r\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\r\n        this.contextTopDirty = true;\r\n      }\r\n      // we render the top context - last object\r\n      if (this.selection && this._groupSelector) {\r\n        this._drawSelection(ctx);\r\n        this.contextTopDirty = true;\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Method to render only the top canvas.\r\n     * Also used to render the group selection box.\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    renderTop: function () {\r\n      var ctx = this.contextTop;\r\n      this.clearContext(ctx);\r\n      this.renderTopLayer(ctx);\r\n      this.fire('after:render');\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _normalizePointer: function (object, pointer) {\r\n      var m = object.calcTransformMatrix(),\r\n          invertedM = fabric.util.invertTransform(m),\r\n          vptPointer = this.restorePointerVpt(pointer);\r\n      return fabric.util.transformPoint(vptPointer, invertedM);\r\n    },\r\n\r\n    /**\r\n     * Returns true if object is transparent at a certain location\r\n     * @param {fabric.Object} target Object to check\r\n     * @param {Number} x Left coordinate\r\n     * @param {Number} y Top coordinate\r\n     * @return {Boolean}\r\n     */\r\n    isTargetTransparent: function (target, x, y) {\r\n      // in case the target is the activeObject, we cannot execute this optimization\r\n      // because we need to draw controls too.\r\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\r\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\r\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\r\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\r\n\r\n        var isTransparent = fabric.util.isTransparent(\r\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\r\n\r\n        return isTransparent;\r\n      }\r\n\r\n      var ctx = this.contextCache,\r\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\r\n\r\n      target.selectionBackgroundColor = '';\r\n\r\n      this.clearContext(ctx);\r\n\r\n      ctx.save();\r\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n      target.render(ctx);\r\n      ctx.restore();\r\n\r\n      target.selectionBackgroundColor = originalColor;\r\n\r\n      var isTransparent = fabric.util.isTransparent(\r\n        ctx, x, y, this.targetFindTolerance);\r\n\r\n      return isTransparent;\r\n    },\r\n\r\n    /**\r\n     * takes an event and determines if selection key has been pressed\r\n     * @private\r\n     * @param {Event} e Event object\r\n     */\r\n    _isSelectionKeyPressed: function(e) {\r\n      var selectionKeyPressed = false;\r\n\r\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\r\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\r\n      }\r\n      else {\r\n        selectionKeyPressed = e[this.selectionKey];\r\n      }\r\n\r\n      return selectionKeyPressed;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object\r\n     * @param {fabric.Object} target\r\n     */\r\n    _shouldClearSelection: function (e, target) {\r\n      var activeObjects = this.getActiveObjects(),\r\n          activeObject = this._activeObject;\r\n\r\n      return (\r\n        !target\r\n        ||\r\n        (target &&\r\n          activeObject &&\r\n          activeObjects.length > 1 &&\r\n          activeObjects.indexOf(target) === -1 &&\r\n          activeObject !== target &&\r\n          !this._isSelectionKeyPressed(e))\r\n        ||\r\n        (target && !target.evented)\r\n        ||\r\n        (target &&\r\n          !target.selectable &&\r\n          activeObject &&\r\n          activeObject !== target)\r\n      );\r\n    },\r\n\r\n    /**\r\n     * centeredScaling from object can't override centeredScaling from canvas.\r\n     * this should be fixed, since object setting should take precedence over canvas.\r\n     * also this should be something that will be migrated in the control properties.\r\n     * as ability to define the origin of the transformation that the control provide.\r\n     * @private\r\n     * @param {fabric.Object} target\r\n     * @param {String} action\r\n     * @param {Boolean} altKey\r\n     */\r\n    _shouldCenterTransform: function (target, action, altKey) {\r\n      if (!target) {\r\n        return;\r\n      }\r\n\r\n      var centerTransform;\r\n\r\n      if (action === 'scale' || action === 'scaleX' || action === 'scaleY' || action === 'resizing') {\r\n        centerTransform = this.centeredScaling || target.centeredScaling;\r\n      }\r\n      else if (action === 'rotate') {\r\n        centerTransform = this.centeredRotation || target.centeredRotation;\r\n      }\r\n\r\n      return centerTransform ? !altKey : altKey;\r\n    },\r\n\r\n    /**\r\n     * should disappear before release 4.0\r\n     * @private\r\n     */\r\n    _getOriginFromCorner: function(target, corner) {\r\n      var origin = {\r\n        x: target.originX,\r\n        y: target.originY\r\n      };\r\n\r\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\r\n        origin.x = 'right';\r\n      }\r\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\r\n        origin.x = 'left';\r\n      }\r\n\r\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\r\n        origin.y = 'bottom';\r\n      }\r\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\r\n        origin.y = 'top';\r\n      }\r\n      return origin;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Boolean} alreadySelected true if target is already selected\r\n     * @param {String} corner a string representing the corner ml, mr, tl ...\r\n     * @param {Event} e Event object\r\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\r\n     */\r\n    _getActionFromCorner: function(alreadySelected, corner, e, target) {\r\n      if (!corner || !alreadySelected) {\r\n        return 'drag';\r\n      }\r\n      var control = target.controls[corner];\r\n      return control.getActionName(e, control, target);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object\r\n     * @param {fabric.Object} target\r\n     */\r\n    _setupCurrentTransform: function (e, target, alreadySelected) {\r\n      if (!target) {\r\n        return;\r\n      }\r\n\r\n      var pointer = this.getPointer(e), corner = target.__corner,\r\n          control = target.controls[corner],\r\n          actionHandler = (alreadySelected && corner) ?\r\n            control.getActionHandler(e, target, control) : fabric.controlsUtils.dragHandler,\r\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\r\n          origin = this._getOriginFromCorner(target, corner),\r\n          altKey = e[this.centeredKey],\r\n          transform = {\r\n            target: target,\r\n            action: action,\r\n            actionHandler: actionHandler,\r\n            corner: corner,\r\n            scaleX: target.scaleX,\r\n            scaleY: target.scaleY,\r\n            skewX: target.skewX,\r\n            skewY: target.skewY,\r\n            // used by transation\r\n            offsetX: pointer.x - target.left,\r\n            offsetY: pointer.y - target.top,\r\n            originX: origin.x,\r\n            originY: origin.y,\r\n            ex: pointer.x,\r\n            ey: pointer.y,\r\n            lastX: pointer.x,\r\n            lastY: pointer.y,\r\n            // unsure they are useful anymore.\r\n            // left: target.left,\r\n            // top: target.top,\r\n            theta: degreesToRadians(target.angle),\r\n            // end of unsure\r\n            width: target.width * target.scaleX,\r\n            shiftKey: e.shiftKey,\r\n            altKey: altKey,\r\n            original: fabric.util.saveObjectTransform(target),\r\n          };\r\n\r\n      if (this._shouldCenterTransform(target, action, altKey)) {\r\n        transform.originX = 'center';\r\n        transform.originY = 'center';\r\n      }\r\n      transform.original.originX = origin.x;\r\n      transform.original.originY = origin.y;\r\n      this._currentTransform = transform;\r\n      this._beforeTransform(e);\r\n    },\r\n\r\n    /**\r\n     * Set the cursor type of the canvas element\r\n     * @param {String} value Cursor type of the canvas element.\r\n     * @see http://www.w3.org/TR/css3-ui/#cursor\r\n     */\r\n    setCursor: function (value) {\r\n      this.upperCanvasEl.style.cursor = value;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\r\n     */\r\n    _drawSelection: function (ctx) {\r\n      var selector = this._groupSelector,\r\n          viewportStart = new fabric.Point(selector.ex, selector.ey),\r\n          start = fabric.util.transformPoint(viewportStart, this.viewportTransform),\r\n          viewportExtent = new fabric.Point(selector.ex + selector.left, selector.ey + selector.top),\r\n          extent = fabric.util.transformPoint(viewportExtent, this.viewportTransform),\r\n          minX = Math.min(start.x, extent.x),\r\n          minY = Math.min(start.y, extent.y),\r\n          maxX = Math.max(start.x, extent.x),\r\n          maxY = Math.max(start.y, extent.y),\r\n          strokeOffset = this.selectionLineWidth / 2;\r\n\r\n      if (this.selectionColor) {\r\n        ctx.fillStyle = this.selectionColor;\r\n        ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\r\n      }\r\n\r\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\r\n        return;\r\n      }\r\n      ctx.lineWidth = this.selectionLineWidth;\r\n      ctx.strokeStyle = this.selectionBorderColor;\r\n\r\n      minX += strokeOffset;\r\n      minY += strokeOffset;\r\n      maxX -= strokeOffset;\r\n      maxY -= strokeOffset;\r\n      // selection border\r\n      fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\r\n      ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\r\n    },\r\n\r\n    /**\r\n     * Method that determines what object we are clicking on\r\n     * the skipGroup parameter is for internal use, is needed for shift+click action\r\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\r\n     * or the outside part of the corner.\r\n     * @param {Event} e mouse event\r\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\r\n     * @return {fabric.Object} the target found\r\n     */\r\n    findTarget: function (e, skipGroup) {\r\n      if (this.skipTargetFind) {\r\n        return;\r\n      }\r\n\r\n      var ignoreZoom = true,\r\n          pointer = this.getPointer(e, ignoreZoom),\r\n          activeObject = this._activeObject,\r\n          aObjects = this.getActiveObjects(),\r\n          activeTarget, activeTargetSubs,\r\n          isTouch = isTouchEvent(e),\r\n          shouldLookForActive = (aObjects.length > 1 && !skipGroup) || aObjects.length === 1;\r\n\r\n      // first check current group (if one exists)\r\n      // active group does not check sub targets like normal groups.\r\n      // if active group just exits.\r\n      this.targets = [];\r\n\r\n      // if we hit the corner of an activeObject, let's return that.\r\n      if (shouldLookForActive && activeObject._findTargetCorner(pointer, isTouch)) {\r\n        return activeObject;\r\n      }\r\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n        return activeObject;\r\n      }\r\n      if (aObjects.length === 1 &&\r\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\r\n        if (!this.preserveObjectStacking) {\r\n          return activeObject;\r\n        }\r\n        else {\r\n          activeTarget = activeObject;\r\n          activeTargetSubs = this.targets;\r\n          this.targets = [];\r\n        }\r\n      }\r\n      var target = this._searchPossibleTargets(this._objects, pointer);\r\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\r\n        target = activeTarget;\r\n        this.targets = activeTargetSubs;\r\n      }\r\n      return target;\r\n    },\r\n\r\n    /**\r\n     * Checks point is inside the object.\r\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\r\n     * @param {fabric.Object} obj Object to test against\r\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\r\n     * @return {Boolean} true if point is contained within an area of given object\r\n     * @private\r\n     */\r\n    _checkTarget: function(pointer, obj, globalPointer) {\r\n      if (obj &&\r\n          obj.visible &&\r\n          obj.evented &&\r\n          // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\r\n          // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\r\n          obj.containsPoint(pointer)\r\n      ) {\r\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\r\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\r\n          if (!isTransparent) {\r\n            return true;\r\n          }\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\r\n     * @param {Array} [objects] objects array to look into\r\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\r\n     * @return {fabric.Object} object that contains pointer\r\n     * @private\r\n     */\r\n    _searchPossibleTargets: function(objects, pointer) {\r\n      // Cache all targets where their bounding box contains point.\r\n      var target, i = objects.length, subTarget;\r\n      // Do not check for currently grouped objects, since we check the parent group itself.\r\n      // until we call this function specifically to search inside the activeGroup\r\n      while (i--) {\r\n        var objToCheck = objects[i];\r\n        var pointerToUse = objToCheck.group ?\r\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\r\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\r\n          target = objects[i];\r\n          if (target.subTargetCheck && target instanceof fabric.Group) {\r\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\r\n            subTarget && this.targets.push(subTarget);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      return target;\r\n    },\r\n\r\n    /**\r\n     * Returns pointer coordinates without the effect of the viewport\r\n     * @param {Object} pointer with \"x\" and \"y\" number values\r\n     * @return {Object} object with \"x\" and \"y\" number values\r\n     */\r\n    restorePointerVpt: function(pointer) {\r\n      return fabric.util.transformPoint(\r\n        pointer,\r\n        fabric.util.invertTransform(this.viewportTransform)\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Returns pointer coordinates relative to canvas.\r\n     * Can return coordinates with or without viewportTransform.\r\n     * ignoreZoom false gives back coordinates that represent\r\n     * the point clicked on canvas element.\r\n     * ignoreZoom true gives back coordinates after being processed\r\n     * by the viewportTransform ( sort of coordinates of what is displayed\r\n     * on the canvas where you are clicking.\r\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\r\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\r\n     * To interact with your shapes top and left you want to use ignoreZoom true\r\n     * most of the time, while ignoreZoom false will give you coordinates\r\n     * compatible with the object.oCoords system.\r\n     * of the time.\r\n     * @param {Event} e\r\n     * @param {Boolean} ignoreZoom\r\n     * @return {Object} object with \"x\" and \"y\" number values\r\n     */\r\n    getPointer: function (e, ignoreZoom) {\r\n      // return cached values if we are in the event processing chain\r\n      if (this._absolutePointer && !ignoreZoom) {\r\n        return this._absolutePointer;\r\n      }\r\n      if (this._pointer && ignoreZoom) {\r\n        return this._pointer;\r\n      }\r\n\r\n      var pointer = getPointer(e),\r\n          upperCanvasEl = this.upperCanvasEl,\r\n          bounds = upperCanvasEl.getBoundingClientRect(),\r\n          boundsWidth = bounds.width || 0,\r\n          boundsHeight = bounds.height || 0,\r\n          cssScale;\r\n\r\n      if (!boundsWidth || !boundsHeight ) {\r\n        if ('top' in bounds && 'bottom' in bounds) {\r\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\r\n        }\r\n        if ('right' in bounds && 'left' in bounds) {\r\n          boundsWidth = Math.abs( bounds.right - bounds.left );\r\n        }\r\n      }\r\n\r\n      this.calcOffset();\r\n      pointer.x = pointer.x - this._offset.left;\r\n      pointer.y = pointer.y - this._offset.top;\r\n      if (!ignoreZoom) {\r\n        pointer = this.restorePointerVpt(pointer);\r\n      }\r\n\r\n      var retinaScaling = this.getRetinaScaling();\r\n      if (retinaScaling !== 1) {\r\n        pointer.x /= retinaScaling;\r\n        pointer.y /= retinaScaling;\r\n      }\r\n\r\n      if (boundsWidth === 0 || boundsHeight === 0) {\r\n        // If bounds are not available (i.e. not visible), do not apply scale.\r\n        cssScale = { width: 1, height: 1 };\r\n      }\r\n      else {\r\n        cssScale = {\r\n          width: upperCanvasEl.width / boundsWidth,\r\n          height: upperCanvasEl.height / boundsHeight\r\n        };\r\n      }\r\n\r\n      return {\r\n        x: pointer.x * cssScale.width,\r\n        y: pointer.y * cssScale.height\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\r\n     */\r\n    _createUpperCanvas: function () {\r\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\r\n          lowerCanvasEl = this.lowerCanvasEl, upperCanvasEl = this.upperCanvasEl;\r\n\r\n      // there is no need to create a new upperCanvas element if we have already one.\r\n      if (upperCanvasEl) {\r\n        upperCanvasEl.className = '';\r\n      }\r\n      else {\r\n        upperCanvasEl = this._createCanvasElement();\r\n        this.upperCanvasEl = upperCanvasEl;\r\n      }\r\n      fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\r\n\r\n      this.wrapperEl.appendChild(upperCanvasEl);\r\n\r\n      this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\r\n      this._applyCanvasStyle(upperCanvasEl);\r\n      this.contextTop = upperCanvasEl.getContext('2d');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _createCacheCanvas: function () {\r\n      this.cacheCanvasEl = this._createCanvasElement();\r\n      this.cacheCanvasEl.setAttribute('width', this.width);\r\n      this.cacheCanvasEl.setAttribute('height', this.height);\r\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _initWrapperElement: function () {\r\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\r\n        'class': this.containerClass\r\n      });\r\n      fabric.util.setStyle(this.wrapperEl, {\r\n        width: this.width + 'px',\r\n        height: this.height + 'px',\r\n        position: 'relative'\r\n      });\r\n      fabric.util.makeElementUnselectable(this.wrapperEl);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {HTMLElement} element canvas element to apply styles on\r\n     */\r\n    _applyCanvasStyle: function (element) {\r\n      var width = this.width || element.width,\r\n          height = this.height || element.height;\r\n\r\n      fabric.util.setStyle(element, {\r\n        position: 'absolute',\r\n        width: width + 'px',\r\n        height: height + 'px',\r\n        left: 0,\r\n        top: 0,\r\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\r\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\r\n      });\r\n      element.width = width;\r\n      element.height = height;\r\n      fabric.util.makeElementUnselectable(element);\r\n    },\r\n\r\n    /**\r\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\r\n     * @private\r\n     * @param {Element} fromEl Element style is copied from\r\n     * @param {Element} toEl Element copied style is applied to\r\n     */\r\n    _copyCanvasStyle: function (fromEl, toEl) {\r\n      toEl.style.cssText = fromEl.style.cssText;\r\n    },\r\n\r\n    /**\r\n     * Returns context of canvas where object selection is drawn\r\n     * @return {CanvasRenderingContext2D}\r\n     */\r\n    getSelectionContext: function() {\r\n      return this.contextTop;\r\n    },\r\n\r\n    /**\r\n     * Returns &lt;canvas> element on which object selection is drawn\r\n     * @return {HTMLCanvasElement}\r\n     */\r\n    getSelectionElement: function () {\r\n      return this.upperCanvasEl;\r\n    },\r\n\r\n    /**\r\n     * Returns currently active object\r\n     * @return {fabric.Object} active object\r\n     */\r\n    getActiveObject: function () {\r\n      return this._activeObject;\r\n    },\r\n\r\n    /**\r\n     * Returns an array with the current selected objects\r\n     * @return {fabric.Object} active object\r\n     */\r\n    getActiveObjects: function () {\r\n      var active = this._activeObject;\r\n      if (active) {\r\n        if (active.type === 'activeSelection' && active._objects) {\r\n          return active._objects.slice(0);\r\n        }\r\n        else {\r\n          return [active];\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {fabric.Object} obj Object that was removed\r\n     */\r\n    _onObjectRemoved: function(obj) {\r\n      // removing active object should fire \"selection:cleared\" events\r\n      if (obj === this._activeObject) {\r\n        this.fire('before:selection:cleared', { target: obj });\r\n        this._discardActiveObject();\r\n        this.fire('selection:cleared', { target: obj });\r\n        obj.fire('deselected');\r\n      }\r\n      if (obj === this._hoveredTarget){\r\n        this._hoveredTarget = null;\r\n        this._hoveredTargets = [];\r\n      }\r\n      this.callSuper('_onObjectRemoved', obj);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * Compares the old activeObject with the current one and fires correct events\r\n     * @param {fabric.Object} obj old activeObject\r\n     */\r\n    _fireSelectionEvents: function(oldObjects, e) {\r\n      var somethingChanged = false, objects = this.getActiveObjects(),\r\n          added = [], removed = [];\r\n      oldObjects.forEach(function(oldObject) {\r\n        if (objects.indexOf(oldObject) === -1) {\r\n          somethingChanged = true;\r\n          oldObject.fire('deselected', {\r\n            e: e,\r\n            target: oldObject\r\n          });\r\n          removed.push(oldObject);\r\n        }\r\n      });\r\n      objects.forEach(function(object) {\r\n        if (oldObjects.indexOf(object) === -1) {\r\n          somethingChanged = true;\r\n          object.fire('selected', {\r\n            e: e,\r\n            target: object\r\n          });\r\n          added.push(object);\r\n        }\r\n      });\r\n      if (oldObjects.length > 0 && objects.length > 0) {\r\n        somethingChanged && this.fire('selection:updated', {\r\n          e: e,\r\n          selected: added,\r\n          deselected: removed,\r\n          // added for backward compatibility\r\n          // deprecated\r\n          updated: added[0] || removed[0],\r\n          target: this._activeObject,\r\n        });\r\n      }\r\n      else if (objects.length > 0) {\r\n        this.fire('selection:created', {\r\n          e: e,\r\n          selected: added,\r\n          target: this._activeObject,\r\n        });\r\n      }\r\n      else if (oldObjects.length > 0) {\r\n        this.fire('selection:cleared', {\r\n          e: e,\r\n          deselected: removed,\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets given object as the only active object on canvas\r\n     * @param {fabric.Object} object Object to set as an active one\r\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    setActiveObject: function (object, e) {\r\n      var currentActives = this.getActiveObjects();\r\n      this._setActiveObject(object, e);\r\n      this._fireSelectionEvents(currentActives, e);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * This is a private method for now.\r\n     * This is supposed to be equivalent to setActiveObject but without firing\r\n     * any event. There is commitment to have this stay this way.\r\n     * This is the functional part of setActiveObject.\r\n     * @private\r\n     * @param {Object} object to set as active\r\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n     * @return {Boolean} true if the selection happened\r\n     */\r\n    _setActiveObject: function(object, e) {\r\n      if (this._activeObject === object) {\r\n        return false;\r\n      }\r\n      if (!this._discardActiveObject(e, object)) {\r\n        return false;\r\n      }\r\n      if (object.onSelect({ e: e })) {\r\n        return false;\r\n      }\r\n      this._activeObject = object;\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * This is a private method for now.\r\n     * This is supposed to be equivalent to discardActiveObject but without firing\r\n     * any events. There is commitment to have this stay this way.\r\n     * This is the functional part of discardActiveObject.\r\n     * @param {Event} [e] Event (passed along when firing \"object:deselected\")\r\n     * @param {Object} object to set as active\r\n     * @return {Boolean} true if the selection happened\r\n     * @private\r\n     */\r\n    _discardActiveObject: function(e, object) {\r\n      var obj = this._activeObject;\r\n      if (obj) {\r\n        // onDeselect return TRUE to cancel selection;\r\n        if (obj.onDeselect({ e: e, object: object })) {\r\n          return false;\r\n        }\r\n        this._activeObject = null;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Discards currently active object and fire events. If the function is called by fabric\r\n     * as a consequence of a mouse event, the event is passed as a parameter and\r\n     * sent to the fire function for the custom events. When used as a method the\r\n     * e param does not have any application.\r\n     * @param {event} e\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    discardActiveObject: function (e) {\r\n      var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\r\n      if (currentActives.length) {\r\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\r\n      }\r\n      this._discardActiveObject(e);\r\n      this._fireSelectionEvents(currentActives, e);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Clears a canvas element and removes all event listeners\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    dispose: function () {\r\n      var wrapper = this.wrapperEl;\r\n      this.removeListeners();\r\n      wrapper.removeChild(this.upperCanvasEl);\r\n      wrapper.removeChild(this.lowerCanvasEl);\r\n      this.contextCache = null;\r\n      this.contextTop = null;\r\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\r\n        fabric.util.cleanUpJsdomNode(this[element]);\r\n        this[element] = undefined;\r\n      }).bind(this));\r\n      if (wrapper.parentNode) {\r\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\r\n      }\r\n      delete this.wrapperEl;\r\n      fabric.StaticCanvas.prototype.dispose.call(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Clears all contexts (background, main, top) of an instance\r\n     * @return {fabric.Canvas} thisArg\r\n     * @chainable\r\n     */\r\n    clear: function () {\r\n      // this.discardActiveGroup();\r\n      this.discardActiveObject();\r\n      this.clearContext(this.contextTop);\r\n      return this.callSuper('clear');\r\n    },\r\n\r\n    /**\r\n     * Draws objects' controls (borders/controls)\r\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\r\n     */\r\n    drawControls: function(ctx) {\r\n      var activeObject = this._activeObject;\r\n\r\n      if (activeObject) {\r\n        activeObject._renderControls(ctx);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _toObject: function(instance, methodName, propertiesToInclude) {\r\n      //If the object is part of the current selection group, it should\r\n      //be transformed appropriately\r\n      //i.e. it should be serialised as it would appear if the selection group\r\n      //were to be destroyed.\r\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\r\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\r\n      //Undo the damage we did by changing all of its properties\r\n      this._unwindGroupTransformOnObject(instance, originalProperties);\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Realises an object's group transformation on it\r\n     * @private\r\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\r\n     * @returns the original values of instance which were changed\r\n     */\r\n    _realizeGroupTransformOnObject: function(instance) {\r\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\r\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\r\n        //Copy all the positionally relevant properties across now\r\n        var originalValues = {};\r\n        layoutProps.forEach(function(prop) {\r\n          originalValues[prop] = instance[prop];\r\n        });\r\n        fabric.util.addTransformToObject(instance, this._activeObject.calcOwnMatrix());\r\n        return originalValues;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Restores the changed properties of instance\r\n     * @private\r\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\r\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\r\n     */\r\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\r\n      if (originalValues) {\r\n        instance.set(originalValues);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setSVGObject: function(markup, instance, reviver) {\r\n      //If the object is in a selection group, simulate what would happen to that\r\n      //object when the group is deselected\r\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\r\n      this.callSuper('_setSVGObject', markup, instance, reviver);\r\n      this._unwindGroupTransformOnObject(instance, originalProperties);\r\n    },\r\n\r\n    setViewportTransform: function (vpt) {\r\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\r\n        this._activeObject.clearContextTop();\r\n      }\r\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\r\n    }\r\n  });\r\n\r\n  // copying static properties manually to work around Opera's bug,\r\n  // where \"prototype\" property is enumerable and overrides existing prototype\r\n  for (var prop in fabric.StaticCanvas) {\r\n    if (prop !== 'prototype') {\r\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  var addListener = fabric.util.addListener,\r\n      removeListener = fabric.util.removeListener,\r\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\r\n      addEventOptions = { passive: false };\r\n\r\n  function checkClick(e, value) {\r\n    return e.button && (e.button === value - 1);\r\n  }\r\n\r\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n    /**\r\n     * Contains the id of the touch event that owns the fabric transform\r\n     * @type Number\r\n     * @private\r\n     */\r\n    mainTouchId: null,\r\n\r\n    /**\r\n     * Adds mouse listeners to canvas\r\n     * @private\r\n     */\r\n    _initEventListeners: function () {\r\n      // in case we initialized the class twice. This should not happen normally\r\n      // but in some kind of applications where the canvas element may be changed\r\n      // this is a workaround to having double listeners.\r\n      this.removeListeners();\r\n      this._bindEvents();\r\n      this.addOrRemove(addListener, 'add');\r\n    },\r\n\r\n    /**\r\n     * return an event prefix pointer or mouse.\r\n     * @private\r\n     */\r\n    _getEventPrefix: function () {\r\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\r\n    },\r\n\r\n    addOrRemove: function(functor, eventjsFunctor) {\r\n      var canvasElement = this.upperCanvasEl,\r\n          eventTypePrefix = this._getEventPrefix();\r\n      functor(fabric.window, 'resize', this._onResize);\r\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\r\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\r\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\r\n      functor(canvasElement, 'wheel', this._onMouseWheel);\r\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\r\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\r\n      functor(canvasElement, 'dragover', this._onDragOver);\r\n      functor(canvasElement, 'dragenter', this._onDragEnter);\r\n      functor(canvasElement, 'dragleave', this._onDragLeave);\r\n      functor(canvasElement, 'drop', this._onDrop);\r\n      if (!this.enablePointerEvents) {\r\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\r\n      }\r\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\r\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\r\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\r\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\r\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\r\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes all event listeners\r\n     */\r\n    removeListeners: function() {\r\n      this.addOrRemove(removeListener, 'remove');\r\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\r\n      var eventTypePrefix = this._getEventPrefix();\r\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\r\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\r\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _bindEvents: function() {\r\n      if (this.eventsBound) {\r\n        // for any reason we pass here twice we do not want to bind events twice.\r\n        return;\r\n      }\r\n      this._onMouseDown = this._onMouseDown.bind(this);\r\n      this._onTouchStart = this._onTouchStart.bind(this);\r\n      this._onMouseMove = this._onMouseMove.bind(this);\r\n      this._onMouseUp = this._onMouseUp.bind(this);\r\n      this._onTouchEnd = this._onTouchEnd.bind(this);\r\n      this._onResize = this._onResize.bind(this);\r\n      this._onGesture = this._onGesture.bind(this);\r\n      this._onDrag = this._onDrag.bind(this);\r\n      this._onShake = this._onShake.bind(this);\r\n      this._onLongPress = this._onLongPress.bind(this);\r\n      this._onOrientationChange = this._onOrientationChange.bind(this);\r\n      this._onMouseWheel = this._onMouseWheel.bind(this);\r\n      this._onMouseOut = this._onMouseOut.bind(this);\r\n      this._onMouseEnter = this._onMouseEnter.bind(this);\r\n      this._onContextMenu = this._onContextMenu.bind(this);\r\n      this._onDoubleClick = this._onDoubleClick.bind(this);\r\n      this._onDragOver = this._onDragOver.bind(this);\r\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\r\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\r\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\r\n      this.eventsBound = true;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} [e] Event object fired on Event.js gesture\r\n     * @param {Event} [self] Inner Event object\r\n     */\r\n    _onGesture: function(e, self) {\r\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} [e] Event object fired on Event.js drag\r\n     * @param {Event} [self] Inner Event object\r\n     */\r\n    _onDrag: function(e, self) {\r\n      this.__onDrag && this.__onDrag(e, self);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} [e] Event object fired on wheel event\r\n     */\r\n    _onMouseWheel: function(e) {\r\n      this.__onMouseWheel(e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    _onMouseOut: function(e) {\r\n      var target = this._hoveredTarget;\r\n      this.fire('mouse:out', { target: target, e: e });\r\n      this._hoveredTarget = null;\r\n      target && target.fire('mouseout', { e: e });\r\n\r\n      var _this = this;\r\n      this._hoveredTargets.forEach(function(_target){\r\n        _this.fire('mouse:out', { target: target, e: e });\r\n        _target && target.fire('mouseout', { e: e });\r\n      });\r\n      this._hoveredTargets = [];\r\n\r\n      if (this._iTextInstances) {\r\n        this._iTextInstances.forEach(function(obj) {\r\n          if (obj.isEditing) {\r\n            obj.hiddenTextarea.focus();\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mouseenter\r\n     */\r\n    _onMouseEnter: function(e) {\r\n      // This find target and consequent 'mouse:over' is used to\r\n      // clear old instances on hovered target.\r\n      // calling findTarget has the side effect of killing target.__corner.\r\n      // as a short term fix we are not firing this if we are currently transforming.\r\n      // as a long term fix we need to separate the action of finding a target with the\r\n      // side effects we added to it.\r\n      if (!this._currentTransform && !this.findTarget(e)) {\r\n        this.fire('mouse:over', { target: null, e: e });\r\n        this._hoveredTarget = null;\r\n        this._hoveredTargets = [];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} [e] Event object fired on Event.js orientation change\r\n     * @param {Event} [self] Inner Event object\r\n     */\r\n    _onOrientationChange: function(e, self) {\r\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} [e] Event object fired on Event.js shake\r\n     * @param {Event} [self] Inner Event object\r\n     */\r\n    _onShake: function(e, self) {\r\n      this.__onShake && this.__onShake(e, self);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} [e] Event object fired on Event.js shake\r\n     * @param {Event} [self] Inner Event object\r\n     */\r\n    _onLongPress: function(e, self) {\r\n      this.__onLongPress && this.__onLongPress(e, self);\r\n    },\r\n\r\n    /**\r\n     * prevent default to allow drop event to be fired\r\n     * @private\r\n     * @param {Event} [e] Event object fired on Event.js shake\r\n     */\r\n    _onDragOver: function(e) {\r\n      e.preventDefault();\r\n      var target = this._simpleEventHandler('dragover', e);\r\n      this._fireEnterLeaveEvents(target, e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    _onContextMenu: function (e) {\r\n      if (this.stopContextMenu) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    _onDoubleClick: function (e) {\r\n      this._cacheTransformEventData(e);\r\n      this._handleEvent(e, 'dblclick');\r\n      this._resetTransformEventData(e);\r\n    },\r\n\r\n    /**\r\n     * Return a the id of an event.\r\n     * returns either the pointerId or the identifier or 0 for the mouse event\r\n     * @private\r\n     * @param {Event} evt Event object\r\n     */\r\n    getPointerId: function(evt) {\r\n      var changedTouches = evt.changedTouches;\r\n\r\n      if (changedTouches) {\r\n        return changedTouches[0] && changedTouches[0].identifier;\r\n      }\r\n\r\n      if (this.enablePointerEvents) {\r\n        return evt.pointerId;\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    /**\r\n     * Determines if an event has the id of the event that is considered main\r\n     * @private\r\n     * @param {evt} event Event object\r\n     */\r\n    _isMainEvent: function(evt) {\r\n      if (evt.isPrimary === true) {\r\n        return true;\r\n      }\r\n      if (evt.isPrimary === false) {\r\n        return false;\r\n      }\r\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\r\n        return true;\r\n      }\r\n      if (evt.changedTouches) {\r\n        return evt.changedTouches[0].identifier === this.mainTouchId;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    _onTouchStart: function(e) {\r\n      e.preventDefault();\r\n      if (this.mainTouchId === null) {\r\n        this.mainTouchId = this.getPointerId(e);\r\n      }\r\n      this.__onMouseDown(e);\r\n      this._resetTransformEventData();\r\n      var canvasElement = this.upperCanvasEl,\r\n          eventTypePrefix = this._getEventPrefix();\r\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\r\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n      // Unbind mousedown to prevent double triggers from touch devices\r\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    _onMouseDown: function (e) {\r\n      this.__onMouseDown(e);\r\n      this._resetTransformEventData();\r\n      var canvasElement = this.upperCanvasEl,\r\n          eventTypePrefix = this._getEventPrefix();\r\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\r\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    _onTouchEnd: function(e) {\r\n      if (e.touches.length > 0) {\r\n        // if there are still touches stop here\r\n        return;\r\n      }\r\n      this.__onMouseUp(e);\r\n      this._resetTransformEventData();\r\n      this.mainTouchId = null;\r\n      var eventTypePrefix = this._getEventPrefix();\r\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\r\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\r\n      var _this = this;\r\n      if (this._willAddMouseDown) {\r\n        clearTimeout(this._willAddMouseDown);\r\n      }\r\n      this._willAddMouseDown = setTimeout(function() {\r\n        // Wait 400ms before rebinding mousedown to prevent double triggers\r\n        // from touch devices\r\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\r\n        _this._willAddMouseDown = 0;\r\n      }, 400);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mouseup\r\n     */\r\n    _onMouseUp: function (e) {\r\n      this.__onMouseUp(e);\r\n      this._resetTransformEventData();\r\n      var canvasElement = this.upperCanvasEl,\r\n          eventTypePrefix = this._getEventPrefix();\r\n      if (this._isMainEvent(e)) {\r\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\r\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousemove\r\n     */\r\n    _onMouseMove: function (e) {\r\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\r\n      this.__onMouseMove(e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _onResize: function () {\r\n      this.calcOffset();\r\n    },\r\n\r\n    /**\r\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\r\n     * @private\r\n     * @param {Object} target\r\n     */\r\n    _shouldRender: function(target) {\r\n      var activeObject = this._activeObject;\r\n\r\n      if (\r\n        !!activeObject !== !!target ||\r\n        (activeObject && target && (activeObject !== target))\r\n      ) {\r\n        // this covers: switch of target, from target to no target, selection of target\r\n        // multiSelection with key and mouse\r\n        return true;\r\n      }\r\n      else if (activeObject && activeObject.isEditing) {\r\n        // if we mouse up/down over a editing textbox a cursor change,\r\n        // there is no need to re render\r\n        return false;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Method that defines the actions when mouse is released on canvas.\r\n     * The method resets the currentTransform parameters, store the image corner\r\n     * position in the image object and render the canvas on top.\r\n     * @private\r\n     * @param {Event} e Event object fired on mouseup\r\n     */\r\n    __onMouseUp: function (e) {\r\n      var target, transform = this._currentTransform,\r\n          groupSelector = this._groupSelector, shouldRender = false,\r\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\r\n      this._cacheTransformEventData(e);\r\n      target = this._target;\r\n      this._handleEvent(e, 'up:before');\r\n      // if right/middle click just fire events and return\r\n      // target undefined will make the _handleEvent search the target\r\n      if (checkClick(e, RIGHT_CLICK)) {\r\n        if (this.fireRightClick) {\r\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (checkClick(e, MIDDLE_CLICK)) {\r\n        if (this.fireMiddleClick) {\r\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\r\n        }\r\n        this._resetTransformEventData();\r\n        return;\r\n      }\r\n\r\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n        this._onMouseUpInDrawingMode(e);\r\n        return;\r\n      }\r\n\r\n      if (!this._isMainEvent(e)) {\r\n        return;\r\n      }\r\n      if (transform) {\r\n        this._finalizeCurrentTransform(e);\r\n        shouldRender = transform.actionPerformed;\r\n      }\r\n      if (!isClick) {\r\n        var targetWasActive = target === this._activeObject;\r\n        this._maybeGroupObjects(e);\r\n        if (!shouldRender) {\r\n          shouldRender = (\r\n            this._shouldRender(target) ||\r\n            (!targetWasActive && target === this._activeObject)\r\n          );\r\n        }\r\n      }\r\n      if (target) {\r\n        if (target.selectable && target !== this._activeObject && target.activeOn === 'up') {\r\n          this.setActiveObject(target, e);\r\n          shouldRender = true;\r\n        }\r\n        else {\r\n          var corner = target._findTargetCorner(\r\n            this.getPointer(e, true),\r\n            fabric.util.isTouchEvent(e)\r\n          );\r\n          var control = target.controls[corner],\r\n              mouseUpHandler = control && control.getMouseUpHandler(e, target, control);\r\n          if (mouseUpHandler) {\r\n            var pointer = this.getPointer(e);\r\n            mouseUpHandler(e, transform, pointer.x, pointer.y);\r\n          }\r\n        }\r\n        target.isMoving = false;\r\n      }\r\n      this._setCursorFromEvent(e, target);\r\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\r\n      this._groupSelector = null;\r\n      this._currentTransform = null;\r\n      // reset the target information about which corner is selected\r\n      target && (target.__corner = 0);\r\n      if (shouldRender) {\r\n        this.requestRenderAll();\r\n      }\r\n      else if (!isClick) {\r\n        this.renderTop();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * Handle event firing for target and subtargets\r\n     * @param {Event} e event from mouse\r\n     * @param {String} eventType event to fire (up, down or move)\r\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\r\n     */\r\n    _simpleEventHandler: function(eventType, e) {\r\n      var target = this.findTarget(e),\r\n          targets = this.targets,\r\n          options = {\r\n            e: e,\r\n            target: target,\r\n            subTargets: targets,\r\n          };\r\n      this.fire(eventType, options);\r\n      target && target.fire(eventType, options);\r\n      if (!targets) {\r\n        return target;\r\n      }\r\n      for (var i = 0; i < targets.length; i++) {\r\n        targets[i].fire(eventType, options);\r\n      }\r\n      return target;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * Handle event firing for target and subtargets\r\n     * @param {Event} e event from mouse\r\n     * @param {String} eventType event to fire (up, down or move)\r\n     * @param {fabric.Object} targetObj receiving event\r\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\r\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\r\n     */\r\n    _handleEvent: function(e, eventType, button, isClick) {\r\n      var target = this._target,\r\n          targets = this.targets || [],\r\n          options = {\r\n            e: e,\r\n            target: target,\r\n            subTargets: targets,\r\n            button: button || LEFT_CLICK,\r\n            isClick: isClick || false,\r\n            pointer: this._pointer,\r\n            absolutePointer: this._absolutePointer,\r\n            transform: this._currentTransform\r\n          };\r\n      if (eventType === 'up') {\r\n        options.currentTarget = this.findTarget(e);\r\n        options.currentSubTargets = this.targets;\r\n      }\r\n      this.fire('mouse:' + eventType, options);\r\n      target && target.fire('mouse' + eventType, options);\r\n      for (var i = 0; i < targets.length; i++) {\r\n        targets[i].fire('mouse' + eventType, options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\r\n     */\r\n    _finalizeCurrentTransform: function(e) {\r\n\r\n      var transform = this._currentTransform,\r\n          target = transform.target,\r\n          eventName,\r\n          options = {\r\n            e: e,\r\n            target: target,\r\n            transform: transform,\r\n            action: transform.action,\r\n          };\r\n\r\n      if (target._scaling) {\r\n        target._scaling = false;\r\n      }\r\n\r\n      target.setCoords();\r\n\r\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\r\n        if (transform.actionPerformed) {\r\n          // this is not friendly to the new control api.\r\n          // is deprecated.\r\n          eventName = this._addEventOptions(options, transform);\r\n          this._fire(eventName, options);\r\n        }\r\n        this._fire('modified', options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Mutate option object in order to add by property and give back the event name.\r\n     * @private\r\n     * @deprecated since 4.2.0\r\n     * @param {Object} options to mutate\r\n     * @param {Object} transform to inspect action from\r\n     */\r\n    _addEventOptions: function(options, transform) {\r\n      // we can probably add more details at low cost\r\n      // scale change, rotation changes, translation changes\r\n      var eventName, by;\r\n      switch (transform.action) {\r\n        case 'scaleX':\r\n          eventName = 'scaled';\r\n          by = 'x';\r\n          break;\r\n        case 'scaleY':\r\n          eventName = 'scaled';\r\n          by = 'y';\r\n          break;\r\n        case 'skewX':\r\n          eventName = 'skewed';\r\n          by = 'x';\r\n          break;\r\n        case 'skewY':\r\n          eventName = 'skewed';\r\n          by = 'y';\r\n          break;\r\n        case 'scale':\r\n          eventName = 'scaled';\r\n          by = 'equally';\r\n          break;\r\n        case 'rotate':\r\n          eventName = 'rotated';\r\n          break;\r\n        case 'drag':\r\n          eventName = 'moved';\r\n          break;\r\n      }\r\n      options.by = by;\r\n      return eventName;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    _onMouseDownInDrawingMode: function(e) {\r\n      this._isCurrentlyDrawing = true;\r\n      if (this.getActiveObject()) {\r\n        this.discardActiveObject(e).requestRenderAll();\r\n      }\r\n      var pointer = this.getPointer(e);\r\n      this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\r\n      this._handleEvent(e, 'down');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mousemove\r\n     */\r\n    _onMouseMoveInDrawingMode: function(e) {\r\n      if (this._isCurrentlyDrawing) {\r\n        var pointer = this.getPointer(e);\r\n        this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\r\n      }\r\n      this.setCursor(this.freeDrawingCursor);\r\n      this._handleEvent(e, 'move');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object fired on mouseup\r\n     */\r\n    _onMouseUpInDrawingMode: function(e) {\r\n      var pointer = this.getPointer(e);\r\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\r\n      this._handleEvent(e, 'up');\r\n    },\r\n\r\n    /**\r\n     * Method that defines the actions when mouse is clicked on canvas.\r\n     * The method inits the currentTransform parameters and renders all the\r\n     * canvas so the current image can be placed on the top canvas and the rest\r\n     * in on the container one.\r\n     * @private\r\n     * @param {Event} e Event object fired on mousedown\r\n     */\r\n    __onMouseDown: function (e) {\r\n      this._cacheTransformEventData(e);\r\n      this._handleEvent(e, 'down:before');\r\n      var target = this._target;\r\n      // if right click just fire events\r\n      if (checkClick(e, RIGHT_CLICK)) {\r\n        if (this.fireRightClick) {\r\n          this._handleEvent(e, 'down', RIGHT_CLICK);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (checkClick(e, MIDDLE_CLICK)) {\r\n        if (this.fireMiddleClick) {\r\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (this.isDrawingMode) {\r\n        this._onMouseDownInDrawingMode(e);\r\n        return;\r\n      }\r\n\r\n      if (!this._isMainEvent(e)) {\r\n        return;\r\n      }\r\n\r\n      // ignore if some object is being transformed at this moment\r\n      if (this._currentTransform) {\r\n        return;\r\n      }\r\n\r\n      var pointer = this._pointer;\r\n      // save pointer for check in __onMouseUp event\r\n      this._previousPointer = pointer;\r\n      var shouldRender = this._shouldRender(target),\r\n          shouldGroup = this._shouldGroup(e, target);\r\n      if (this._shouldClearSelection(e, target)) {\r\n        this.discardActiveObject(e);\r\n      }\r\n      else if (shouldGroup) {\r\n        this._handleGrouping(e, target);\r\n        target = this._activeObject;\r\n      }\r\n\r\n      if (this.selection && (!target ||\r\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\r\n        this._groupSelector = {\r\n          ex: this._absolutePointer.x,\r\n          ey: this._absolutePointer.y,\r\n          top: 0,\r\n          left: 0\r\n        };\r\n      }\r\n\r\n      if (target) {\r\n        var alreadySelected = target === this._activeObject;\r\n        if (target.selectable && target.activeOn === 'down') {\r\n          this.setActiveObject(target, e);\r\n        }\r\n        var corner = target._findTargetCorner(\r\n          this.getPointer(e, true),\r\n          fabric.util.isTouchEvent(e)\r\n        );\r\n        target.__corner = corner;\r\n        if (target === this._activeObject && (corner || !shouldGroup)) {\r\n          this._setupCurrentTransform(e, target, alreadySelected);\r\n          var control = target.controls[corner],\r\n              pointer = this.getPointer(e),\r\n              mouseDownHandler = control && control.getMouseDownHandler(e, target, control);\r\n          if (mouseDownHandler) {\r\n            mouseDownHandler(e, this._currentTransform, pointer.x, pointer.y);\r\n          }\r\n        }\r\n      }\r\n      this._handleEvent(e, 'down');\r\n      // we must renderAll so that we update the visuals\r\n      (shouldRender || shouldGroup) && this.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * reset cache form common information needed during event processing\r\n     * @private\r\n     */\r\n    _resetTransformEventData: function() {\r\n      this._target = null;\r\n      this._pointer = null;\r\n      this._absolutePointer = null;\r\n    },\r\n\r\n    /**\r\n     * Cache common information needed during event processing\r\n     * @private\r\n     * @param {Event} e Event object fired on event\r\n     */\r\n    _cacheTransformEventData: function(e) {\r\n      // reset in order to avoid stale caching\r\n      this._resetTransformEventData();\r\n      this._pointer = this.getPointer(e, true);\r\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\r\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _beforeTransform: function(e) {\r\n      var t = this._currentTransform;\r\n      this.stateful && t.target.saveState();\r\n      this.fire('before:transform', {\r\n        e: e,\r\n        transform: t,\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Method that defines the actions when mouse is hovering the canvas.\r\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\r\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\r\n     * all any other type of action.\r\n     * In case of an image transformation only the top canvas will be rendered.\r\n     * @private\r\n     * @param {Event} e Event object fired on mousemove\r\n     */\r\n    __onMouseMove: function (e) {\r\n      this._handleEvent(e, 'move:before');\r\n      this._cacheTransformEventData(e);\r\n      var target, pointer;\r\n\r\n      if (this.isDrawingMode) {\r\n        this._onMouseMoveInDrawingMode(e);\r\n        return;\r\n      }\r\n\r\n      if (!this._isMainEvent(e)) {\r\n        return;\r\n      }\r\n\r\n      var groupSelector = this._groupSelector;\r\n\r\n      // We initially clicked in an empty area, so we draw a box for multiple selection\r\n      if (groupSelector) {\r\n        pointer = this._absolutePointer;\r\n\r\n        groupSelector.left = pointer.x - groupSelector.ex;\r\n        groupSelector.top = pointer.y - groupSelector.ey;\r\n\r\n        this.renderTop();\r\n      }\r\n      else if (!this._currentTransform) {\r\n        target = this.findTarget(e) || null;\r\n        this._setCursorFromEvent(e, target);\r\n        this._fireOverOutEvents(target, e);\r\n      }\r\n      else {\r\n        this._transformObject(e);\r\n      }\r\n      this._handleEvent(e, 'move');\r\n      this._resetTransformEventData();\r\n    },\r\n\r\n    /**\r\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\r\n     * @param {Fabric.Object} target the target where the target from the mousemove event\r\n     * @param {Event} e Event object fired on mousemove\r\n     * @private\r\n     */\r\n    _fireOverOutEvents: function(target, e) {\r\n      var _hoveredTarget = this._hoveredTarget,\r\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\r\n          length = Math.max(_hoveredTargets.length, targets.length);\r\n\r\n      this.fireSyntheticInOutEvents(target, e, {\r\n        oldTarget: _hoveredTarget,\r\n        evtOut: 'mouseout',\r\n        canvasEvtOut: 'mouse:out',\r\n        evtIn: 'mouseover',\r\n        canvasEvtIn: 'mouse:over',\r\n      });\r\n      for (var i = 0; i < length; i++){\r\n        this.fireSyntheticInOutEvents(targets[i], e, {\r\n          oldTarget: _hoveredTargets[i],\r\n          evtOut: 'mouseout',\r\n          evtIn: 'mouseover',\r\n        });\r\n      }\r\n      this._hoveredTarget = target;\r\n      this._hoveredTargets = this.targets.concat();\r\n    },\r\n\r\n    /**\r\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\r\n     * @param {Fabric.Object} target the target where the target from the onDrag event\r\n     * @param {Event} e Event object fired on ondrag\r\n     * @private\r\n     */\r\n    _fireEnterLeaveEvents: function(target, e) {\r\n      var _draggedoverTarget = this._draggedoverTarget,\r\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\r\n          length = Math.max(_hoveredTargets.length, targets.length);\r\n\r\n      this.fireSyntheticInOutEvents(target, e, {\r\n        oldTarget: _draggedoverTarget,\r\n        evtOut: 'dragleave',\r\n        evtIn: 'dragenter',\r\n      });\r\n      for (var i = 0; i < length; i++) {\r\n        this.fireSyntheticInOutEvents(targets[i], e, {\r\n          oldTarget: _hoveredTargets[i],\r\n          evtOut: 'dragleave',\r\n          evtIn: 'dragenter',\r\n        });\r\n      }\r\n      this._draggedoverTarget = target;\r\n    },\r\n\r\n    /**\r\n     * Manage the synthetic in/out events for the fabric objects on the canvas\r\n     * @param {Fabric.Object} target the target where the target from the supported events\r\n     * @param {Event} e Event object fired\r\n     * @param {Object} config configuration for the function to work\r\n     * @param {String} config.targetName property on the canvas where the old target is stored\r\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\r\n     * @param {String} config.evtOut name of the event to fire for out\r\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\r\n     * @param {String} config.evtIn name of the event to fire for in\r\n     * @private\r\n     */\r\n    fireSyntheticInOutEvents: function(target, e, config) {\r\n      var inOpt, outOpt, oldTarget = config.oldTarget, outFires, inFires,\r\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\r\n      if (targetChanged) {\r\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\r\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\r\n      }\r\n      inFires = target && targetChanged;\r\n      outFires = oldTarget && targetChanged;\r\n      if (outFires) {\r\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\r\n        oldTarget.fire(config.evtOut, outOpt);\r\n      }\r\n      if (inFires) {\r\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\r\n        target.fire(config.evtIn, inOpt);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Method that defines actions when an Event Mouse Wheel\r\n     * @param {Event} e Event object fired on mouseup\r\n     */\r\n    __onMouseWheel: function(e) {\r\n      this._cacheTransformEventData(e);\r\n      this._handleEvent(e, 'wheel');\r\n      this._resetTransformEventData();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event fired on mousemove\r\n     */\r\n    _transformObject: function(e) {\r\n      var pointer = this.getPointer(e),\r\n          transform = this._currentTransform;\r\n\r\n      transform.reset = false;\r\n      transform.shiftKey = e.shiftKey;\r\n      transform.altKey = e[this.centeredKey];\r\n\r\n      this._performTransformAction(e, transform, pointer);\r\n      transform.actionPerformed && this.requestRenderAll();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _performTransformAction: function(e, transform, pointer) {\r\n      var x = pointer.x,\r\n          y = pointer.y,\r\n          action = transform.action,\r\n          actionPerformed = false,\r\n          actionHandler = transform.actionHandler;\r\n          // this object could be created from the function in the control handlers\r\n\r\n\r\n      if (actionHandler) {\r\n        actionPerformed = actionHandler(e, transform, x, y);\r\n      }\r\n      if (action === 'drag' && actionPerformed) {\r\n        transform.target.isMoving = true;\r\n        this.setCursor(transform.target.moveCursor || this.moveCursor);\r\n      }\r\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _fire: fabric.controlsUtils.fireEvent,\r\n\r\n    /**\r\n     * Sets the cursor depending on where the canvas is being hovered.\r\n     * Note: very buggy in Opera\r\n     * @param {Event} e Event object\r\n     * @param {Object} target Object that the mouse is hovering, if so.\r\n     */\r\n    _setCursorFromEvent: function (e, target) {\r\n      if (!target) {\r\n        this.setCursor(this.defaultCursor);\r\n        return false;\r\n      }\r\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\r\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\r\n            this._activeObject : null,\r\n          // only show proper corner when group selection is not active\r\n          corner = (!activeSelection || !activeSelection.contains(target))\r\n          // here we call findTargetCorner always with undefined for the touch parameter.\r\n          // we assume that if you are using a cursor you do not need to interact with\r\n          // the bigger touch area.\r\n                    && target._findTargetCorner(this.getPointer(e, true));\r\n\r\n      if (!corner) {\r\n        if (target.subTargetCheck){\r\n          // hoverCursor should come from top-most subTarget,\r\n          // so we walk the array backwards\r\n          this.targets.concat().reverse().map(function(_target){\r\n            hoverCursor = _target.hoverCursor || hoverCursor;\r\n          });\r\n        }\r\n        this.setCursor(hoverCursor);\r\n      }\r\n      else {\r\n        this.setCursor(this.getCornerCursor(corner, target, e));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    getCornerCursor: function(corner, target, e) {\r\n      var control = target.controls[corner];\r\n      return control.cursorStyleHandler(e, control, target);\r\n    }\r\n  });\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  var min = Math.min,\r\n      max = Math.max;\r\n\r\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object\r\n     * @param {fabric.Object} target\r\n     * @return {Boolean}\r\n     */\r\n    _shouldGroup: function(e, target) {\r\n      var activeObject = this._activeObject;\r\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\r\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e Event object\r\n     * @param {fabric.Object} target\r\n     */\r\n    _handleGrouping: function (e, target) {\r\n      var activeObject = this._activeObject;\r\n      // avoid multi select when shift click on a corner\r\n      if (activeObject.__corner) {\r\n        return;\r\n      }\r\n      if (target === activeObject) {\r\n        // if it's a group, find target again, using activeGroup objects\r\n        target = this.findTarget(e, true);\r\n        // if even object is not found or we are on activeObjectCorner, bail out\r\n        if (!target || !target.selectable) {\r\n          return;\r\n        }\r\n      }\r\n      if (activeObject && activeObject.type === 'activeSelection') {\r\n        this._updateActiveSelection(target, e);\r\n      }\r\n      else {\r\n        this._createActiveSelection(target, e);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _updateActiveSelection: function(target, e) {\r\n      var activeSelection = this._activeObject,\r\n          currentActiveObjects = activeSelection._objects.slice(0);\r\n      if (activeSelection.contains(target)) {\r\n        activeSelection.removeWithUpdate(target);\r\n        this._hoveredTarget = target;\r\n        this._hoveredTargets = this.targets.concat();\r\n        if (activeSelection.size() === 1) {\r\n          // activate last remaining object\r\n          this._setActiveObject(activeSelection.item(0), e);\r\n        }\r\n      }\r\n      else {\r\n        activeSelection.addWithUpdate(target);\r\n        this._hoveredTarget = activeSelection;\r\n        this._hoveredTargets = this.targets.concat();\r\n      }\r\n      this._fireSelectionEvents(currentActiveObjects, e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _createActiveSelection: function(target, e) {\r\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\r\n      this._hoveredTarget = group;\r\n      // ISSUE 4115: should we consider subTargets here?\r\n      // this._hoveredTargets = [];\r\n      // this._hoveredTargets = this.targets.concat();\r\n      this._setActiveObject(group, e);\r\n      this._fireSelectionEvents(currentActives, e);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} target\r\n     */\r\n    _createGroup: function(target) {\r\n      var objects = this._objects,\r\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\r\n          groupObjects = isActiveLower\r\n            ? [this._activeObject, target]\r\n            : [target, this._activeObject];\r\n      this._activeObject.isEditing && this._activeObject.exitEditing();\r\n      return new fabric.ActiveSelection(groupObjects, {\r\n        canvas: this\r\n      });\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Event} e mouse event\r\n     */\r\n    _groupSelectedObjects: function (e) {\r\n\r\n      var group = this._collectObjects(e),\r\n          aGroup;\r\n\r\n      // do not create group for 1 element only\r\n      if (group.length === 1) {\r\n        this.setActiveObject(group[0], e);\r\n      }\r\n      else if (group.length > 1) {\r\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\r\n          canvas: this\r\n        });\r\n        this.setActiveObject(aGroup, e);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _collectObjects: function(e) {\r\n      var group = [],\r\n          currentObject,\r\n          x1 = this._groupSelector.ex,\r\n          y1 = this._groupSelector.ey,\r\n          x2 = x1 + this._groupSelector.left,\r\n          y2 = y1 + this._groupSelector.top,\r\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\r\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\r\n          allowIntersect = !this.selectionFullyContained,\r\n          isClick = x1 === x2 && y1 === y2;\r\n      // we iterate reverse order to collect top first in case of click.\r\n      for (var i = this._objects.length; i--; ) {\r\n        currentObject = this._objects[i];\r\n\r\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\r\n          continue;\r\n        }\r\n\r\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2, true)) ||\r\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2, true) ||\r\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1, null, true)) ||\r\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2, null, true))\r\n        ) {\r\n          group.push(currentObject);\r\n          // only add one object if it's a click\r\n          if (isClick) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (group.length > 1) {\r\n        group = group.filter(function(object) {\r\n          return !object.onSelect({ e: e });\r\n        });\r\n      }\r\n\r\n      return group;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _maybeGroupObjects: function(e) {\r\n      if (this.selection && this._groupSelector) {\r\n        this._groupSelectedObjects(e);\r\n      }\r\n      this.setCursor(this.defaultCursor);\r\n      // clear selection and current transformation\r\n      this._groupSelector = null;\r\n    }\r\n  });\r\n\r\n})();\r\n\r\n\r\n(function () {\r\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n    /**\r\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\r\n     * @param {Object} [options] Options object\r\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\r\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\r\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\r\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\r\n     * var dataURL = canvas.toDataURL({\r\n     *   format: 'jpeg',\r\n     *   quality: 0.8\r\n     * });\r\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\r\n     * var dataURL = canvas.toDataURL({\r\n     *   format: 'png',\r\n     *   left: 100,\r\n     *   top: 100,\r\n     *   width: 200,\r\n     *   height: 200\r\n     * });\r\n     * @example <caption>Generate double scaled png dataURL</caption>\r\n     * var dataURL = canvas.toDataURL({\r\n     *   format: 'png',\r\n     *   multiplier: 2\r\n     * });\r\n     */\r\n    toDataURL: function (options) {\r\n      options || (options = { });\r\n\r\n      var format = options.format || 'png',\r\n          quality = options.quality || 1,\r\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\r\n          canvasEl = this.toCanvasElement(multiplier, options);\r\n      return fabric.util.toDataURL(canvasEl, format, quality);\r\n    },\r\n\r\n    /**\r\n     * Create a new HTMLCanvas element painted with the current canvas content.\r\n     * No need to resize the actual one or repaint it.\r\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\r\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\r\n     * create quick image copies of a canvas without passing for the dataUrl string\r\n     * @param {Number} [multiplier] a zoom factor.\r\n     * @param {Object} [cropping] Cropping informations\r\n     * @param {Number} [cropping.left] Cropping left offset.\r\n     * @param {Number} [cropping.top] Cropping top offset.\r\n     * @param {Number} [cropping.width] Cropping width.\r\n     * @param {Number} [cropping.height] Cropping height.\r\n     */\r\n    toCanvasElement: function(multiplier, cropping) {\r\n      multiplier = multiplier || 1;\r\n      cropping = cropping || { };\r\n      var scaledWidth = (cropping.width || this.width) * multiplier,\r\n          scaledHeight = (cropping.height || this.height) * multiplier,\r\n          zoom = this.getZoom(),\r\n          originalWidth = this.width,\r\n          originalHeight = this.height,\r\n          newZoom = zoom * multiplier,\r\n          vp = this.viewportTransform,\r\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\r\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\r\n          originalInteractive = this.interactive,\r\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\r\n          originalRetina = this.enableRetinaScaling,\r\n          canvasEl = fabric.util.createCanvasElement(),\r\n          originalContextTop = this.contextTop;\r\n      canvasEl.width = scaledWidth;\r\n      canvasEl.height = scaledHeight;\r\n      this.contextTop = null;\r\n      this.enableRetinaScaling = false;\r\n      this.interactive = false;\r\n      this.viewportTransform = newVp;\r\n      this.width = scaledWidth;\r\n      this.height = scaledHeight;\r\n      this.calcViewportBoundaries();\r\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\r\n      this.viewportTransform = vp;\r\n      this.width = originalWidth;\r\n      this.height = originalHeight;\r\n      this.calcViewportBoundaries();\r\n      this.interactive = originalInteractive;\r\n      this.enableRetinaScaling = originalRetina;\r\n      this.contextTop = originalContextTop;\r\n      return canvasEl;\r\n    },\r\n  });\r\n\r\n})();\r\n\r\n\r\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n  /**\r\n   * Populates canvas with data from the specified JSON.\r\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\r\n   * @param {String|Object} json JSON string or object\r\n   * @param {Function} callback Callback, invoked when json is parsed\r\n   *                            and corresponding objects (e.g: {@link fabric.Image})\r\n   *                            are initialized\r\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n   * @return {fabric.Canvas} instance\r\n   * @chainable\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\r\n   * @example <caption>loadFromJSON</caption>\r\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\r\n   * @example <caption>loadFromJSON with reviver</caption>\r\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\r\n   *   // `o` = json object\r\n   *   // `object` = fabric.Object instance\r\n   *   // ... do some stuff ...\r\n   * });\r\n   */\r\n  loadFromJSON: function (json, callback, reviver) {\r\n    if (!json) {\r\n      return;\r\n    }\r\n\r\n    // serialize if it wasn't already\r\n    var serialized = (typeof json === 'string')\r\n      ? JSON.parse(json)\r\n      : fabric.util.object.clone(json);\r\n\r\n    var _this = this,\r\n        clipPath = serialized.clipPath,\r\n        renderOnAddRemove = this.renderOnAddRemove;\r\n\r\n    this.renderOnAddRemove = false;\r\n\r\n    delete serialized.clipPath;\r\n\r\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\r\n      _this.clear();\r\n      _this._setBgOverlay(serialized, function () {\r\n        if (clipPath) {\r\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\r\n            _this.clipPath = enlivenedCanvasClip[0];\r\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\r\n          });\r\n        }\r\n        else {\r\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\r\n        }\r\n      });\r\n    }, reviver);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} serialized Object with background and overlay information\r\n   * @param {Array} restored canvas objects\r\n   * @param {Function} cached renderOnAddRemove callback\r\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\r\n   */\r\n  __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\r\n    var _this = this;\r\n    enlivenedObjects.forEach(function(obj, index) {\r\n      // we splice the array just in case some custom classes restored from JSON\r\n      // will add more object to canvas at canvas init.\r\n      _this.insertAt(obj, index);\r\n    });\r\n    this.renderOnAddRemove = renderOnAddRemove;\r\n    // remove parts i cannot set as options\r\n    delete serialized.objects;\r\n    delete serialized.backgroundImage;\r\n    delete serialized.overlayImage;\r\n    delete serialized.background;\r\n    delete serialized.overlay;\r\n    // this._initOptions does too many things to just\r\n    // call it. Normally loading an Object from JSON\r\n    // create the Object instance. Here the Canvas is\r\n    // already an instance and we are just loading things over it\r\n    this._setOptions(serialized);\r\n    this.renderAll();\r\n    callback && callback();\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} serialized Object with background and overlay information\r\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\r\n   */\r\n  _setBgOverlay: function(serialized, callback) {\r\n    var loaded = {\r\n      backgroundColor: false,\r\n      overlayColor: false,\r\n      backgroundImage: false,\r\n      overlayImage: false\r\n    };\r\n\r\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\r\n      callback && callback();\r\n      return;\r\n    }\r\n\r\n    var cbIfLoaded = function () {\r\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\r\n        callback && callback();\r\n      }\r\n    };\r\n\r\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\r\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\r\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\r\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\r\n   * @param {(Object|String)} value Value to set\r\n   * @param {Object} loaded Set loaded property to true if property is set\r\n   * @param {Object} callback Callback function to invoke after property is set\r\n   */\r\n  __setBgOverlay: function(property, value, loaded, callback) {\r\n    var _this = this;\r\n\r\n    if (!value) {\r\n      loaded[property] = true;\r\n      callback && callback();\r\n      return;\r\n    }\r\n\r\n    if (property === 'backgroundImage' || property === 'overlayImage') {\r\n      fabric.util.enlivenObjects([value], function(enlivedObject){\r\n        _this[property] = enlivedObject[0];\r\n        loaded[property] = true;\r\n        callback && callback();\r\n      });\r\n    }\r\n    else {\r\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\r\n        loaded[property] = true;\r\n        callback && callback();\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array} objects\r\n   * @param {Function} callback\r\n   * @param {Function} [reviver]\r\n   */\r\n  _enlivenObjects: function (objects, callback, reviver) {\r\n    if (!objects || objects.length === 0) {\r\n      callback && callback([]);\r\n      return;\r\n    }\r\n\r\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\r\n      callback && callback(enlivenedObjects);\r\n    }, null, reviver);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} format\r\n   * @param {Function} callback\r\n   */\r\n  _toDataURL: function (format, callback) {\r\n    this.clone(function (clone) {\r\n      callback(clone.toDataURL(format));\r\n    });\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} format\r\n   * @param {Number} multiplier\r\n   * @param {Function} callback\r\n   */\r\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\r\n    this.clone(function (clone) {\r\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Clones canvas instance\r\n   * @param {Object} [callback] Receives cloned instance as a first argument\r\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\r\n   */\r\n  clone: function (callback, properties) {\r\n    var data = JSON.stringify(this.toJSON(properties));\r\n    this.cloneWithoutData(function(clone) {\r\n      clone.loadFromJSON(data, function() {\r\n        callback && callback(clone);\r\n      });\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Clones canvas instance without cloning existing data.\r\n   * This essentially copies canvas dimensions, clipping properties, etc.\r\n   * but leaves data empty (so that you can populate it with your own)\r\n   * @param {Object} [callback] Receives cloned instance as a first argument\r\n   */\r\n  cloneWithoutData: function(callback) {\r\n    var el = fabric.util.createCanvasElement();\r\n\r\n    el.width = this.width;\r\n    el.height = this.height;\r\n\r\n    var clone = new fabric.Canvas(el);\r\n    if (this.backgroundImage) {\r\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\r\n        clone.renderAll();\r\n        callback && callback(clone);\r\n      });\r\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\r\n      clone.backgroundImageStretch = this.backgroundImageStretch;\r\n    }\r\n    else {\r\n      callback && callback(clone);\r\n    }\r\n  }\r\n});\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend,\r\n      clone = fabric.util.object.clone,\r\n      toFixed = fabric.util.toFixed,\r\n      capitalize = fabric.util.string.capitalize,\r\n      degreesToRadians = fabric.util.degreesToRadians,\r\n      objectCaching = !fabric.isLikelyNode,\r\n      ALIASING_LIMIT = 2;\r\n\r\n  if (fabric.Object) {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Root object class from which all 2d shape classes inherit from\r\n   * @class fabric.Object\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\r\n   * @see {@link fabric.Object#initialize} for constructor definition\r\n   *\r\n   * @fires added\r\n   * @fires removed\r\n   *\r\n   * @fires selected\r\n   * @fires deselected\r\n   * @fires modified\r\n   * @fires modified\r\n   * @fires moved\r\n   * @fires scaled\r\n   * @fires rotated\r\n   * @fires skewed\r\n   *\r\n   * @fires rotating\r\n   * @fires scaling\r\n   * @fires moving\r\n   * @fires skewing\r\n   *\r\n   * @fires mousedown\r\n   * @fires mouseup\r\n   * @fires mouseover\r\n   * @fires mouseout\r\n   * @fires mousewheel\r\n   * @fires mousedblclick\r\n   *\r\n   * @fires dragover\r\n   * @fires dragenter\r\n   * @fires dragleave\r\n   * @fires drop\r\n   */\r\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * Type of an object (rect, circle, path, etc.).\r\n     * Note that this property is meant to be read-only and not meant to be modified.\r\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\r\n     * @type String\r\n     * @default\r\n     */\r\n    type:                     'object',\r\n\r\n    /**\r\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\r\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n     * @type String\r\n     * @default\r\n     */\r\n    originX:                  'left',\r\n\r\n    /**\r\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\r\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\r\n     * @type String\r\n     * @default\r\n     */\r\n    originY:                  'top',\r\n\r\n    /**\r\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\r\n     * @type Number\r\n     * @default\r\n     */\r\n    top:                      0,\r\n\r\n    /**\r\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\r\n     * @type Number\r\n     * @default\r\n     */\r\n    left:                     0,\r\n\r\n    /**\r\n     * Object width\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width:                    0,\r\n\r\n    /**\r\n     * Object height\r\n     * @type Number\r\n     * @default\r\n     */\r\n    height:                   0,\r\n\r\n    /**\r\n     * Object scale factor (horizontal)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    scaleX:                   1,\r\n\r\n    /**\r\n     * Object scale factor (vertical)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    scaleY:                   1,\r\n\r\n    /**\r\n     * When true, an object is rendered as flipped horizontally\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    flipX:                    false,\r\n\r\n    /**\r\n     * When true, an object is rendered as flipped vertically\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    flipY:                    false,\r\n\r\n    /**\r\n     * Opacity of an object\r\n     * @type Number\r\n     * @default\r\n     */\r\n    opacity:                  1,\r\n\r\n    /**\r\n     * Angle of rotation of an object (in degrees)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    angle:                    0,\r\n\r\n    /**\r\n     * Angle of skew on x axes of an object (in degrees)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    skewX:                    0,\r\n\r\n    /**\r\n     * Angle of skew on y axes of an object (in degrees)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    skewY:                    0,\r\n\r\n    /**\r\n     * Size of object's controlling corners (in pixels)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    cornerSize:               13,\r\n\r\n    /**\r\n     * Size of object's controlling corners when touch interaction is detected\r\n     * @type Number\r\n     * @default\r\n     */\r\n    touchCornerSize:               24,\r\n\r\n    /**\r\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    transparentCorners:       true,\r\n\r\n    /**\r\n     * Default cursor value used when hovering over this object on canvas\r\n     * @type String\r\n     * @default\r\n     */\r\n    hoverCursor:              null,\r\n\r\n    /**\r\n     * Default cursor value used when moving this object on canvas\r\n     * @type String\r\n     * @default\r\n     */\r\n    moveCursor:               null,\r\n\r\n    /**\r\n     * Padding between object and its controlling borders (in pixels)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    padding:                  0,\r\n\r\n    /**\r\n     * Color of controlling borders of an object (when it's active)\r\n     * @type String\r\n     * @default\r\n     */\r\n    borderColor:              'rgb(178,204,255)',\r\n\r\n    /**\r\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\r\n     * @since 1.6.2\r\n     * @type Array\r\n     */\r\n    borderDashArray:          null,\r\n\r\n    /**\r\n     * Color of controlling corners of an object (when it's active)\r\n     * @type String\r\n     * @default\r\n     */\r\n    cornerColor:              'rgb(178,204,255)',\r\n\r\n    /**\r\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\r\n     * @since 1.6.2\r\n     * @type String\r\n     * @default\r\n     */\r\n    cornerStrokeColor:        null,\r\n\r\n    /**\r\n     * Specify style of control, 'rect' or 'circle'\r\n     * @since 1.6.2\r\n     * @type String\r\n     */\r\n    cornerStyle:          'rect',\r\n\r\n    /**\r\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\r\n     * @since 1.6.2\r\n     * @type Array\r\n     */\r\n    cornerDashArray:          null,\r\n\r\n    /**\r\n     * When true, this object will use center point as the origin of transformation\r\n     * when being scaled via the controls.\r\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n     * @since 1.3.4\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    centeredScaling:          false,\r\n\r\n    /**\r\n     * When true, this object will use center point as the origin of transformation\r\n     * when being rotated via the controls.\r\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n     * @since 1.3.4\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    centeredRotation:         true,\r\n\r\n    /**\r\n     * Color of object's fill\r\n     * takes css colors https://www.w3.org/TR/css-color-3/\r\n     * @type String\r\n     * @default\r\n     */\r\n    fill:                     'rgb(0,0,0)',\r\n\r\n    /**\r\n     * Fill rule used to fill an object\r\n     * accepted values are nonzero, evenodd\r\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\r\n     * @type String\r\n     * @default\r\n     */\r\n    fillRule:                 'nonzero',\r\n\r\n    /**\r\n     * Composite rule used for canvas globalCompositeOperation\r\n     * @type String\r\n     * @default\r\n     */\r\n    globalCompositeOperation: 'source-over',\r\n\r\n    /**\r\n     * Background color of an object.\r\n     * takes css colors https://www.w3.org/TR/css-color-3/\r\n     * @type String\r\n     * @default\r\n     */\r\n    backgroundColor:          '',\r\n\r\n    /**\r\n     * Selection Background color of an object. colored layer behind the object when it is active.\r\n     * does not mix good with globalCompositeOperation methods.\r\n     * @type String\r\n     * @default\r\n     */\r\n    selectionBackgroundColor:          '',\r\n\r\n    /**\r\n     * When defined, an object is rendered via stroke and this property specifies its color\r\n     * takes css colors https://www.w3.org/TR/css-color-3/\r\n     * @type String\r\n     * @default\r\n     */\r\n    stroke:                   null,\r\n\r\n    /**\r\n     * Width of a stroke used to render this object\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeWidth:              1,\r\n\r\n    /**\r\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\r\n     * @type Array\r\n     */\r\n    strokeDashArray:          null,\r\n\r\n    /**\r\n     * Line offset of an object's stroke\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeDashOffset: 0,\r\n\r\n    /**\r\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineCap:            'butt',\r\n\r\n    /**\r\n     * Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    strokeLineJoin:           'miter',\r\n\r\n    /**\r\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeMiterLimit:         4,\r\n\r\n    /**\r\n     * Shadow object representing shadow of this shape\r\n     * @type fabric.Shadow\r\n     * @default\r\n     */\r\n    shadow:                   null,\r\n\r\n    /**\r\n     * Opacity of object's controlling borders when object is active and moving\r\n     * @type Number\r\n     * @default\r\n     */\r\n    borderOpacityWhenMoving:  0.4,\r\n\r\n    /**\r\n     * Scale factor of object's controlling borders\r\n     * bigger number will make a thicker border\r\n     * border is 1, so this is basically a border thickness\r\n     * since there is no way to change the border itself.\r\n     * @type Number\r\n     * @default\r\n     */\r\n    borderScaleFactor:        1,\r\n\r\n    /**\r\n     * Minimum allowed scale value of an object\r\n     * @type Number\r\n     * @default\r\n     */\r\n    minScaleLimit:            0,\r\n\r\n    /**\r\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\r\n     * But events still fire on it.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    selectable:               true,\r\n\r\n    /**\r\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    evented:                  true,\r\n\r\n    /**\r\n     * When set to `false`, an object is not rendered on canvas\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    visible:                  true,\r\n\r\n    /**\r\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    hasControls:              true,\r\n\r\n    /**\r\n     * When set to `false`, object's controlling borders are not rendered\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    hasBorders:               true,\r\n\r\n    /**\r\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    perPixelTargetFind:       false,\r\n\r\n    /**\r\n     * When `false`, default object's values are not included in its serialization\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    includeDefaultValues:     true,\r\n\r\n    /**\r\n     * When `true`, object horizontal movement is locked\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockMovementX:            false,\r\n\r\n    /**\r\n     * When `true`, object vertical movement is locked\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockMovementY:            false,\r\n\r\n    /**\r\n     * When `true`, object rotation is locked\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockRotation:             false,\r\n\r\n    /**\r\n     * When `true`, object horizontal scaling is locked\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockScalingX:             false,\r\n\r\n    /**\r\n     * When `true`, object vertical scaling is locked\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockScalingY:             false,\r\n\r\n    /**\r\n     * When `true`, object horizontal skewing is locked\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockSkewingX:             false,\r\n\r\n    /**\r\n     * When `true`, object vertical skewing is locked\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockSkewingY:             false,\r\n\r\n    /**\r\n     * When `true`, object cannot be flipped by scaling into negative values\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    lockScalingFlip:          false,\r\n\r\n    /**\r\n     * When `true`, object is not exported in OBJECT/JSON\r\n     * @since 1.6.3\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    excludeFromExport:        false,\r\n\r\n    /**\r\n     * When `true`, object is cached on an additional canvas.\r\n     * When `false`, object is not cached unless necessary ( clipPath )\r\n     * default to true\r\n     * @since 1.7.0\r\n     * @type Boolean\r\n     * @default true\r\n     */\r\n    objectCaching:            objectCaching,\r\n\r\n    /**\r\n     * When `true`, object properties are checked for cache invalidation. In some particular\r\n     * situation you may want this to be disabled ( spray brush, very big, groups)\r\n     * or if your application does not allow you to modify properties for groups child you want\r\n     * to disable it for groups.\r\n     * default to false\r\n     * since 1.7.0\r\n     * @type Boolean\r\n     * @default false\r\n     */\r\n    statefullCache:            false,\r\n\r\n    /**\r\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\r\n     * too much and will be redrawn with correct details at the end of scaling.\r\n     * this setting is performance and application dependant.\r\n     * default to true\r\n     * since 1.7.0\r\n     * @type Boolean\r\n     * @default true\r\n     */\r\n    noScaleCache:              true,\r\n\r\n    /**\r\n     * When `false`, the stoke width will scale with the object.\r\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\r\n     * default to false\r\n     * @since 2.6.0\r\n     * @type Boolean\r\n     * @default false\r\n     * @type Boolean\r\n     * @default false\r\n     */\r\n    strokeUniform:              false,\r\n\r\n    /**\r\n     * When set to `true`, object's cache will be rerendered next render call.\r\n     * since 1.7.0\r\n     * @type Boolean\r\n     * @default true\r\n     */\r\n    dirty:                true,\r\n\r\n    /**\r\n     * keeps the value of the last hovered corner during mouse move.\r\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\r\n     * It should be private, but there is no harm in using it as\r\n     * a read-only property.\r\n     * @type number|string|any\r\n     * @default 0\r\n     */\r\n    __corner: 0,\r\n\r\n    /**\r\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\r\n     * @type String\r\n     * @default\r\n     */\r\n    paintFirst:           'fill',\r\n\r\n    /**\r\n     * When 'down', object is set to active on mousedown/touchstart\r\n     * When 'up', object is set to active on mouseup/touchend\r\n     * Experimental. Let's see if this breaks anything before supporting officially\r\n     * @private\r\n     * since 4.4.0\r\n     * @type String\r\n     * @default 'down'\r\n     */\r\n    activeOn:           'down',\r\n\r\n    /**\r\n     * List of properties to consider when checking if state\r\n     * of an object is changed (fabric.Object#hasStateChanged)\r\n     * as well as for history (undo/redo) purposes\r\n     * @type Array\r\n     */\r\n    stateProperties: (\r\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\r\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\r\n      'angle opacity fill globalCompositeOperation shadow visible backgroundColor ' +\r\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\r\n    ).split(' '),\r\n\r\n    /**\r\n     * List of properties to consider when checking if cache needs refresh\r\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\r\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\r\n     * and refreshed at the next render\r\n     * @type Array\r\n     */\r\n    cacheProperties: (\r\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\r\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\r\n    ).split(' '),\r\n\r\n    /**\r\n     * List of properties to consider for animating colors.\r\n     * @type Array\r\n     */\r\n    colorProperties: (\r\n      'fill stroke backgroundColor'\r\n    ).split(' '),\r\n\r\n    /**\r\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\r\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\r\n     * of the object cacheCanvas.\r\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\r\n     * @type fabric.Object\r\n     */\r\n    clipPath: undefined,\r\n\r\n    /**\r\n     * Meaningful ONLY when the object is used as clipPath.\r\n     * if true, the clipPath will make the object clip to the outside of the clipPath\r\n     * since 2.4.0\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n    inverted: false,\r\n\r\n    /**\r\n     * Meaningful ONLY when the object is used as clipPath.\r\n     * if true, the clipPath will have its top and left relative to canvas, and will\r\n     * not be influenced by the object transform. This will make the clipPath relative\r\n     * to the canvas, but clipping just a particular object.\r\n     * WARNING this is beta, this feature may change or be renamed.\r\n     * since 2.4.0\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n    absolutePositioned: false,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     */\r\n    initialize: function(options) {\r\n      if (options) {\r\n        this.setOptions(options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Create a the canvas used to keep the cached copy of the object\r\n     * @private\r\n     */\r\n    _createCacheCanvas: function() {\r\n      this._cacheProperties = {};\r\n      this._cacheCanvas = fabric.util.createCanvasElement();\r\n      this._cacheContext = this._cacheCanvas.getContext('2d');\r\n      this._updateCacheCanvas();\r\n      // if canvas gets created, is empty, so dirty.\r\n      this.dirty = true;\r\n    },\r\n\r\n    /**\r\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\r\n     * and each side do not cross fabric.cacheSideLimit\r\n     * those numbers are configurable so that you can get as much detail as you want\r\n     * making bargain with performances.\r\n     * @param {Object} dims\r\n     * @param {Object} dims.width width of canvas\r\n     * @param {Object} dims.height height of canvas\r\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n     * @return {Object}.width width of canvas\r\n     * @return {Object}.height height of canvas\r\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n     */\r\n    _limitCacheSize: function(dims) {\r\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\r\n          width = dims.width, height = dims.height,\r\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\r\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\r\n        if (width < min) {\r\n          dims.width = min;\r\n        }\r\n        if (height < min) {\r\n          dims.height = min;\r\n        }\r\n        return dims;\r\n      }\r\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\r\n          capValue = fabric.util.capValue,\r\n          x = capValue(min, limitedDims.x, max),\r\n          y = capValue(min, limitedDims.y, max);\r\n      if (width > x) {\r\n        dims.zoomX /= width / x;\r\n        dims.width = x;\r\n        dims.capped = true;\r\n      }\r\n      if (height > y) {\r\n        dims.zoomY /= height / y;\r\n        dims.height = y;\r\n        dims.capped = true;\r\n      }\r\n      return dims;\r\n    },\r\n\r\n    /**\r\n     * Return the dimension and the zoom level needed to create a cache canvas\r\n     * big enough to host the object to be cached.\r\n     * @private\r\n     * @return {Object}.x width of object to be cached\r\n     * @return {Object}.y height of object to be cached\r\n     * @return {Object}.width width of canvas\r\n     * @return {Object}.height height of canvas\r\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n     */\r\n    _getCacheCanvasDimensions: function() {\r\n      var objectScale = this.getTotalObjectScaling(),\r\n          // caculate dimensions without skewing\r\n          dim = this._getTransformedDimensions(0, 0),\r\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\r\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\r\n      return {\r\n        // for sure this ALIASING_LIMIT is slightly creating problem\r\n        // in situation in which the cache canvas gets an upper limit\r\n        // also objectScale contains already scaleX and scaleY\r\n        width: neededX + ALIASING_LIMIT,\r\n        height: neededY + ALIASING_LIMIT,\r\n        zoomX: objectScale.scaleX,\r\n        zoomY: objectScale.scaleY,\r\n        x: neededX,\r\n        y: neededY\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Update width and height of the canvas for cache\r\n     * returns true or false if canvas needed resize.\r\n     * @private\r\n     * @return {Boolean} true if the canvas has been resized\r\n     */\r\n    _updateCacheCanvas: function() {\r\n      var targetCanvas = this.canvas;\r\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\r\n        var target = targetCanvas._currentTransform.target,\r\n            action = targetCanvas._currentTransform.action;\r\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\r\n          return false;\r\n        }\r\n      }\r\n      var canvas = this._cacheCanvas,\r\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n          minCacheSize = fabric.minCacheSideLimit,\r\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\r\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\r\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\r\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\r\n          shouldRedraw = dimensionsChanged || zoomChanged,\r\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\r\n      if (dimensionsChanged) {\r\n        var canvasWidth = this._cacheCanvas.width,\r\n            canvasHeight = this._cacheCanvas.height,\r\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\r\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\r\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\r\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\r\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\r\n          additionalWidth = width * 0.1;\r\n          additionalHeight = height * 0.1;\r\n        }\r\n      }\r\n      if (this instanceof fabric.Text && this.path) {\r\n        shouldRedraw = true;\r\n        shouldResizeCanvas = true;\r\n        additionalWidth += this.getHeightOfLine(0) * this.zoomX;\r\n        additionalHeight += this.getHeightOfLine(0) * this.zoomY;\r\n      }\r\n      if (shouldRedraw) {\r\n        if (shouldResizeCanvas) {\r\n          canvas.width = Math.ceil(width + additionalWidth);\r\n          canvas.height = Math.ceil(height + additionalHeight);\r\n        }\r\n        else {\r\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\r\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n        drawingWidth = dims.x / 2;\r\n        drawingHeight = dims.y / 2;\r\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\r\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\r\n        this.cacheWidth = width;\r\n        this.cacheHeight = height;\r\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\r\n        this._cacheContext.scale(zoomX, zoomY);\r\n        this.zoomX = zoomX;\r\n        this.zoomY = zoomY;\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Sets object's properties from options\r\n     * @param {Object} [options] Options object\r\n     */\r\n    setOptions: function(options) {\r\n      this._setOptions(options);\r\n      this._initGradient(options.fill, 'fill');\r\n      this._initGradient(options.stroke, 'stroke');\r\n      this._initPattern(options.fill, 'fill');\r\n      this._initPattern(options.stroke, 'stroke');\r\n    },\r\n\r\n    /**\r\n     * Transforms context when rendering an object\r\n     * @param {CanvasRenderingContext2D} ctx Context\r\n     */\r\n    transform: function(ctx) {\r\n      var needFullTransform = (this.group && !this.group._transformDone) ||\r\n         (this.group && this.canvas && ctx === this.canvas.contextTop);\r\n      var m = this.calcTransformMatrix(!needFullTransform);\r\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n    },\r\n\r\n    /**\r\n     * Returns an object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\r\n\r\n          object = {\r\n            type:                     this.type,\r\n            version:                  fabric.version,\r\n            originX:                  this.originX,\r\n            originY:                  this.originY,\r\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\r\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\r\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\r\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\r\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\r\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\r\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\r\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\r\n            strokeLineCap:            this.strokeLineCap,\r\n            strokeDashOffset:         this.strokeDashOffset,\r\n            strokeLineJoin:           this.strokeLineJoin,\r\n            strokeUniform:            this.strokeUniform,\r\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\r\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\r\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\r\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\r\n            flipX:                    this.flipX,\r\n            flipY:                    this.flipY,\r\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\r\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\r\n            visible:                  this.visible,\r\n            backgroundColor:          this.backgroundColor,\r\n            fillRule:                 this.fillRule,\r\n            paintFirst:               this.paintFirst,\r\n            globalCompositeOperation: this.globalCompositeOperation,\r\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\r\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\r\n          };\r\n\r\n      if (this.clipPath && !this.clipPath.excludeFromExport) {\r\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\r\n        object.clipPath.inverted = this.clipPath.inverted;\r\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\r\n      }\r\n\r\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\r\n      if (!this.includeDefaultValues) {\r\n        object = this._removeDefaultValues(object);\r\n      }\r\n\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Returns (dataless) object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toDatalessObject: function(propertiesToInclude) {\r\n      // will be overwritten by subclasses\r\n      return this.toObject(propertiesToInclude);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} object\r\n     */\r\n    _removeDefaultValues: function(object) {\r\n      var prototype = fabric.util.getKlass(object.type).prototype,\r\n          stateProperties = prototype.stateProperties;\r\n      stateProperties.forEach(function(prop) {\r\n        if (prop === 'left' || prop === 'top') {\r\n          return;\r\n        }\r\n        if (object[prop] === prototype[prop]) {\r\n          delete object[prop];\r\n        }\r\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\r\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\r\n\r\n        // basically a check for [] === []\r\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\r\n          delete object[prop];\r\n        }\r\n      });\r\n\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Returns a string representation of an instance\r\n     * @return {String}\r\n     */\r\n    toString: function() {\r\n      return '#<fabric.' + capitalize(this.type) + '>';\r\n    },\r\n\r\n    /**\r\n     * Return the object scale factor counting also the group scaling\r\n     * @return {Object} object with scaleX and scaleY properties\r\n     */\r\n    getObjectScaling: function() {\r\n      // if the object is a top level one, on the canvas, we go for simple aritmetic\r\n      // otherwise the complex method with angles will return approximations and decimals\r\n      // and will likely kill the cache when not needed\r\n      // https://github.com/fabricjs/fabric.js/issues/7157\r\n      if (!this.group) {\r\n        return {\r\n          scaleX: this.scaleX,\r\n          scaleY: this.scaleY,\r\n        };\r\n      }\r\n      // if we are inside a group total zoom calculation is complex, we defer to generic matrices\r\n      var options = fabric.util.qrDecompose(this.calcTransformMatrix());\r\n      return { scaleX: Math.abs(options.scaleX), scaleY: Math.abs(options.scaleY) };\r\n    },\r\n\r\n    /**\r\n     * Return the object scale factor counting also the group scaling, zoom and retina\r\n     * @return {Object} object with scaleX and scaleY properties\r\n     */\r\n    getTotalObjectScaling: function() {\r\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\r\n      if (this.canvas) {\r\n        var zoom = this.canvas.getZoom();\r\n        var retina = this.canvas.getRetinaScaling();\r\n        scaleX *= zoom * retina;\r\n        scaleY *= zoom * retina;\r\n      }\r\n      return { scaleX: scaleX, scaleY: scaleY };\r\n    },\r\n\r\n    /**\r\n     * Return the object opacity counting also the group property\r\n     * @return {Number}\r\n     */\r\n    getObjectOpacity: function() {\r\n      var opacity = this.opacity;\r\n      if (this.group) {\r\n        opacity *= this.group.getObjectOpacity();\r\n      }\r\n      return opacity;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} key\r\n     * @param {*} value\r\n     * @return {fabric.Object} thisArg\r\n     */\r\n    _set: function(key, value) {\r\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\r\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\r\n\r\n      if (shouldConstrainValue) {\r\n        value = this._constrainScale(value);\r\n      }\r\n      if (key === 'scaleX' && value < 0) {\r\n        this.flipX = !this.flipX;\r\n        value *= -1;\r\n      }\r\n      else if (key === 'scaleY' && value < 0) {\r\n        this.flipY = !this.flipY;\r\n        value *= -1;\r\n      }\r\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\r\n        value = new fabric.Shadow(value);\r\n      }\r\n      else if (key === 'dirty' && this.group) {\r\n        this.group.set('dirty', value);\r\n      }\r\n\r\n      this[key] = value;\r\n\r\n      if (isChanged) {\r\n        groupNeedsUpdate = this.group && this.group.isOnACache();\r\n        if (this.cacheProperties.indexOf(key) > -1) {\r\n          this.dirty = true;\r\n          groupNeedsUpdate && this.group.set('dirty', true);\r\n        }\r\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\r\n          this.group.set('dirty', true);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * This callback function is called by the parent group of an object every\r\n     * time a non-delegated property changes on the group. It is passed the key\r\n     * and value as parameters. Not adding in this function's signature to avoid\r\n     * Travis build error about unused variables.\r\n     */\r\n    setOnGroup: function() {\r\n      // implemented by sub-classes, as needed.\r\n    },\r\n\r\n    /**\r\n     * Retrieves viewportTransform from Object's canvas if possible\r\n     * @method getViewportTransform\r\n     * @memberOf fabric.Object.prototype\r\n     * @return {Array}\r\n     */\r\n    getViewportTransform: function() {\r\n      if (this.canvas && this.canvas.viewportTransform) {\r\n        return this.canvas.viewportTransform;\r\n      }\r\n      return fabric.iMatrix.concat();\r\n    },\r\n\r\n    /*\r\n     * @private\r\n     * return if the object would be visible in rendering\r\n     * @memberOf fabric.Object.prototype\r\n     * @return {Boolean}\r\n     */\r\n    isNotVisible: function() {\r\n      return this.opacity === 0 ||\r\n        (!this.width && !this.height && this.strokeWidth === 0) ||\r\n        !this.visible;\r\n    },\r\n\r\n    /**\r\n     * Renders an object on a specified context\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    render: function(ctx) {\r\n      // do not render if width/height are zeros or object is not visible\r\n      if (this.isNotVisible()) {\r\n        return;\r\n      }\r\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      this._setupCompositeOperation(ctx);\r\n      this.drawSelectionBackground(ctx);\r\n      this.transform(ctx);\r\n      this._setOpacity(ctx);\r\n      this._setShadow(ctx, this);\r\n      if (this.shouldCache()) {\r\n        this.renderCache();\r\n        this.drawCacheOnCanvas(ctx);\r\n      }\r\n      else {\r\n        this._removeCacheCanvas();\r\n        this.dirty = false;\r\n        this.drawObject(ctx);\r\n        if (this.objectCaching && this.statefullCache) {\r\n          this.saveState({ propertySet: 'cacheProperties' });\r\n        }\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    renderCache: function(options) {\r\n      options = options || {};\r\n      if (!this._cacheCanvas) {\r\n        this._createCacheCanvas();\r\n      }\r\n      if (this.isCacheDirty()) {\r\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\r\n        this.drawObject(this._cacheContext, options.forClipping);\r\n        this.dirty = false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove cacheCanvas and its dimensions from the objects\r\n     */\r\n    _removeCacheCanvas: function() {\r\n      this._cacheCanvas = null;\r\n      this.cacheWidth = 0;\r\n      this.cacheHeight = 0;\r\n    },\r\n\r\n    /**\r\n     * return true if the object will draw a stroke\r\n     * Does not consider text styles. This is just a shortcut used at rendering time\r\n     * We want it to be an approximation and be fast.\r\n     * wrote to avoid extra caching, it has to return true when stroke happens,\r\n     * can guess when it will not happen at 100% chance, does not matter if it misses\r\n     * some use case where the stroke is invisible.\r\n     * @since 3.0.0\r\n     * @returns Boolean\r\n     */\r\n    hasStroke: function() {\r\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\r\n    },\r\n\r\n    /**\r\n     * return true if the object will draw a fill\r\n     * Does not consider text styles. This is just a shortcut used at rendering time\r\n     * We want it to be an approximation and be fast.\r\n     * wrote to avoid extra caching, it has to return true when fill happens,\r\n     * can guess when it will not happen at 100% chance, does not matter if it misses\r\n     * some use case where the fill is invisible.\r\n     * @since 3.0.0\r\n     * @returns Boolean\r\n     */\r\n    hasFill: function() {\r\n      return this.fill && this.fill !== 'transparent';\r\n    },\r\n\r\n    /**\r\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\r\n     * it may be needed when your object behave in a particular way on the cache and always needs\r\n     * its own isolated canvas to render correctly.\r\n     * Created to be overridden\r\n     * since 1.7.12\r\n     * @returns Boolean\r\n     */\r\n    needsItsOwnCache: function() {\r\n      if (this.paintFirst === 'stroke' &&\r\n        this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\r\n        return true;\r\n      }\r\n      if (this.clipPath) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Decide if the object should cache or not. Create its own cache level\r\n     * objectCaching is a global flag, wins over everything\r\n     * needsItsOwnCache should be used when the object drawing method requires\r\n     * a cache step. None of the fabric classes requires it.\r\n     * Generally you do not cache objects in groups because the group outside is cached.\r\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\r\n     * @return {Boolean}\r\n     */\r\n    shouldCache: function() {\r\n      this.ownCaching = this.needsItsOwnCache() || (\r\n        this.objectCaching &&\r\n        (!this.group || !this.group.isOnACache())\r\n      );\r\n      return this.ownCaching;\r\n    },\r\n\r\n    /**\r\n     * Check if this object or a child object will cast a shadow\r\n     * used by Group.shouldCache to know if child has a shadow recursively\r\n     * @return {Boolean}\r\n     */\r\n    willDrawShadow: function() {\r\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\r\n    },\r\n\r\n    /**\r\n     * Execute the drawing operation for an object clipPath\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    drawClipPathOnCache: function(ctx) {\r\n      var path = this.clipPath;\r\n      ctx.save();\r\n      // DEBUG: uncomment this line, comment the following\r\n      // ctx.globalAlpha = 0.4\r\n      if (path.inverted) {\r\n        ctx.globalCompositeOperation = 'destination-out';\r\n      }\r\n      else {\r\n        ctx.globalCompositeOperation = 'destination-in';\r\n      }\r\n      //ctx.scale(1 / 2, 1 / 2);\r\n      if (path.absolutePositioned) {\r\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\r\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n      }\r\n      path.transform(ctx);\r\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\r\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Execute the drawing operation for an object on a specified context\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    drawObject: function(ctx, forClipping) {\r\n      var originalFill = this.fill, originalStroke = this.stroke;\r\n      if (forClipping) {\r\n        this.fill = 'black';\r\n        this.stroke = '';\r\n        this._setClippingProperties(ctx);\r\n      }\r\n      else {\r\n        this._renderBackground(ctx);\r\n      }\r\n      this._render(ctx);\r\n      this._drawClipPath(ctx);\r\n      this.fill = originalFill;\r\n      this.stroke = originalStroke;\r\n    },\r\n\r\n    _drawClipPath: function(ctx) {\r\n      var path = this.clipPath;\r\n      if (!path) { return; }\r\n      // needed to setup a couple of variables\r\n      // path canvas gets overridden with this one.\r\n      // TODO find a better solution?\r\n      path.canvas = this.canvas;\r\n      path.shouldCache();\r\n      path._transformDone = true;\r\n      path.renderCache({ forClipping: true });\r\n      this.drawClipPathOnCache(ctx);\r\n    },\r\n\r\n    /**\r\n     * Paint the cached copy of the object on the target context.\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    drawCacheOnCanvas: function(ctx) {\r\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\r\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\r\n    },\r\n\r\n    /**\r\n     * Check if cache is dirty\r\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\r\n     * on parent canvas.\r\n     */\r\n    isCacheDirty: function(skipCanvas) {\r\n      if (this.isNotVisible()) {\r\n        return false;\r\n      }\r\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\r\n        // in this case the context is already cleared.\r\n        return true;\r\n      }\r\n      else {\r\n        if (this.dirty ||\r\n          (this.clipPath && this.clipPath.absolutePositioned) ||\r\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\r\n        ) {\r\n          if (this._cacheCanvas && !skipCanvas) {\r\n            var width = this.cacheWidth / this.zoomX;\r\n            var height = this.cacheHeight / this.zoomY;\r\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Draws a background for the object big as its untransformed dimensions\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderBackground: function(ctx) {\r\n      if (!this.backgroundColor) {\r\n        return;\r\n      }\r\n      var dim = this._getNonTransformedDimensions();\r\n      ctx.fillStyle = this.backgroundColor;\r\n\r\n      ctx.fillRect(\r\n        -dim.x / 2,\r\n        -dim.y / 2,\r\n        dim.x,\r\n        dim.y\r\n      );\r\n      // if there is background color no other shadows\r\n      // should be casted\r\n      this._removeShadow(ctx);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _setOpacity: function(ctx) {\r\n      if (this.group && !this.group._transformDone) {\r\n        ctx.globalAlpha = this.getObjectOpacity();\r\n      }\r\n      else {\r\n        ctx.globalAlpha *= this.opacity;\r\n      }\r\n    },\r\n\r\n    _setStrokeStyles: function(ctx, decl) {\r\n      var stroke = decl.stroke;\r\n      if (stroke) {\r\n        ctx.lineWidth = decl.strokeWidth;\r\n        ctx.lineCap = decl.strokeLineCap;\r\n        ctx.lineDashOffset = decl.strokeDashOffset;\r\n        ctx.lineJoin = decl.strokeLineJoin;\r\n        ctx.miterLimit = decl.strokeMiterLimit;\r\n        if (stroke.toLive) {\r\n          if (stroke.gradientUnits === 'percentage' || stroke.gradientTransform || stroke.patternTransform) {\r\n            // need to transform gradient in a pattern.\r\n            // this is a slow process. If you are hitting this codepath, and the object\r\n            // is not using caching, you should consider switching it on.\r\n            // we need a canvas as big as the current object caching canvas.\r\n            this._applyPatternForTransformedGradient(ctx, stroke);\r\n          }\r\n          else {\r\n            // is a simple gradient or pattern\r\n            ctx.strokeStyle = stroke.toLive(ctx, this);\r\n            this._applyPatternGradientTransform(ctx, stroke);\r\n          }\r\n        }\r\n        else {\r\n          // is a color\r\n          ctx.strokeStyle = decl.stroke;\r\n        }\r\n      }\r\n    },\r\n\r\n    _setFillStyles: function(ctx, decl) {\r\n      var fill = decl.fill;\r\n      if (fill) {\r\n        if (fill.toLive) {\r\n          ctx.fillStyle = fill.toLive(ctx, this);\r\n          this._applyPatternGradientTransform(ctx, decl.fill);\r\n        }\r\n        else {\r\n          ctx.fillStyle = fill;\r\n        }\r\n      }\r\n    },\r\n\r\n    _setClippingProperties: function(ctx) {\r\n      ctx.globalAlpha = 1;\r\n      ctx.strokeStyle = 'transparent';\r\n      ctx.fillStyle = '#000000';\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * Sets line dash\r\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\r\n     * @param {Array} dashArray array representing dashes\r\n     */\r\n    _setLineDash: function(ctx, dashArray) {\r\n      if (!dashArray || dashArray.length === 0) {\r\n        return;\r\n      }\r\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\r\n      if (1 & dashArray.length) {\r\n        dashArray.push.apply(dashArray, dashArray);\r\n      }\r\n      ctx.setLineDash(dashArray);\r\n    },\r\n\r\n    /**\r\n     * Renders controls and borders for the object\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {Object} [styleOverride] properties to override the object style\r\n     */\r\n    _renderControls: function(ctx, styleOverride) {\r\n      var vpt = this.getViewportTransform(),\r\n          matrix = this.calcTransformMatrix(),\r\n          options, drawBorders, drawControls;\r\n      styleOverride = styleOverride || { };\r\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\r\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\r\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\r\n      options = fabric.util.qrDecompose(matrix);\r\n      ctx.save();\r\n      ctx.translate(options.translateX, options.translateY);\r\n      ctx.lineWidth = 1 * this.borderScaleFactor;\r\n      if (!this.group) {\r\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n      }\r\n      ctx.rotate(degreesToRadians(options.angle));\r\n      if (styleOverride.forActiveSelection || this.group) {\r\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\r\n      }\r\n      else {\r\n        drawBorders && this.drawBorders(ctx, styleOverride);\r\n      }\r\n      drawControls && this.drawControls(ctx, styleOverride);\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _setShadow: function(ctx) {\r\n      if (!this.shadow) {\r\n        return;\r\n      }\r\n\r\n      var shadow = this.shadow, canvas = this.canvas, scaling,\r\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\r\n          multY = (canvas && canvas.viewportTransform[3]) || 1;\r\n      if (shadow.nonScaling) {\r\n        scaling = { scaleX: 1, scaleY: 1 };\r\n      }\r\n      else {\r\n        scaling = this.getObjectScaling();\r\n      }\r\n      if (canvas && canvas._isRetinaScaling()) {\r\n        multX *= fabric.devicePixelRatio;\r\n        multY *= fabric.devicePixelRatio;\r\n      }\r\n      ctx.shadowColor = shadow.color;\r\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\r\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\r\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\r\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _removeShadow: function(ctx) {\r\n      if (!this.shadow) {\r\n        return;\r\n      }\r\n\r\n      ctx.shadowColor = '';\r\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\r\n     * @return {Object} offset.offsetX offset for text rendering\r\n     * @return {Object} offset.offsetY offset for text rendering\r\n     */\r\n    _applyPatternGradientTransform: function(ctx, filler) {\r\n      if (!filler || !filler.toLive) {\r\n        return { offsetX: 0, offsetY: 0 };\r\n      }\r\n      var t = filler.gradientTransform || filler.patternTransform;\r\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\r\n          offsetY = -this.height / 2 + filler.offsetY || 0;\r\n\r\n      if (filler.gradientUnits === 'percentage') {\r\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\r\n      }\r\n      else {\r\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\r\n      }\r\n      if (t) {\r\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\r\n      }\r\n      return { offsetX: offsetX, offsetY: offsetY };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderPaintInOrder: function(ctx) {\r\n      if (this.paintFirst === 'stroke') {\r\n        this._renderStroke(ctx);\r\n        this._renderFill(ctx);\r\n      }\r\n      else {\r\n        this._renderFill(ctx);\r\n        this._renderStroke(ctx);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * function that actually render something on the context.\r\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\r\n     * not related to rendering\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(/* ctx */) {\r\n\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderFill: function(ctx) {\r\n      if (!this.fill) {\r\n        return;\r\n      }\r\n\r\n      ctx.save();\r\n      this._setFillStyles(ctx, this);\r\n      if (this.fillRule === 'evenodd') {\r\n        ctx.fill('evenodd');\r\n      }\r\n      else {\r\n        ctx.fill();\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderStroke: function(ctx) {\r\n      if (!this.stroke || this.strokeWidth === 0) {\r\n        return;\r\n      }\r\n\r\n      if (this.shadow && !this.shadow.affectStroke) {\r\n        this._removeShadow(ctx);\r\n      }\r\n\r\n      ctx.save();\r\n      if (this.strokeUniform && this.group) {\r\n        var scaling = this.getObjectScaling();\r\n        ctx.scale(1 / scaling.scaleX, 1 / scaling.scaleY);\r\n      }\r\n      else if (this.strokeUniform) {\r\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\r\n      }\r\n      this._setLineDash(ctx, this.strokeDashArray);\r\n      this._setStrokeStyles(ctx, this);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * This function try to patch the missing gradientTransform on canvas gradients.\r\n     * transforming a context to transform the gradient, is going to transform the stroke too.\r\n     * we want to transform the gradient but not the stroke operation, so we create\r\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\r\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\r\n     * is limited.\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {fabric.Gradient} filler a fabric gradient instance\r\n     */\r\n    _applyPatternForTransformedGradient: function(ctx, filler) {\r\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n          pCanvas = fabric.util.createCanvasElement(), pCtx, retinaScaling = this.canvas.getRetinaScaling(),\r\n          width = dims.x / this.scaleX / retinaScaling, height = dims.y / this.scaleY / retinaScaling;\r\n      pCanvas.width = width;\r\n      pCanvas.height = height;\r\n      pCtx = pCanvas.getContext('2d');\r\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\r\n      pCtx.lineTo(0, height); pCtx.closePath();\r\n      pCtx.translate(width / 2, height / 2);\r\n      pCtx.scale(\r\n        dims.zoomX / this.scaleX / retinaScaling,\r\n        dims.zoomY / this.scaleY / retinaScaling\r\n      );\r\n      this._applyPatternGradientTransform(pCtx, filler);\r\n      pCtx.fillStyle = filler.toLive(ctx);\r\n      pCtx.fill();\r\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\r\n      ctx.scale(\r\n        retinaScaling * this.scaleX / dims.zoomX,\r\n        retinaScaling * this.scaleY / dims.zoomY\r\n      );\r\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\r\n    },\r\n\r\n    /**\r\n     * This function is an helper for svg import. it returns the center of the object in the svg\r\n     * untransformed coordinates\r\n     * @private\r\n     * @return {Object} center point from element coordinates\r\n     */\r\n    _findCenterFromElement: function() {\r\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\r\n    },\r\n\r\n    /**\r\n     * This function is an helper for svg import. it decompose the transformMatrix\r\n     * and assign properties to object.\r\n     * untransformed coordinates\r\n     * @private\r\n     * @chainable\r\n     */\r\n    _assignTransformMatrixProps: function() {\r\n      if (this.transformMatrix) {\r\n        var options = fabric.util.qrDecompose(this.transformMatrix);\r\n        this.flipX = false;\r\n        this.flipY = false;\r\n        this.set('scaleX', options.scaleX);\r\n        this.set('scaleY', options.scaleY);\r\n        this.angle = options.angle;\r\n        this.skewX = options.skewX;\r\n        this.skewY = 0;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * This function is an helper for svg import. it removes the transform matrix\r\n     * and set to object properties that fabricjs can handle\r\n     * @private\r\n     * @param {Object} preserveAspectRatioOptions\r\n     * @return {thisArg}\r\n     */\r\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\r\n      var center = this._findCenterFromElement();\r\n      if (this.transformMatrix) {\r\n        this._assignTransformMatrixProps();\r\n        center = fabric.util.transformPoint(center, this.transformMatrix);\r\n      }\r\n      this.transformMatrix = null;\r\n      if (preserveAspectRatioOptions) {\r\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\r\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\r\n        this.cropX = preserveAspectRatioOptions.cropX;\r\n        this.cropY = preserveAspectRatioOptions.cropY;\r\n        center.x += preserveAspectRatioOptions.offsetLeft;\r\n        center.y += preserveAspectRatioOptions.offsetTop;\r\n        this.width = preserveAspectRatioOptions.width;\r\n        this.height = preserveAspectRatioOptions.height;\r\n      }\r\n      this.setPositionByOrigin(center, 'center', 'center');\r\n    },\r\n\r\n    /**\r\n     * Clones an instance, using a callback method will work for every object.\r\n     * @param {Function} callback Callback is invoked with a clone as a first argument\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     */\r\n    clone: function(callback, propertiesToInclude) {\r\n      var objectForm = this.toObject(propertiesToInclude);\r\n      if (this.constructor.fromObject) {\r\n        this.constructor.fromObject(objectForm, callback);\r\n      }\r\n      else {\r\n        fabric.Object._fromObject('Object', objectForm, callback);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Creates an instance of fabric.Image out of an object\r\n     * makes use of toCanvasElement.\r\n     * Once this method was based on toDataUrl and loadImage, so it also had a quality\r\n     * and format option. toCanvasElement is faster and produce no loss of quality.\r\n     * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\r\n     * toCanvasElement and then toBlob from the obtained canvas is also a good option.\r\n     * This method is sync now, but still support the callback because we did not want to break.\r\n     * When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.\r\n     * @param {Function} callback callback, invoked with an instance as a first argument\r\n     * @param {Object} [options] for clone as image, passed to toDataURL\r\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n     * @return {fabric.Object} thisArg\r\n     */\r\n    cloneAsImage: function(callback, options) {\r\n      var canvasEl = this.toCanvasElement(options);\r\n      if (callback) {\r\n        callback(new fabric.Image(canvasEl));\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Converts an object into a HTMLCanvas element\r\n     * @param {Object} options Options object\r\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n     * @return {HTMLCanvasElement} Returns DOM element <canvas> with the fabric.Object\r\n     */\r\n    toCanvasElement: function(options) {\r\n      options || (options = { });\r\n\r\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\r\n          originalGroup = this.group,\r\n          originalShadow = this.shadow, abs = Math.abs,\r\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\r\n      delete this.group;\r\n      if (options.withoutTransform) {\r\n        utils.resetObjectTransform(this);\r\n      }\r\n      if (options.withoutShadow) {\r\n        this.shadow = null;\r\n      }\r\n\r\n      var el = fabric.util.createCanvasElement(),\r\n          // skip canvas zoom and calculate with setCoords now.\r\n          boundingRect = this.getBoundingRect(true, true),\r\n          shadow = this.shadow, scaling,\r\n          shadowOffset = { x: 0, y: 0 }, shadowBlur,\r\n          width, height;\r\n\r\n      if (shadow) {\r\n        shadowBlur = shadow.blur;\r\n        if (shadow.nonScaling) {\r\n          scaling = { scaleX: 1, scaleY: 1 };\r\n        }\r\n        else {\r\n          scaling = this.getObjectScaling();\r\n        }\r\n        // consider non scaling shadow.\r\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\r\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\r\n      }\r\n      width = boundingRect.width + shadowOffset.x;\r\n      height = boundingRect.height + shadowOffset.y;\r\n      // if the current width/height is not an integer\r\n      // we need to make it so.\r\n      el.width = Math.ceil(width);\r\n      el.height = Math.ceil(height);\r\n      var canvas = new fabric.StaticCanvas(el, {\r\n        enableRetinaScaling: false,\r\n        renderOnAddRemove: false,\r\n        skipOffscreen: false,\r\n      });\r\n      if (options.format === 'jpeg') {\r\n        canvas.backgroundColor = '#fff';\r\n      }\r\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\r\n\r\n      var originalCanvas = this.canvas;\r\n      canvas.add(this);\r\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\r\n      this.shadow = originalShadow;\r\n      this.set('canvas', originalCanvas);\r\n      if (originalGroup) {\r\n        this.group = originalGroup;\r\n      }\r\n      this.set(origParams).setCoords();\r\n      // canvas.dispose will call image.dispose that will nullify the elements\r\n      // since this canvas is a simple element for the process, we remove references\r\n      // to objects in this way in order to avoid object trashing.\r\n      canvas._objects = [];\r\n      canvas.dispose();\r\n      canvas = null;\r\n\r\n      return canvasEl;\r\n    },\r\n\r\n    /**\r\n     * Converts an object into a data-url-like string\r\n     * @param {Object} options Options object\r\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n     */\r\n    toDataURL: function(options) {\r\n      options || (options = { });\r\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\r\n    },\r\n\r\n    /**\r\n     * Returns true if specified type is identical to the type of an instance\r\n     * @param {String} type Type to check against\r\n     * @return {Boolean}\r\n     */\r\n    isType: function(type) {\r\n      return this.type === type;\r\n    },\r\n\r\n    /**\r\n     * Returns complexity of an instance\r\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\r\n     */\r\n    complexity: function() {\r\n      return 1;\r\n    },\r\n\r\n    /**\r\n     * Returns a JSON representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} JSON\r\n     */\r\n    toJSON: function(propertiesToInclude) {\r\n      // delegate, not alias\r\n      return this.toObject(propertiesToInclude);\r\n    },\r\n\r\n    /**\r\n     * Sets \"angle\" of an instance with centered rotation\r\n     * @param {Number} angle Angle value (in degrees)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    rotate: function(angle) {\r\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\r\n\r\n      if (shouldCenterOrigin) {\r\n        this._setOriginToCenter();\r\n      }\r\n\r\n      this.set('angle', angle);\r\n\r\n      if (shouldCenterOrigin) {\r\n        this._resetOrigin();\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object horizontally on canvas to which it was added last.\r\n     * You might need to call `setCoords` on an object after centering, to update controls area.\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    centerH: function () {\r\n      this.canvas && this.canvas.centerObjectH(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object horizontally on current viewport of canvas to which it was added last.\r\n     * You might need to call `setCoords` on an object after centering, to update controls area.\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    viewportCenterH: function () {\r\n      this.canvas && this.canvas.viewportCenterObjectH(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically on canvas to which it was added last.\r\n     * You might need to call `setCoords` on an object after centering, to update controls area.\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    centerV: function () {\r\n      this.canvas && this.canvas.centerObjectV(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically on current viewport of canvas to which it was added last.\r\n     * You might need to call `setCoords` on an object after centering, to update controls area.\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    viewportCenterV: function () {\r\n      this.canvas && this.canvas.viewportCenterObjectV(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object vertically and horizontally on canvas to which is was added last\r\n     * You might need to call `setCoords` on an object after centering, to update controls area.\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    center: function () {\r\n      this.canvas && this.canvas.centerObject(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Centers object on current viewport of canvas to which it was added last.\r\n     * You might need to call `setCoords` on an object after centering, to update controls area.\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    viewportCenter: function () {\r\n      this.canvas && this.canvas.viewportCenterObject(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns coordinates of a pointer relative to an object\r\n     * @param {Event} e Event to operate upon\r\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\r\n     * @return {Object} Coordinates of a pointer (x, y)\r\n     */\r\n    getLocalPointer: function(e, pointer) {\r\n      pointer = pointer || this.canvas.getPointer(e);\r\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\r\n          objectLeftTop = this._getLeftTopCoords();\r\n      if (this.angle) {\r\n        pClicked = fabric.util.rotatePoint(\r\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\r\n      }\r\n      return {\r\n        x: pClicked.x - objectLeftTop.x,\r\n        y: pClicked.y - objectLeftTop.y\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Sets canvas globalCompositeOperation for specific object\r\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\r\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\r\n     */\r\n    _setupCompositeOperation: function (ctx) {\r\n      if (this.globalCompositeOperation) {\r\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\r\n      }\r\n    }\r\n  });\r\n\r\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\r\n\r\n  extend(fabric.Object.prototype, fabric.Observable);\r\n\r\n  /**\r\n   * Defines the number of fraction digits to use when serializing object values.\r\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\r\n   * @static\r\n   * @memberOf fabric.Object\r\n   * @constant\r\n   * @type Number\r\n   */\r\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\r\n\r\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\r\n    var klass = fabric[className];\r\n    object = clone(object, true);\r\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\r\n      if (typeof patterns[0] !== 'undefined') {\r\n        object.fill = patterns[0];\r\n      }\r\n      if (typeof patterns[1] !== 'undefined') {\r\n        object.stroke = patterns[1];\r\n      }\r\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\r\n        object.clipPath = enlivedProps[0];\r\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\r\n        callback && callback(instance);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Unique id used internally when creating SVG elements\r\n   * @static\r\n   * @memberOf fabric.Object\r\n   * @type Number\r\n   */\r\n  fabric.Object.__uid = 0;\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function() {\r\n\r\n  var degreesToRadians = fabric.util.degreesToRadians,\r\n      originXOffset = {\r\n        left: -0.5,\r\n        center: 0,\r\n        right: 0.5\r\n      },\r\n      originYOffset = {\r\n        top: -0.5,\r\n        center: 0,\r\n        bottom: 0.5\r\n      };\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\r\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\r\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\r\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n     * @return {fabric.Point}\r\n     */\r\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\r\n      var x = point.x,\r\n          y = point.y,\r\n          offsetX, offsetY, dim;\r\n\r\n      if (typeof fromOriginX === 'string') {\r\n        fromOriginX = originXOffset[fromOriginX];\r\n      }\r\n      else {\r\n        fromOriginX -= 0.5;\r\n      }\r\n\r\n      if (typeof toOriginX === 'string') {\r\n        toOriginX = originXOffset[toOriginX];\r\n      }\r\n      else {\r\n        toOriginX -= 0.5;\r\n      }\r\n\r\n      offsetX = toOriginX - fromOriginX;\r\n\r\n      if (typeof fromOriginY === 'string') {\r\n        fromOriginY = originYOffset[fromOriginY];\r\n      }\r\n      else {\r\n        fromOriginY -= 0.5;\r\n      }\r\n\r\n      if (typeof toOriginY === 'string') {\r\n        toOriginY = originYOffset[toOriginY];\r\n      }\r\n      else {\r\n        toOriginY -= 0.5;\r\n      }\r\n\r\n      offsetY = toOriginY - fromOriginY;\r\n\r\n      if (offsetX || offsetY) {\r\n        dim = this._getTransformedDimensions();\r\n        x = point.x + offsetX * dim.x;\r\n        y = point.y + offsetY * dim.y;\r\n      }\r\n\r\n      return new fabric.Point(x, y);\r\n    },\r\n\r\n    /**\r\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\r\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n     * @return {fabric.Point}\r\n     */\r\n    translateToCenterPoint: function(point, originX, originY) {\r\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\r\n      if (this.angle) {\r\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\r\n      }\r\n      return p;\r\n    },\r\n\r\n    /**\r\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\r\n     * @param {fabric.Point} center The point which corresponds to center of the object\r\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n     * @return {fabric.Point}\r\n     */\r\n    translateToOriginPoint: function(center, originX, originY) {\r\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n      if (this.angle) {\r\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\r\n      }\r\n      return p;\r\n    },\r\n\r\n    /**\r\n     * Returns the real center coordinates of the object\r\n     * @return {fabric.Point}\r\n     */\r\n    getCenterPoint: function() {\r\n      var leftTop = new fabric.Point(this.left, this.top);\r\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\r\n    },\r\n\r\n    /**\r\n     * Returns the coordinates of the object based on center coordinates\r\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\r\n     * @return {fabric.Point}\r\n     */\r\n    // getOriginPoint: function(center) {\r\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\r\n    // },\r\n\r\n    /**\r\n     * Returns the coordinates of the object as if it has a different origin\r\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n     * @return {fabric.Point}\r\n     */\r\n    getPointByOrigin: function(originX, originY) {\r\n      var center = this.getCenterPoint();\r\n      return this.translateToOriginPoint(center, originX, originY);\r\n    },\r\n\r\n    /**\r\n     * Returns the point in local coordinates\r\n     * @param {fabric.Point} point The point relative to the global coordinate system\r\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n     * @return {fabric.Point}\r\n     */\r\n    toLocalPoint: function(point, originX, originY) {\r\n      var center = this.getCenterPoint(),\r\n          p, p2;\r\n\r\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\r\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\r\n      }\r\n      else {\r\n        p = new fabric.Point(this.left, this.top);\r\n      }\r\n\r\n      p2 = new fabric.Point(point.x, point.y);\r\n      if (this.angle) {\r\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\r\n      }\r\n      return p2.subtractEquals(p);\r\n    },\r\n\r\n    /**\r\n     * Returns the point in global coordinates\r\n     * @param {fabric.Point} The point relative to the local coordinate system\r\n     * @return {fabric.Point}\r\n     */\r\n    // toGlobalPoint: function(point) {\r\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\r\n    // },\r\n\r\n    /**\r\n     * Sets the position of the object taking into consideration the object's origin\r\n     * @param {fabric.Point} pos The new position of the object\r\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\r\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\r\n     * @return {void}\r\n     */\r\n    setPositionByOrigin: function(pos, originX, originY) {\r\n      var center = this.translateToCenterPoint(pos, originX, originY),\r\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\r\n      this.set('left', position.x);\r\n      this.set('top', position.y);\r\n    },\r\n\r\n    /**\r\n     * @param {String} to One of 'left', 'center', 'right'\r\n     */\r\n    adjustPosition: function(to) {\r\n      var angle = degreesToRadians(this.angle),\r\n          hypotFull = this.getScaledWidth(),\r\n          xFull = fabric.util.cos(angle) * hypotFull,\r\n          yFull = fabric.util.sin(angle) * hypotFull,\r\n          offsetFrom, offsetTo;\r\n\r\n      //TODO: this function does not consider mixed situation like top, center.\r\n      if (typeof this.originX === 'string') {\r\n        offsetFrom = originXOffset[this.originX];\r\n      }\r\n      else {\r\n        offsetFrom = this.originX - 0.5;\r\n      }\r\n      if (typeof to === 'string') {\r\n        offsetTo = originXOffset[to];\r\n      }\r\n      else {\r\n        offsetTo = to - 0.5;\r\n      }\r\n      this.left += xFull * (offsetTo - offsetFrom);\r\n      this.top += yFull * (offsetTo - offsetFrom);\r\n      this.setCoords();\r\n      this.originX = to;\r\n    },\r\n\r\n    /**\r\n     * Sets the origin/position of the object to it's center point\r\n     * @private\r\n     * @return {void}\r\n     */\r\n    _setOriginToCenter: function() {\r\n      this._originalOriginX = this.originX;\r\n      this._originalOriginY = this.originY;\r\n\r\n      var center = this.getCenterPoint();\r\n\r\n      this.originX = 'center';\r\n      this.originY = 'center';\r\n\r\n      this.left = center.x;\r\n      this.top = center.y;\r\n    },\r\n\r\n    /**\r\n     * Resets the origin/position of the object to it's original origin\r\n     * @private\r\n     * @return {void}\r\n     */\r\n    _resetOrigin: function() {\r\n      var originPoint = this.translateToOriginPoint(\r\n        this.getCenterPoint(),\r\n        this._originalOriginX,\r\n        this._originalOriginY);\r\n\r\n      this.originX = this._originalOriginX;\r\n      this.originY = this._originalOriginY;\r\n\r\n      this.left = originPoint.x;\r\n      this.top = originPoint.y;\r\n\r\n      this._originalOriginX = null;\r\n      this._originalOriginY = null;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getLeftTopCoords: function() {\r\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\r\n    },\r\n  });\r\n\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  function arrayFromCoords(coords) {\r\n    return [\r\n      new fabric.Point(coords.tl.x, coords.tl.y),\r\n      new fabric.Point(coords.tr.x, coords.tr.y),\r\n      new fabric.Point(coords.br.x, coords.br.y),\r\n      new fabric.Point(coords.bl.x, coords.bl.y)\r\n    ];\r\n  }\r\n\r\n  var util = fabric.util,\r\n      degreesToRadians = util.degreesToRadians,\r\n      multiplyMatrices = util.multiplyTransformMatrices,\r\n      transformPoint = util.transformPoint;\r\n\r\n  util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * Describe object's corner position in canvas element coordinates.\r\n     * properties are depending on control keys and padding the main controls.\r\n     * each property is an object with x, y and corner.\r\n     * The `corner` property contains in a similar manner the 4 points of the\r\n     * interactive area of the corner.\r\n     * The coordinates depends from the controls positionHandler and are used\r\n     * to draw and locate controls\r\n     * @memberOf fabric.Object.prototype\r\n     */\r\n    oCoords: null,\r\n\r\n    /**\r\n     * Describe object's corner position in canvas object absolute coordinates\r\n     * properties are tl,tr,bl,br and describe the four main corner.\r\n     * each property is an object with x, y, instance of Fabric.Point.\r\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\r\n     * skewX, skewY, angle, strokeWidth, top, left.\r\n     * Those coordinates are useful to understand where an object is. They get updated\r\n     * with oCoords but they do not need to be updated when zoom or panning change.\r\n     * The coordinates get updated with @method setCoords.\r\n     * You can calculate them without updating with @method calcACoords();\r\n     * @memberOf fabric.Object.prototype\r\n     */\r\n    aCoords: null,\r\n\r\n    /**\r\n     * Describe object's corner position in canvas element coordinates.\r\n     * includes padding. Used of object detection.\r\n     * set and refreshed with setCoords and calcCoords.\r\n     * @memberOf fabric.Object.prototype\r\n     */\r\n    lineCoords: null,\r\n\r\n    /**\r\n     * storage for object transform matrix\r\n     */\r\n    ownMatrixCache: null,\r\n\r\n    /**\r\n     * storage for object full transform matrix\r\n     */\r\n    matrixCache: null,\r\n\r\n    /**\r\n     * custom controls interface\r\n     * controls are added by default_controls.js\r\n     */\r\n    controls: { },\r\n\r\n    /**\r\n     * return correct set of coordinates for intersection\r\n     * this will return either aCoords or lineCoords.\r\n     * @param {Boolean} absolute will return aCoords if true or lineCoords\r\n     * @return {Object} {tl, tr, br, bl} points\r\n     */\r\n    _getCoords: function(absolute, calculate) {\r\n      if (calculate) {\r\n        return (absolute ? this.calcACoords() : this.calcLineCoords());\r\n      }\r\n      if (!this.aCoords || !this.lineCoords) {\r\n        this.setCoords(true);\r\n      }\r\n      return (absolute ? this.aCoords : this.lineCoords);\r\n    },\r\n\r\n    /**\r\n     * return correct set of coordinates for intersection\r\n     * this will return either aCoords or lineCoords.\r\n     * The coords are returned in an array.\r\n     * @return {Array} [tl, tr, br, bl] of points\r\n     */\r\n    getCoords: function(absolute, calculate) {\r\n      return arrayFromCoords(this._getCoords(absolute, calculate));\r\n    },\r\n\r\n    /**\r\n     * Checks if object intersects with an area formed by 2 points\r\n     * @param {Object} pointTL top-left point of area\r\n     * @param {Object} pointBR bottom-right point of area\r\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n     * @return {Boolean} true if object intersects with an area formed by 2 points\r\n     */\r\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\r\n      var coords = this.getCoords(absolute, calculate),\r\n          intersection = fabric.Intersection.intersectPolygonRectangle(\r\n            coords,\r\n            pointTL,\r\n            pointBR\r\n          );\r\n      return intersection.status === 'Intersection';\r\n    },\r\n\r\n    /**\r\n     * Checks if object intersects with another object\r\n     * @param {Object} other Object to test\r\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n     * @return {Boolean} true if object intersects with another object\r\n     */\r\n    intersectsWithObject: function(other, absolute, calculate) {\r\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\r\n        this.getCoords(absolute, calculate),\r\n        other.getCoords(absolute, calculate)\r\n      );\r\n\r\n      return intersection.status === 'Intersection'\r\n        || other.isContainedWithinObject(this, absolute, calculate)\r\n        || this.isContainedWithinObject(other, absolute, calculate);\r\n    },\r\n\r\n    /**\r\n     * Checks if object is fully contained within area of another object\r\n     * @param {Object} other Object to test\r\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n     * @return {Boolean} true if object is fully contained within area of another object\r\n     */\r\n    isContainedWithinObject: function(other, absolute, calculate) {\r\n      var points = this.getCoords(absolute, calculate),\r\n          otherCoords = absolute ? other.aCoords : other.lineCoords,\r\n          i = 0, lines = other._getImageLines(otherCoords);\r\n      for (; i < 4; i++) {\r\n        if (!other.containsPoint(points[i], lines)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Checks if object is fully contained within area formed by 2 points\r\n     * @param {Object} pointTL top-left point of area\r\n     * @param {Object} pointBR bottom-right point of area\r\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\r\n     */\r\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\r\n      var boundingRect = this.getBoundingRect(absolute, calculate);\r\n\r\n      return (\r\n        boundingRect.left >= pointTL.x &&\r\n        boundingRect.left + boundingRect.width <= pointBR.x &&\r\n        boundingRect.top >= pointTL.y &&\r\n        boundingRect.top + boundingRect.height <= pointBR.y\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Checks if point is inside the object\r\n     * @param {fabric.Point} point Point to check against\r\n     * @param {Object} [lines] object returned from @method _getImageLines\r\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n     * @return {Boolean} true if point is inside the object\r\n     */\r\n    containsPoint: function(point, lines, absolute, calculate) {\r\n      var coords = this._getCoords(absolute, calculate),\r\n          lines = lines || this._getImageLines(coords),\r\n          xPoints = this._findCrossPoints(point, lines);\r\n      // if xPoints is odd then point is inside the object\r\n      return (xPoints !== 0 && xPoints % 2 === 1);\r\n    },\r\n\r\n    /**\r\n     * Checks if object is contained within the canvas with current viewportTransform\r\n     * the check is done stopping at first point that appears on screen\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\r\n     * @return {Boolean} true if object is fully or partially contained within canvas\r\n     */\r\n    isOnScreen: function(calculate) {\r\n      if (!this.canvas) {\r\n        return false;\r\n      }\r\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n      var points = this.getCoords(true, calculate);\r\n      // if some point is on screen, the object is on screen.\r\n      if (points.some(function(point) {\r\n        return point.x <= pointBR.x && point.x >= pointTL.x &&\r\n        point.y <= pointBR.y && point.y >= pointTL.y;\r\n      })) {\r\n        return true;\r\n      }\r\n      // no points on screen, check intersection with absolute coordinates\r\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n        return true;\r\n      }\r\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n    },\r\n\r\n    /**\r\n     * Checks if the object contains the midpoint between canvas extremities\r\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\r\n     * @private\r\n     * @param {Fabric.Point} pointTL Top Left point\r\n     * @param {Fabric.Point} pointBR Top Right point\r\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\r\n     * @return {Boolean} true if the object contains the point\r\n     */\r\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\r\n      // worst case scenario the object is so big that contains the screen\r\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\r\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Checks if object is partially contained within the canvas with current viewportTransform\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\r\n     * @return {Boolean} true if object is partially contained within canvas\r\n     */\r\n    isPartiallyOnScreen: function(calculate) {\r\n      if (!this.canvas) {\r\n        return false;\r\n      }\r\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\r\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\r\n        return true;\r\n      }\r\n      var allPointsAreOutside = this.getCoords(true, calculate).every(function(point) {\r\n        return (point.x >= pointBR.x || point.x <= pointTL.x) &&\r\n        (point.y >= pointBR.y || point.y <= pointTL.y);\r\n      });\r\n      return allPointsAreOutside && this._containsCenterOfCanvas(pointTL, pointBR, calculate);\r\n    },\r\n\r\n    /**\r\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\r\n     * @private\r\n     * @param {Object} oCoords Coordinates of the object corners\r\n     */\r\n    _getImageLines: function(oCoords) {\r\n\r\n      var lines = {\r\n        topline: {\r\n          o: oCoords.tl,\r\n          d: oCoords.tr\r\n        },\r\n        rightline: {\r\n          o: oCoords.tr,\r\n          d: oCoords.br\r\n        },\r\n        bottomline: {\r\n          o: oCoords.br,\r\n          d: oCoords.bl\r\n        },\r\n        leftline: {\r\n          o: oCoords.bl,\r\n          d: oCoords.tl\r\n        }\r\n      };\r\n\r\n      // // debugging\r\n      // if (this.canvas.contextTop) {\r\n      //   this.canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\r\n      //   this.canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\r\n      //\r\n      //   this.canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\r\n      //   this.canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\r\n      //\r\n      //   this.canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\r\n      //   this.canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\r\n      //\r\n      //   this.canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\r\n      //   this.canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\r\n      // }\r\n\r\n      return lines;\r\n    },\r\n\r\n    /**\r\n     * Helper method to determine how many cross points are between the 4 object edges\r\n     * and the horizontal line determined by a point on canvas\r\n     * @private\r\n     * @param {fabric.Point} point Point to check\r\n     * @param {Object} lines Coordinates of the object being evaluated\r\n     */\r\n    // remove yi, not used but left code here just in case.\r\n    _findCrossPoints: function(point, lines) {\r\n      var b1, b2, a1, a2, xi, // yi,\r\n          xcount = 0,\r\n          iLine;\r\n\r\n      for (var lineKey in lines) {\r\n        iLine = lines[lineKey];\r\n        // optimisation 1: line below point. no cross\r\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\r\n          continue;\r\n        }\r\n        // optimisation 2: line above point. no cross\r\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\r\n          continue;\r\n        }\r\n        // optimisation 3: vertical line case\r\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\r\n          xi = iLine.o.x;\r\n          // yi = point.y;\r\n        }\r\n        // calculate the intersection point\r\n        else {\r\n          b1 = 0;\r\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\r\n          a1 = point.y - b1 * point.x;\r\n          a2 = iLine.o.y - b2 * iLine.o.x;\r\n\r\n          xi = -(a1 - a2) / (b1 - b2);\r\n          // yi = a1 + b1 * xi;\r\n        }\r\n        // dont count xi < point.x cases\r\n        if (xi >= point.x) {\r\n          xcount += 1;\r\n        }\r\n        // optimisation 4: specific for square images\r\n        if (xcount === 2) {\r\n          break;\r\n        }\r\n      }\r\n      return xcount;\r\n    },\r\n\r\n    /**\r\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\r\n     * the box is intended as aligned to axis of canvas.\r\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\r\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\r\n     * @return {Object} Object with left, top, width, height properties\r\n     */\r\n    getBoundingRect: function(absolute, calculate) {\r\n      var coords = this.getCoords(absolute, calculate);\r\n      return util.makeBoundingBoxFromPoints(coords);\r\n    },\r\n\r\n    /**\r\n     * Returns width of an object's bounding box counting transformations\r\n     * before 2.0 it was named getWidth();\r\n     * @return {Number} width value\r\n     */\r\n    getScaledWidth: function() {\r\n      return this._getTransformedDimensions().x;\r\n    },\r\n\r\n    /**\r\n     * Returns height of an object bounding box counting transformations\r\n     * before 2.0 it was named getHeight();\r\n     * @return {Number} height value\r\n     */\r\n    getScaledHeight: function() {\r\n      return this._getTransformedDimensions().y;\r\n    },\r\n\r\n    /**\r\n     * Makes sure the scale is valid and modifies it if necessary\r\n     * @private\r\n     * @param {Number} value\r\n     * @return {Number}\r\n     */\r\n    _constrainScale: function(value) {\r\n      if (Math.abs(value) < this.minScaleLimit) {\r\n        if (value < 0) {\r\n          return -this.minScaleLimit;\r\n        }\r\n        else {\r\n          return this.minScaleLimit;\r\n        }\r\n      }\r\n      else if (value === 0) {\r\n        return 0.0001;\r\n      }\r\n      return value;\r\n    },\r\n\r\n    /**\r\n     * Scales an object (equally by x and y)\r\n     * @param {Number} value Scale factor\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    scale: function(value) {\r\n      this._set('scaleX', value);\r\n      this._set('scaleY', value);\r\n      return this.setCoords();\r\n    },\r\n\r\n    /**\r\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\r\n     * @param {Number} value New width value\r\n     * @param {Boolean} absolute ignore viewport\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    scaleToWidth: function(value, absolute) {\r\n      // adjust to bounding rect factor so that rotated shapes would fit as well\r\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\r\n      return this.scale(value / this.width / boundingRectFactor);\r\n    },\r\n\r\n    /**\r\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\r\n     * @param {Number} value New height value\r\n     * @param {Boolean} absolute ignore viewport\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    scaleToHeight: function(value, absolute) {\r\n      // adjust to bounding rect factor so that rotated shapes would fit as well\r\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\r\n      return this.scale(value / this.height / boundingRectFactor);\r\n    },\r\n\r\n    /**\r\n     * Calculates and returns the .coords of an object.\r\n     * unused by the library, only for the end dev.\r\n     * @return {Object} Object with tl, tr, br, bl ....\r\n     * @chainable\r\n     * @deprecated\r\n     */\r\n    calcCoords: function(absolute) {\r\n      // this is a compatibility function to avoid removing calcCoords now.\r\n      if (absolute) {\r\n        return this.calcACoords();\r\n      }\r\n      return this.calcOCoords();\r\n    },\r\n\r\n    calcLineCoords: function() {\r\n      var vpt = this.getViewportTransform(),\r\n          padding = this.padding, angle = degreesToRadians(this.angle),\r\n          cos = util.cos(angle), sin = util.sin(angle),\r\n          cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\r\n          cosPMinusSinP = cosP - sinP, aCoords = this.calcACoords();\r\n\r\n      var lineCoords = {\r\n        tl: transformPoint(aCoords.tl, vpt),\r\n        tr: transformPoint(aCoords.tr, vpt),\r\n        bl: transformPoint(aCoords.bl, vpt),\r\n        br: transformPoint(aCoords.br, vpt),\r\n      };\r\n\r\n      if (padding) {\r\n        lineCoords.tl.x -= cosPMinusSinP;\r\n        lineCoords.tl.y -= cosPSinP;\r\n        lineCoords.tr.x += cosPSinP;\r\n        lineCoords.tr.y -= cosPMinusSinP;\r\n        lineCoords.bl.x -= cosPSinP;\r\n        lineCoords.bl.y += cosPMinusSinP;\r\n        lineCoords.br.x += cosPMinusSinP;\r\n        lineCoords.br.y += cosPSinP;\r\n      }\r\n\r\n      return lineCoords;\r\n    },\r\n\r\n    calcOCoords: function() {\r\n      var rotateMatrix = this._calcRotateMatrix(),\r\n          translateMatrix = this._calcTranslateMatrix(),\r\n          vpt = this.getViewportTransform(),\r\n          startMatrix = multiplyMatrices(vpt, translateMatrix),\r\n          finalMatrix = multiplyMatrices(startMatrix, rotateMatrix),\r\n          finalMatrix = multiplyMatrices(finalMatrix, [1 / vpt[0], 0, 0, 1 / vpt[3], 0, 0]),\r\n          dim = this._calculateCurrentDimensions(),\r\n          coords = {};\r\n      this.forEachControl(function(control, key, fabricObject) {\r\n        coords[key] = control.positionHandler(dim, finalMatrix, fabricObject);\r\n      });\r\n\r\n      // debug code\r\n      // var canvas = this.canvas;\r\n      // setTimeout(function() {\r\n      //   canvas.contextTop.clearRect(0, 0, 700, 700);\r\n      //   canvas.contextTop.fillStyle = 'green';\r\n      //   Object.keys(coords).forEach(function(key) {\r\n      //     var control = coords[key];\r\n      //     canvas.contextTop.fillRect(control.x, control.y, 3, 3);\r\n      //   });\r\n      // }, 50);\r\n      return coords;\r\n    },\r\n\r\n    calcACoords: function() {\r\n      var rotateMatrix = this._calcRotateMatrix(),\r\n          translateMatrix = this._calcTranslateMatrix(),\r\n          finalMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\r\n          dim = this._getTransformedDimensions(),\r\n          w = dim.x / 2, h = dim.y / 2;\r\n      return {\r\n        // corners\r\n        tl: transformPoint({ x: -w, y: -h }, finalMatrix),\r\n        tr: transformPoint({ x: w, y: -h }, finalMatrix),\r\n        bl: transformPoint({ x: -w, y: h }, finalMatrix),\r\n        br: transformPoint({ x: w, y: h }, finalMatrix)\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Sets corner and controls position coordinates based on current angle, width and height, left and top.\r\n     * oCoords are used to find the corners\r\n     * aCoords are used to quickly find an object on the canvas\r\n     * lineCoords are used to quickly find object during pointer events.\r\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\r\n     * @param {Boolean} [skipCorners] skip calculation of oCoords.\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    setCoords: function(skipCorners) {\r\n      this.aCoords = this.calcACoords();\r\n      // in case we are in a group, for how the inner group target check works,\r\n      // lineCoords are exactly aCoords. Since the vpt gets absorbed by the normalized pointer.\r\n      this.lineCoords = this.group ? this.aCoords : this.calcLineCoords();\r\n      if (skipCorners) {\r\n        return this;\r\n      }\r\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\r\n      this.oCoords = this.calcOCoords();\r\n      this._setCornerCoords && this._setCornerCoords();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * calculate rotation matrix of an object\r\n     * @return {Array} rotation matrix for the object\r\n     */\r\n    _calcRotateMatrix: function() {\r\n      return util.calcRotateMatrix(this);\r\n    },\r\n\r\n    /**\r\n     * calculate the translation matrix for an object transform\r\n     * @return {Array} rotation matrix for the object\r\n     */\r\n    _calcTranslateMatrix: function() {\r\n      var center = this.getCenterPoint();\r\n      return [1, 0, 0, 1, center.x, center.y];\r\n    },\r\n\r\n    transformMatrixKey: function(skipGroup) {\r\n      var sep = '_', prefix = '';\r\n      if (!skipGroup && this.group) {\r\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\r\n      };\r\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\r\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\r\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\r\n    },\r\n\r\n    /**\r\n     * calculate transform matrix that represents the current transformations from the\r\n     * object's properties.\r\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\r\n     * There are some situation in which this is useful to avoid the fake rotation.\r\n     * @return {Array} transform matrix for the object\r\n     */\r\n    calcTransformMatrix: function(skipGroup) {\r\n      var matrix = this.calcOwnMatrix();\r\n      if (skipGroup || !this.group) {\r\n        return matrix;\r\n      }\r\n      var key = this.transformMatrixKey(skipGroup), cache = this.matrixCache || (this.matrixCache = {});\r\n      if (cache.key === key) {\r\n        return cache.value;\r\n      }\r\n      if (this.group) {\r\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(false), matrix);\r\n      }\r\n      cache.key = key;\r\n      cache.value = matrix;\r\n      return matrix;\r\n    },\r\n\r\n    /**\r\n     * calculate transform matrix that represents the current transformations from the\r\n     * object's properties, this matrix does not include the group transformation\r\n     * @return {Array} transform matrix for the object\r\n     */\r\n    calcOwnMatrix: function() {\r\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\r\n      if (cache.key === key) {\r\n        return cache.value;\r\n      }\r\n      var tMatrix = this._calcTranslateMatrix(),\r\n          options = {\r\n            angle: this.angle,\r\n            translateX: tMatrix[4],\r\n            translateY: tMatrix[5],\r\n            scaleX: this.scaleX,\r\n            scaleY: this.scaleY,\r\n            skewX: this.skewX,\r\n            skewY: this.skewY,\r\n            flipX: this.flipX,\r\n            flipY: this.flipY,\r\n          };\r\n      cache.key = key;\r\n      cache.value = util.composeMatrix(options);\r\n      return cache.value;\r\n    },\r\n\r\n    /*\r\n     * Calculate object dimensions from its properties\r\n     * @private\r\n     * @deprecated since 3.4.0, please use fabric.util._calcDimensionsTransformMatrix\r\n     * not including or including flipX, flipY to emulate the flipping boolean\r\n     * @return {Object} .x width dimension\r\n     * @return {Object} .y height dimension\r\n     */\r\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\r\n      return util.calcDimensionsMatrix({\r\n        skewX: skewX,\r\n        skewY: skewY,\r\n        scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\r\n        scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\r\n      });\r\n    },\r\n\r\n    /*\r\n     * Calculate object dimensions from its properties\r\n     * @private\r\n     * @return {Object} .x width dimension\r\n     * @return {Object} .y height dimension\r\n     */\r\n    _getNonTransformedDimensions: function() {\r\n      var strokeWidth = this.strokeWidth,\r\n          w = this.width + strokeWidth,\r\n          h = this.height + strokeWidth;\r\n      return { x: w, y: h };\r\n    },\r\n\r\n    /*\r\n     * Calculate object bounding box dimensions from its properties scale, skew.\r\n     * @param {Number} skewX, a value to override current skewX\r\n     * @param {Number} skewY, a value to override current skewY\r\n     * @private\r\n     * @return {Object} .x width dimension\r\n     * @return {Object} .y height dimension\r\n     */\r\n    _getTransformedDimensions: function(skewX, skewY) {\r\n      if (typeof skewX === 'undefined') {\r\n        skewX = this.skewX;\r\n      }\r\n      if (typeof skewY === 'undefined') {\r\n        skewY = this.skewY;\r\n      }\r\n      var dimensions, dimX, dimY,\r\n          noSkew = skewX === 0 && skewY === 0;\r\n\r\n      if (this.strokeUniform) {\r\n        dimX = this.width;\r\n        dimY = this.height;\r\n      }\r\n      else {\r\n        dimensions = this._getNonTransformedDimensions();\r\n        dimX = dimensions.x;\r\n        dimY = dimensions.y;\r\n      }\r\n      if (noSkew) {\r\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\r\n      }\r\n      var bbox = util.sizeAfterTransform(dimX, dimY, {\r\n        scaleX: this.scaleX,\r\n        scaleY: this.scaleY,\r\n        skewX: skewX,\r\n        skewY: skewY,\r\n      });\r\n      return this._finalizeDimensions(bbox.x, bbox.y);\r\n    },\r\n\r\n    /*\r\n     * Calculate object bounding box dimensions from its properties scale, skew.\r\n     * @param Number width width of the bbox\r\n     * @param Number height height of the bbox\r\n     * @private\r\n     * @return {Object} .x finalized width dimension\r\n     * @return {Object} .y finalized height dimension\r\n     */\r\n    _finalizeDimensions: function(width, height) {\r\n      return this.strokeUniform ?\r\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\r\n        :\r\n        { x: width, y: height };\r\n    },\r\n\r\n    /*\r\n     * Calculate object dimensions for controls box, including padding and canvas zoom.\r\n     * and active selection\r\n     * private\r\n     */\r\n    _calculateCurrentDimensions: function()  {\r\n      var vpt = this.getViewportTransform(),\r\n          dim = this._getTransformedDimensions(),\r\n          p = transformPoint(dim, vpt, true);\r\n      return p.scalarAdd(2 * this.padding);\r\n    },\r\n  });\r\n})();\r\n\r\n\r\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n  /**\r\n   * Moves an object to the bottom of the stack of drawn objects\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  sendToBack: function() {\r\n    if (this.group) {\r\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\r\n    }\r\n    else if (this.canvas) {\r\n      this.canvas.sendToBack(this);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Moves an object to the top of the stack of drawn objects\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  bringToFront: function() {\r\n    if (this.group) {\r\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\r\n    }\r\n    else if (this.canvas) {\r\n      this.canvas.bringToFront(this);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Moves an object down in stack of drawn objects\r\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  sendBackwards: function(intersecting) {\r\n    if (this.group) {\r\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\r\n    }\r\n    else if (this.canvas) {\r\n      this.canvas.sendBackwards(this, intersecting);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Moves an object up in stack of drawn objects\r\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  bringForward: function(intersecting) {\r\n    if (this.group) {\r\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\r\n    }\r\n    else if (this.canvas) {\r\n      this.canvas.bringForward(this, intersecting);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Moves an object to specified level in stack of drawn objects\r\n   * @param {Number} index New position of object\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  moveTo: function(index) {\r\n    if (this.group && this.group.type !== 'activeSelection') {\r\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\r\n    }\r\n    else if (this.canvas) {\r\n      this.canvas.moveTo(this, index);\r\n    }\r\n    return this;\r\n  }\r\n});\r\n\r\n\r\n/* _TO_SVG_START_ */\r\n(function() {\r\n  function getSvgColorString(prop, value) {\r\n    if (!value) {\r\n      return prop + ': none; ';\r\n    }\r\n    else if (value.toLive) {\r\n      return prop + ': url(#SVGID_' + value.id + '); ';\r\n    }\r\n    else {\r\n      var color = new fabric.Color(value),\r\n          str = prop + ': ' + color.toRgb() + '; ',\r\n          opacity = color.getAlpha();\r\n      if (opacity !== 1) {\r\n        //change the color in rgb + opacity\r\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\r\n      }\r\n      return str;\r\n    }\r\n  }\r\n\r\n  var toFixed = fabric.util.toFixed;\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n    /**\r\n     * Returns styles-string for svg-export\r\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n     * @return {String}\r\n     */\r\n    getSvgStyles: function(skipShadow) {\r\n\r\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\r\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\r\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\r\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\r\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\r\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\r\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\r\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\r\n          visibility = this.visible ? '' : ' visibility: hidden;',\r\n          filter = skipShadow ? '' : this.getSvgFilter(),\r\n          fill = getSvgColorString('fill', this.fill),\r\n          stroke = getSvgColorString('stroke', this.stroke);\r\n\r\n      return [\r\n        stroke,\r\n        'stroke-width: ', strokeWidth, '; ',\r\n        'stroke-dasharray: ', strokeDashArray, '; ',\r\n        'stroke-linecap: ', strokeLineCap, '; ',\r\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\r\n        'stroke-linejoin: ', strokeLineJoin, '; ',\r\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\r\n        fill,\r\n        'fill-rule: ', fillRule, '; ',\r\n        'opacity: ', opacity, ';',\r\n        filter,\r\n        visibility\r\n      ].join('');\r\n    },\r\n\r\n    /**\r\n     * Returns styles-string for svg-export\r\n     * @param {Object} style the object from which to retrieve style properties\r\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\r\n     * @return {String}\r\n     */\r\n    getSvgSpanStyles: function(style, useWhiteSpace) {\r\n      var term = '; ';\r\n      var fontFamily = style.fontFamily ?\r\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\r\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\r\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\r\n          fontFamily = fontFamily,\r\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\r\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\r\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\r\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\r\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\r\n          textDecoration = this.getSvgTextDecoration(style),\r\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\r\n      if (textDecoration) {\r\n        textDecoration = 'text-decoration: ' + textDecoration + term;\r\n      }\r\n\r\n      return [\r\n        stroke,\r\n        strokeWidth,\r\n        fontFamily,\r\n        fontSize,\r\n        fontStyle,\r\n        fontWeight,\r\n        textDecoration,\r\n        fill,\r\n        deltaY,\r\n        useWhiteSpace ? 'white-space: pre; ' : ''\r\n      ].join('');\r\n    },\r\n\r\n    /**\r\n     * Returns text-decoration property for svg-export\r\n     * @param {Object} style the object from which to retrieve style properties\r\n     * @return {String}\r\n     */\r\n    getSvgTextDecoration: function(style) {\r\n      return ['overline', 'underline', 'line-through'].filter(function(decoration) {\r\n        return style[decoration.replace('-', '')];\r\n      }).join(' ');\r\n    },\r\n\r\n    /**\r\n     * Returns filter for svg shadow\r\n     * @return {String}\r\n     */\r\n    getSvgFilter: function() {\r\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\r\n    },\r\n\r\n    /**\r\n     * Returns id attribute for svg output\r\n     * @return {String}\r\n     */\r\n    getSvgCommons: function() {\r\n      return [\r\n        this.id ? 'id=\"' + this.id + '\" ' : '',\r\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\r\n      ].join('');\r\n    },\r\n\r\n    /**\r\n     * Returns transform-string for svg-export\r\n     * @param {Boolean} use the full transform or the single object one.\r\n     * @return {String}\r\n     */\r\n    getSvgTransform: function(full, additionalTransform) {\r\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\r\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\r\n      return svgTransform +\r\n        (additionalTransform || '') + '\" ';\r\n    },\r\n\r\n    _setSVGBg: function(textBgRects) {\r\n      if (this.backgroundColor) {\r\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n        textBgRects.push(\r\n          '\\t\\t<rect ',\r\n          this._getFillAttributes(this.backgroundColor),\r\n          ' x=\"',\r\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\r\n          '\" y=\"',\r\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\r\n          '\" width=\"',\r\n          toFixed(this.width, NUM_FRACTION_DIGITS),\r\n          '\" height=\"',\r\n          toFixed(this.height, NUM_FRACTION_DIGITS),\r\n          '\"></rect>\\n');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    toSVG: function(reviver) {\r\n      return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\r\n    },\r\n\r\n    /**\r\n     * Returns svg clipPath representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    toClipPathSVG: function(reviver) {\r\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\r\n      options = options || {};\r\n      var reviver = options.reviver,\r\n          additionalTransform = options.additionalTransform || '',\r\n          commonPieces = [\r\n            this.getSvgTransform(true, additionalTransform),\r\n            this.getSvgCommons(),\r\n          ].join(''),\r\n          // insert commons in the markup, style and svgCommons\r\n          index = objectMarkup.indexOf('COMMON_PARTS');\r\n      objectMarkup[index] = commonPieces;\r\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _createBaseSVGMarkup: function(objectMarkup, options) {\r\n      options = options || {};\r\n      var noStyle = options.noStyle,\r\n          reviver = options.reviver,\r\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\r\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\r\n          clipPath = this.clipPath,\r\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\r\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\r\n          stroke = this.stroke, fill = this.fill, shadow = this.shadow,\r\n          commonPieces, markup = [], clipPathMarkup,\r\n          // insert commons in the markup, style and svgCommons\r\n          index = objectMarkup.indexOf('COMMON_PARTS'),\r\n          additionalTransform = options.additionalTransform;\r\n      if (clipPath) {\r\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\r\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\r\n          clipPath.toClipPathSVG(reviver) +\r\n          '</clipPath>\\n';\r\n      }\r\n      if (absoluteClipPath) {\r\n        markup.push(\r\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\r\n        );\r\n      }\r\n      markup.push(\r\n        '<g ',\r\n        this.getSvgTransform(false),\r\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\r\n        ' >\\n'\r\n      );\r\n      commonPieces = [\r\n        styleInfo,\r\n        vectorEffect,\r\n        noStyle ? '' : this.addPaintOrder(), ' ',\r\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\r\n      ].join('');\r\n      objectMarkup[index] = commonPieces;\r\n      if (fill && fill.toLive) {\r\n        markup.push(fill.toSVG(this));\r\n      }\r\n      if (stroke && stroke.toLive) {\r\n        markup.push(stroke.toSVG(this));\r\n      }\r\n      if (shadow) {\r\n        markup.push(shadow.toSVG(this));\r\n      }\r\n      if (clipPath) {\r\n        markup.push(clipPathMarkup);\r\n      }\r\n      markup.push(objectMarkup.join(''));\r\n      markup.push('</g>\\n');\r\n      absoluteClipPath && markup.push('</g>\\n');\r\n      return reviver ? reviver(markup.join('')) : markup.join('');\r\n    },\r\n\r\n    addPaintOrder: function() {\r\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\r\n    }\r\n  });\r\n})();\r\n/* _TO_SVG_END_ */\r\n\r\n\r\n(function() {\r\n\r\n  var extend = fabric.util.object.extend,\r\n      originalSet = 'stateProperties';\r\n\r\n  /*\r\n    Depends on `stateProperties`\r\n  */\r\n  function saveProps(origin, destination, props) {\r\n    var tmpObj = { }, deep = true;\r\n    props.forEach(function(prop) {\r\n      tmpObj[prop] = origin[prop];\r\n    });\r\n\r\n    extend(origin[destination], tmpObj, deep);\r\n  }\r\n\r\n  function _isEqual(origValue, currentValue, firstPass) {\r\n    if (origValue === currentValue) {\r\n      // if the objects are identical, return\r\n      return true;\r\n    }\r\n    else if (Array.isArray(origValue)) {\r\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\r\n        return false;\r\n      }\r\n      for (var i = 0, len = origValue.length; i < len; i++) {\r\n        if (!_isEqual(origValue[i], currentValue[i])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else if (origValue && typeof origValue === 'object') {\r\n      var keys = Object.keys(origValue), key;\r\n      if (!currentValue ||\r\n          typeof currentValue !== 'object' ||\r\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\r\n      ) {\r\n        return false;\r\n      }\r\n      for (var i = 0, len = keys.length; i < len; i++) {\r\n        key = keys[i];\r\n        // since clipPath is in the statefull cache list and the clipPath objects\r\n        // would be iterated as an object, this would lead to possible infinite recursion\r\n        // we do not want to compare those.\r\n        if (key === 'canvas' || key === 'group') {\r\n          continue;\r\n        }\r\n        if (!_isEqual(origValue[key], currentValue[key])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n    /**\r\n     * Returns true if object state (one of its state properties) was changed\r\n     * @param {String} [propertySet] optional name for the set of property we want to save\r\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\r\n     */\r\n    hasStateChanged: function(propertySet) {\r\n      propertySet = propertySet || originalSet;\r\n      var dashedPropertySet = '_' + propertySet;\r\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\r\n        return true;\r\n      }\r\n      return !_isEqual(this[dashedPropertySet], this, true);\r\n    },\r\n\r\n    /**\r\n     * Saves state of an object\r\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n     * @return {fabric.Object} thisArg\r\n     */\r\n    saveState: function(options) {\r\n      var propertySet = options && options.propertySet || originalSet,\r\n          destination = '_' + propertySet;\r\n      if (!this[destination]) {\r\n        return this.setupState(options);\r\n      }\r\n      saveProps(this, destination, this[propertySet]);\r\n      if (options && options.stateProperties) {\r\n        saveProps(this, destination, options.stateProperties);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Setups state of an object\r\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\r\n     * @return {fabric.Object} thisArg\r\n     */\r\n    setupState: function(options) {\r\n      options = options || { };\r\n      var propertySet = options.propertySet || originalSet;\r\n      options.propertySet = propertySet;\r\n      this['_' + propertySet] = { };\r\n      this.saveState(options);\r\n      return this;\r\n    }\r\n  });\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  var degreesToRadians = fabric.util.degreesToRadians;\r\n\r\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n    /**\r\n     * Determines which corner has been clicked\r\n     * @private\r\n     * @param {Object} pointer The pointer indicating the mouse position\r\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\r\n     */\r\n    _findTargetCorner: function(pointer, forTouch) {\r\n      // objects in group, anykind, are not self modificable,\r\n      // must not return an hovered corner.\r\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\r\n        return false;\r\n      }\r\n\r\n      var ex = pointer.x,\r\n          ey = pointer.y,\r\n          xPoints,\r\n          lines, keys = Object.keys(this.oCoords),\r\n          j = keys.length - 1, i;\r\n      this.__corner = 0;\r\n\r\n      // cycle in reverse order so we pick first the one on top\r\n      for (; j >= 0; j--) {\r\n        i = keys[j];\r\n        if (!this.isControlVisible(i)) {\r\n          continue;\r\n        }\r\n\r\n        lines = this._getImageLines(forTouch ? this.oCoords[i].touchCorner : this.oCoords[i].corner);\r\n        // // debugging\r\n        //\r\n        // this.canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\r\n        // this.canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\r\n        //\r\n        // this.canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\r\n        // this.canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\r\n        //\r\n        // this.canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\r\n        // this.canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\r\n        //\r\n        // this.canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\r\n        // this.canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\r\n\r\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\r\n        if (xPoints !== 0 && xPoints % 2 === 1) {\r\n          this.__corner = i;\r\n          return i;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Calls a function for each control. The function gets called,\r\n     * with the control, the object that is calling the iterator and the control's key\r\n     * @param {Function} fn function to iterate over the controls over\r\n     */\r\n    forEachControl: function(fn) {\r\n      for (var i in this.controls) {\r\n        fn(this.controls[i], i, this);\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Sets the coordinates of the draggable boxes in the corners of\r\n     * the image used to scale/rotate it.\r\n     * note: if we would switch to ROUND corner area, all of this would disappear.\r\n     * everything would resolve to a single point and a pythagorean theorem for the distance\r\n     * @private\r\n     */\r\n    _setCornerCoords: function() {\r\n      var coords = this.oCoords;\r\n\r\n      for (var control in coords) {\r\n        var controlObject = this.controls[control];\r\n        coords[control].corner = controlObject.calcCornerCoords(\r\n          this.angle, this.cornerSize, coords[control].x, coords[control].y, false);\r\n        coords[control].touchCorner = controlObject.calcCornerCoords(\r\n          this.angle, this.touchCornerSize, coords[control].x, coords[control].y, true);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Draws a colored layer behind the object, inside its selection borders.\r\n     * Requires public options: padding, selectionBackgroundColor\r\n     * this function is called when the context is transformed\r\n     * has checks to be skipped when the object is on a staticCanvas\r\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    drawSelectionBackground: function(ctx) {\r\n      if (!this.selectionBackgroundColor ||\r\n        (this.canvas && !this.canvas.interactive) ||\r\n        (this.canvas && this.canvas._activeObject !== this)\r\n      ) {\r\n        return this;\r\n      }\r\n      ctx.save();\r\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\r\n          vpt = this.canvas.viewportTransform;\r\n      ctx.translate(center.x, center.y);\r\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\r\n      ctx.rotate(degreesToRadians(this.angle));\r\n      ctx.fillStyle = this.selectionBackgroundColor;\r\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\r\n      ctx.restore();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Draws borders of an object's bounding box.\r\n     * Requires public properties: width, height\r\n     * Requires public options: padding, borderColor\r\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n     * @param {Object} styleOverride object to override the object style\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    drawBorders: function(ctx, styleOverride) {\r\n      styleOverride = styleOverride || {};\r\n      var wh = this._calculateCurrentDimensions(),\r\n          strokeWidth = this.borderScaleFactor,\r\n          width = wh.x + strokeWidth,\r\n          height = wh.y + strokeWidth,\r\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\r\n            styleOverride.hasControls : this.hasControls,\r\n          shouldStroke = false;\r\n\r\n      ctx.save();\r\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray);\r\n\r\n      ctx.strokeRect(\r\n        -width / 2,\r\n        -height / 2,\r\n        width,\r\n        height\r\n      );\r\n\r\n      if (hasControls) {\r\n        ctx.beginPath();\r\n        this.forEachControl(function(control, key, fabricObject) {\r\n          // in this moment, the ctx is centered on the object.\r\n          // width and height of the above function are the size of the bbox.\r\n          if (control.withConnection && control.getVisibility(fabricObject, key)) {\r\n            // reset movement for each control\r\n            shouldStroke = true;\r\n            ctx.moveTo(control.x * width, control.y * height);\r\n            ctx.lineTo(\r\n              control.x * width + control.offsetX,\r\n              control.y * height + control.offsetY\r\n            );\r\n          }\r\n        });\r\n        if (shouldStroke) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Draws borders of an object's bounding box when it is inside a group.\r\n     * Requires public properties: width, height\r\n     * Requires public options: padding, borderColor\r\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n     * @param {object} options object representing current object parameters\r\n     * @param {Object} styleOverride object to override the object style\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    drawBordersInGroup: function(ctx, options, styleOverride) {\r\n      styleOverride = styleOverride || {};\r\n      var bbox = fabric.util.sizeAfterTransform(this.width, this.height, options),\r\n          strokeWidth = this.strokeWidth,\r\n          strokeUniform = this.strokeUniform,\r\n          borderScaleFactor = this.borderScaleFactor,\r\n          width =\r\n            bbox.x + strokeWidth * (strokeUniform ? this.canvas.getZoom() : options.scaleX) + borderScaleFactor,\r\n          height =\r\n            bbox.y + strokeWidth * (strokeUniform ? this.canvas.getZoom() : options.scaleY) + borderScaleFactor;\r\n      ctx.save();\r\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray);\r\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\r\n      ctx.strokeRect(\r\n        -width / 2,\r\n        -height / 2,\r\n        width,\r\n        height\r\n      );\r\n\r\n      ctx.restore();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Draws corners of an object's bounding box.\r\n     * Requires public properties: width, height\r\n     * Requires public options: cornerSize, padding\r\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n     * @param {Object} styleOverride object to override the object style\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    drawControls: function(ctx, styleOverride) {\r\n      styleOverride = styleOverride || {};\r\n      ctx.save();\r\n      var retinaScaling = this.canvas.getRetinaScaling(), matrix, p;\r\n      ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\r\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\r\n      if (!this.transparentCorners) {\r\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\r\n      }\r\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray);\r\n      this.setCoords();\r\n      if (this.group) {\r\n        // fabricJS does not really support drawing controls inside groups,\r\n        // this piece of code here helps having at least the control in places.\r\n        // If an application needs to show some objects as selected because of some UI state\r\n        // can still call Object._renderControls() on any object they desire, independently of groups.\r\n        // using no padding, circular controls and hiding the rotating cursor is higly suggested,\r\n        matrix = this.group.calcTransformMatrix();\r\n      }\r\n      this.forEachControl(function(control, key, fabricObject) {\r\n        p = fabricObject.oCoords[key];\r\n        if (control.getVisibility(fabricObject, key)) {\r\n          if (matrix) {\r\n            p = fabric.util.transformPoint(p, matrix);\r\n          }\r\n          control.render(ctx, p.x, p.y, styleOverride, fabricObject);\r\n        }\r\n      });\r\n      ctx.restore();\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns true if the specified control is visible, false otherwise.\r\n     * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n     * @returns {Boolean} true if the specified control is visible, false otherwise\r\n     */\r\n    isControlVisible: function(controlKey) {\r\n      return this.controls[controlKey] && this.controls[controlKey].getVisibility(this, controlKey);\r\n    },\r\n\r\n    /**\r\n     * Sets the visibility of the specified control.\r\n     * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    setControlVisible: function(controlKey, visible) {\r\n      if (!this._controlsVisibility) {\r\n        this._controlsVisibility = {};\r\n      }\r\n      this._controlsVisibility[controlKey] = visible;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the visibility state of object controls.\r\n     * @param {Object} [options] Options object\r\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\r\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\r\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\r\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\r\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\r\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\r\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\r\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\r\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    setControlsVisibility: function(options) {\r\n      options || (options = { });\r\n\r\n      for (var p in options) {\r\n        this.setControlVisible(p, options[p]);\r\n      }\r\n      return this;\r\n    },\r\n\r\n\r\n    /**\r\n     * This callback function is called every time _discardActiveObject or _setActiveObject\r\n     * try to to deselect this object. If the function returns true, the process is cancelled\r\n     * @param {Object} [options] options sent from the upper functions\r\n     * @param {Event} [options.e] event if the process is generated by an event\r\n     */\r\n    onDeselect: function() {\r\n      // implemented by sub-classes, as needed.\r\n    },\r\n\r\n\r\n    /**\r\n     * This callback function is called every time _discardActiveObject or _setActiveObject\r\n     * try to to select this object. If the function returns true, the process is cancelled\r\n     * @param {Object} [options] options sent from the upper functions\r\n     * @param {Event} [options.e] event if the process is generated by an event\r\n     */\r\n    onSelect: function() {\r\n      // implemented by sub-classes, as needed.\r\n    }\r\n  });\r\n})();\r\n\r\n\r\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n  /**\r\n   * Animation duration (in ms) for fx* methods\r\n   * @type Number\r\n   * @default\r\n   */\r\n  FX_DURATION: 500,\r\n\r\n  /**\r\n   * Centers object horizontally with animation.\r\n   * @param {fabric.Object} object Object to center\r\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n   * @param {Function} [callbacks.onComplete] Invoked on completion\r\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n   * @return {fabric.Canvas} thisArg\r\n   * @chainable\r\n   */\r\n  fxCenterObjectH: function (object, callbacks) {\r\n    callbacks = callbacks || { };\r\n\r\n    var empty = function() { },\r\n        onComplete = callbacks.onComplete || empty,\r\n        onChange = callbacks.onChange || empty,\r\n        _this = this;\r\n\r\n    fabric.util.animate({\r\n      startValue: object.left,\r\n      endValue: this.getCenter().left,\r\n      duration: this.FX_DURATION,\r\n      onChange: function(value) {\r\n        object.set('left', value);\r\n        _this.requestRenderAll();\r\n        onChange();\r\n      },\r\n      onComplete: function() {\r\n        object.setCoords();\r\n        onComplete();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Centers object vertically with animation.\r\n   * @param {fabric.Object} object Object to center\r\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n   * @param {Function} [callbacks.onComplete] Invoked on completion\r\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n   * @return {fabric.Canvas} thisArg\r\n   * @chainable\r\n   */\r\n  fxCenterObjectV: function (object, callbacks) {\r\n    callbacks = callbacks || { };\r\n\r\n    var empty = function() { },\r\n        onComplete = callbacks.onComplete || empty,\r\n        onChange = callbacks.onChange || empty,\r\n        _this = this;\r\n\r\n    fabric.util.animate({\r\n      startValue: object.top,\r\n      endValue: this.getCenter().top,\r\n      duration: this.FX_DURATION,\r\n      onChange: function(value) {\r\n        object.set('top', value);\r\n        _this.requestRenderAll();\r\n        onChange();\r\n      },\r\n      onComplete: function() {\r\n        object.setCoords();\r\n        onComplete();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Same as `fabric.Canvas#remove` but animated\r\n   * @param {fabric.Object} object Object to remove\r\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\r\n   * @param {Function} [callbacks.onComplete] Invoked on completion\r\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n   * @return {fabric.Canvas} thisArg\r\n   * @chainable\r\n   */\r\n  fxRemove: function (object, callbacks) {\r\n    callbacks = callbacks || { };\r\n\r\n    var empty = function() { },\r\n        onComplete = callbacks.onComplete || empty,\r\n        onChange = callbacks.onChange || empty,\r\n        _this = this;\r\n\r\n    fabric.util.animate({\r\n      startValue: object.opacity,\r\n      endValue: 0,\r\n      duration: this.FX_DURATION,\r\n      onChange: function(value) {\r\n        object.set('opacity', value);\r\n        _this.requestRenderAll();\r\n        onChange();\r\n      },\r\n      onComplete: function () {\r\n        _this.remove(object);\r\n        onComplete();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n});\r\n\r\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n  /**\r\n   * Animates object's properties\r\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\r\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\r\n   * @return {fabric.Object} thisArg\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\r\n   * @chainable\r\n   *\r\n   * As object — multiple properties\r\n   *\r\n   * object.animate({ left: ..., top: ... });\r\n   * object.animate({ left: ..., top: ... }, { duration: ... });\r\n   *\r\n   * As string — one property\r\n   *\r\n   * object.animate('left', ...);\r\n   * object.animate('left', { duration: ... });\r\n   *\r\n   */\r\n  animate: function() {\r\n    if (arguments[0] && typeof arguments[0] === 'object') {\r\n      var propsToAnimate = [], prop, skipCallbacks;\r\n      for (prop in arguments[0]) {\r\n        propsToAnimate.push(prop);\r\n      }\r\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\r\n        prop = propsToAnimate[i];\r\n        skipCallbacks = i !== len - 1;\r\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\r\n      }\r\n    }\r\n    else {\r\n      this._animate.apply(this, arguments);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} property Property to animate\r\n   * @param {String} to Value to animate to\r\n   * @param {Object} [options] Options object\r\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\r\n   */\r\n  _animate: function(property, to, options, skipCallbacks) {\r\n    var _this = this, propPair;\r\n\r\n    to = to.toString();\r\n\r\n    if (!options) {\r\n      options = { };\r\n    }\r\n    else {\r\n      options = fabric.util.object.clone(options);\r\n    }\r\n\r\n    if (~property.indexOf('.')) {\r\n      propPair = property.split('.');\r\n    }\r\n\r\n    var propIsColor =\r\n      _this.colorProperties.indexOf(property) > -1 ||\r\n      (propPair && _this.colorProperties.indexOf(propPair[1]) > -1);\r\n\r\n    var currentValue = propPair\r\n      ? this.get(propPair[0])[propPair[1]]\r\n      : this.get(property);\r\n\r\n    if (!('from' in options)) {\r\n      options.from = currentValue;\r\n    }\r\n\r\n    if (!propIsColor) {\r\n      if (~to.indexOf('=')) {\r\n        to = currentValue + parseFloat(to.replace('=', ''));\r\n      }\r\n      else {\r\n        to = parseFloat(to);\r\n      }\r\n    }\r\n\r\n    var _options = {\r\n      startValue: options.from,\r\n      endValue: to,\r\n      byValue: options.by,\r\n      easing: options.easing,\r\n      duration: options.duration,\r\n      abort: options.abort && function(value, valueProgress, timeProgress) {\r\n        return options.abort.call(_this, value, valueProgress, timeProgress);\r\n      },\r\n      onChange: function (value, valueProgress, timeProgress) {\r\n        if (propPair) {\r\n          _this[propPair[0]][propPair[1]] = value;\r\n        }\r\n        else {\r\n          _this.set(property, value);\r\n        }\r\n        if (skipCallbacks) {\r\n          return;\r\n        }\r\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\r\n      },\r\n      onComplete: function (value, valueProgress, timeProgress) {\r\n        if (skipCallbacks) {\r\n          return;\r\n        }\r\n\r\n        _this.setCoords();\r\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\r\n      }\r\n    };\r\n\r\n    if (propIsColor) {\r\n      return fabric.util.animateColor(_options.startValue, _options.endValue, _options.duration, _options);\r\n    }\r\n    else {\r\n      return fabric.util.animate(_options);\r\n    }\r\n  }\r\n});\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend,\r\n      clone = fabric.util.object.clone,\r\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 };\r\n\r\n  if (fabric.Line) {\r\n    fabric.warn('fabric.Line is already defined');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Line class\r\n   * @class fabric.Line\r\n   * @extends fabric.Object\r\n   * @see {@link fabric.Line#initialize} for constructor definition\r\n   */\r\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'line',\r\n\r\n    /**\r\n     * x value or first line edge\r\n     * @type Number\r\n     * @default\r\n     */\r\n    x1: 0,\r\n\r\n    /**\r\n     * y value or first line edge\r\n     * @type Number\r\n     * @default\r\n     */\r\n    y1: 0,\r\n\r\n    /**\r\n     * x value or second line edge\r\n     * @type Number\r\n     * @default\r\n     */\r\n    x2: 0,\r\n\r\n    /**\r\n     * y value or second line edge\r\n     * @type Number\r\n     * @default\r\n     */\r\n    y2: 0,\r\n\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Array} [points] Array of points\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.Line} thisArg\r\n     */\r\n    initialize: function(points, options) {\r\n      if (!points) {\r\n        points = [0, 0, 0, 0];\r\n      }\r\n\r\n      this.callSuper('initialize', options);\r\n\r\n      this.set('x1', points[0]);\r\n      this.set('y1', points[1]);\r\n      this.set('x2', points[2]);\r\n      this.set('y2', points[3]);\r\n\r\n      this._setWidthHeight(options);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [options] Options\r\n     */\r\n    _setWidthHeight: function(options) {\r\n      options || (options = { });\r\n\r\n      this.width = Math.abs(this.x2 - this.x1);\r\n      this.height = Math.abs(this.y2 - this.y1);\r\n\r\n      this.left = 'left' in options\r\n        ? options.left\r\n        : this._getLeftToOriginX();\r\n\r\n      this.top = 'top' in options\r\n        ? options.top\r\n        : this._getTopToOriginY();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} key\r\n     * @param {*} value\r\n     */\r\n    _set: function(key, value) {\r\n      this.callSuper('_set', key, value);\r\n      if (typeof coordProps[key] !== 'undefined') {\r\n        this._setWidthHeight();\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\r\n     */\r\n    _getLeftToOriginX: makeEdgeToOriginGetter(\r\n      { // property names\r\n        origin: 'originX',\r\n        axis1: 'x1',\r\n        axis2: 'x2',\r\n        dimension: 'width'\r\n      },\r\n      { // possible values of origin\r\n        nearest: 'left',\r\n        center: 'center',\r\n        farthest: 'right'\r\n      }\r\n    ),\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\r\n     */\r\n    _getTopToOriginY: makeEdgeToOriginGetter(\r\n      { // property names\r\n        origin: 'originY',\r\n        axis1: 'y1',\r\n        axis2: 'y2',\r\n        dimension: 'height'\r\n      },\r\n      { // possible values of origin\r\n        nearest: 'top',\r\n        center: 'center',\r\n        farthest: 'bottom'\r\n      }\r\n    ),\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      ctx.beginPath();\r\n\r\n\r\n      var p = this.calcLinePoints();\r\n      ctx.moveTo(p.x1, p.y1);\r\n      ctx.lineTo(p.x2, p.y2);\r\n\r\n      ctx.lineWidth = this.strokeWidth;\r\n\r\n      // TODO: test this\r\n      // make sure setting \"fill\" changes color of a line\r\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\r\n      var origStrokeStyle = ctx.strokeStyle;\r\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\r\n      this.stroke && this._renderStroke(ctx);\r\n      ctx.strokeStyle = origStrokeStyle;\r\n    },\r\n\r\n    /**\r\n     * This function is an helper for svg import. it returns the center of the object in the svg\r\n     * untransformed coordinates\r\n     * @private\r\n     * @return {Object} center point from element coordinates\r\n     */\r\n    _findCenterFromElement: function() {\r\n      return {\r\n        x: (this.x1 + this.x2) / 2,\r\n        y: (this.y1 + this.y2) / 2,\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @method toObject\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\r\n    },\r\n\r\n    /*\r\n     * Calculate object dimensions from its properties\r\n     * @private\r\n     */\r\n    _getNonTransformedDimensions: function() {\r\n      var dim = this.callSuper('_getNonTransformedDimensions');\r\n      if (this.strokeLineCap === 'butt') {\r\n        if (this.width === 0) {\r\n          dim.y -= this.strokeWidth;\r\n        }\r\n        if (this.height === 0) {\r\n          dim.x -= this.strokeWidth;\r\n        }\r\n      }\r\n      return dim;\r\n    },\r\n\r\n    /**\r\n     * Recalculates line points given width and height\r\n     * @private\r\n     */\r\n    calcLinePoints: function() {\r\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\r\n          yMult = this.y1 <= this.y2 ? -1 : 1,\r\n          x1 = (xMult * this.width * 0.5),\r\n          y1 = (yMult * this.height * 0.5),\r\n          x2 = (xMult * this.width * -0.5),\r\n          y2 = (yMult * this.height * -0.5);\r\n\r\n      return {\r\n        x1: x1,\r\n        x2: x2,\r\n        y1: y1,\r\n        y2: y2\r\n      };\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      var p = this.calcLinePoints();\r\n      return [\r\n        '<line ', 'COMMON_PARTS',\r\n        'x1=\"', p.x1,\r\n        '\" y1=\"', p.y1,\r\n        '\" x2=\"', p.x2,\r\n        '\" y2=\"', p.y2,\r\n        '\" />\\n'\r\n      ];\r\n    },\r\n    /* _TO_SVG_END_ */\r\n  });\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\r\n   * @static\r\n   * @memberOf fabric.Line\r\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\r\n   */\r\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\r\n\r\n  /**\r\n   * Returns fabric.Line instance from an SVG element\r\n   * @static\r\n   * @memberOf fabric.Line\r\n   * @param {SVGElement} element Element to parse\r\n   * @param {Object} [options] Options object\r\n   * @param {Function} [callback] callback function invoked after parsing\r\n   */\r\n  fabric.Line.fromElement = function(element, callback, options) {\r\n    options = options || { };\r\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\r\n        points = [\r\n          parsedAttributes.x1 || 0,\r\n          parsedAttributes.y1 || 0,\r\n          parsedAttributes.x2 || 0,\r\n          parsedAttributes.y2 || 0\r\n        ];\r\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\r\n  };\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns fabric.Line instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Line\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] invoked with new instance as first argument\r\n   */\r\n  fabric.Line.fromObject = function(object, callback) {\r\n    function _callback(instance) {\r\n      delete instance.points;\r\n      callback && callback(instance);\r\n    };\r\n    var options = clone(object, true);\r\n    options.points = [object.x1, object.y1, object.x2, object.y2];\r\n    fabric.Object._fromObject('Line', options, _callback, 'points');\r\n  };\r\n\r\n  /**\r\n   * Produces a function that calculates distance from canvas edge to Line origin.\r\n   */\r\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\r\n    var origin = propertyNames.origin,\r\n        axis1 = propertyNames.axis1,\r\n        axis2 = propertyNames.axis2,\r\n        dimension = propertyNames.dimension,\r\n        nearest = originValues.nearest,\r\n        center = originValues.center,\r\n        farthest = originValues.farthest;\r\n\r\n    return function() {\r\n      switch (this.get(origin)) {\r\n        case nearest:\r\n          return Math.min(this.get(axis1), this.get(axis2));\r\n        case center:\r\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\r\n        case farthest:\r\n          return Math.max(this.get(axis1), this.get(axis2));\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      pi = Math.PI;\r\n\r\n  if (fabric.Circle) {\r\n    fabric.warn('fabric.Circle is already defined.');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Circle class\r\n   * @class fabric.Circle\r\n   * @extends fabric.Object\r\n   * @see {@link fabric.Circle#initialize} for constructor definition\r\n   */\r\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'circle',\r\n\r\n    /**\r\n     * Radius of this circle\r\n     * @type Number\r\n     * @default\r\n     */\r\n    radius: 0,\r\n\r\n    /**\r\n     * Start angle of the circle, moving clockwise\r\n     * deprecated type, this should be in degree, this was an oversight.\r\n     * probably will change to degrees in next major version\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    startAngle: 0,\r\n\r\n    /**\r\n     * End angle of the circle\r\n     * deprecated type, this should be in degree, this was an oversight.\r\n     * probably will change to degrees in next major version\r\n     * @type Number\r\n     * @default 2Pi\r\n     */\r\n    endAngle: pi * 2,\r\n\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} key\r\n     * @param {*} value\r\n     * @return {fabric.Circle} thisArg\r\n     */\r\n    _set: function(key, value) {\r\n      this.callSuper('_set', key, value);\r\n\r\n      if (key === 'radius') {\r\n        this.setRadius(value);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      var svgString, x = 0, y = 0,\r\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\r\n\r\n      if (angle === 0) {\r\n        svgString = [\r\n          '<circle ', 'COMMON_PARTS',\r\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\r\n          'r=\"', this.radius,\r\n          '\" />\\n'\r\n        ];\r\n      }\r\n      else {\r\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\r\n            startY = fabric.util.sin(this.startAngle) * this.radius,\r\n            endX = fabric.util.cos(this.endAngle) * this.radius,\r\n            endY = fabric.util.sin(this.endAngle) * this.radius,\r\n            largeFlag = angle > pi ? '1' : '0';\r\n        svgString = [\r\n          '<path d=\"M ' + startX + ' ' + startY,\r\n          ' A ' + this.radius + ' ' + this.radius,\r\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\r\n          '\" ', 'COMMON_PARTS', ' />\\n'\r\n        ];\r\n      }\r\n      return svgString;\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        0,\r\n        0,\r\n        this.radius,\r\n        this.startAngle,\r\n        this.endAngle, false);\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n\r\n    /**\r\n     * Returns horizontal radius of an object (according to how an object is scaled)\r\n     * @return {Number}\r\n     */\r\n    getRadiusX: function() {\r\n      return this.get('radius') * this.get('scaleX');\r\n    },\r\n\r\n    /**\r\n     * Returns vertical radius of an object (according to how an object is scaled)\r\n     * @return {Number}\r\n     */\r\n    getRadiusY: function() {\r\n      return this.get('radius') * this.get('scaleY');\r\n    },\r\n\r\n    /**\r\n     * Sets radius of an object (and updates width accordingly)\r\n     * @return {fabric.Circle} thisArg\r\n     */\r\n    setRadius: function(value) {\r\n      this.radius = value;\r\n      return this.set('width', value * 2).set('height', value * 2);\r\n    },\r\n  });\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\r\n   * @static\r\n   * @memberOf fabric.Circle\r\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\r\n   */\r\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\r\n\r\n  /**\r\n   * Returns {@link fabric.Circle} instance from an SVG element\r\n   * @static\r\n   * @memberOf fabric.Circle\r\n   * @param {SVGElement} element Element to parse\r\n   * @param {Function} [callback] Options callback invoked after parsing is finished\r\n   * @param {Object} [options] Options object\r\n   * @throws {Error} If value of `r` attribute is missing or invalid\r\n   */\r\n  fabric.Circle.fromElement = function(element, callback) {\r\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\r\n\r\n    if (!isValidRadius(parsedAttributes)) {\r\n      throw new Error('value of `r` attribute is required and can not be negative');\r\n    }\r\n\r\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\r\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\r\n    callback(new fabric.Circle(parsedAttributes));\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function isValidRadius(attributes) {\r\n    return (('radius' in attributes) && (attributes.radius >= 0));\r\n  }\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns {@link fabric.Circle} instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Circle\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] invoked with new instance as first argument\r\n   * @return {void}\r\n   */\r\n  fabric.Circle.fromObject = function(object, callback) {\r\n    fabric.Object._fromObject('Circle', object, callback);\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { });\r\n\r\n  if (fabric.Triangle) {\r\n    fabric.warn('fabric.Triangle is already defined');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Triangle class\r\n   * @class fabric.Triangle\r\n   * @extends fabric.Object\r\n   * @return {fabric.Triangle} thisArg\r\n   * @see {@link fabric.Triangle#initialize} for constructor definition\r\n   */\r\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'triangle',\r\n\r\n    /**\r\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\r\n     * @type Number\r\n     * @default\r\n     */\r\n    width: 100,\r\n\r\n    /**\r\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\r\n     * @type Number\r\n     * @default\r\n     */\r\n    height: 100,\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      var widthBy2 = this.width / 2,\r\n          heightBy2 = this.height / 2;\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(-widthBy2, heightBy2);\r\n      ctx.lineTo(0, -heightBy2);\r\n      ctx.lineTo(widthBy2, heightBy2);\r\n      ctx.closePath();\r\n\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      var widthBy2 = this.width / 2,\r\n          heightBy2 = this.height / 2,\r\n          points = [\r\n            -widthBy2 + ' ' + heightBy2,\r\n            '0 ' + -heightBy2,\r\n            widthBy2 + ' ' + heightBy2\r\n          ].join(',');\r\n      return [\r\n        '<polygon ', 'COMMON_PARTS',\r\n        'points=\"', points,\r\n        '\" />'\r\n      ];\r\n    },\r\n    /* _TO_SVG_END_ */\r\n  });\r\n\r\n  /**\r\n   * Returns {@link fabric.Triangle} instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Triangle\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] invoked with new instance as first argument\r\n   */\r\n  fabric.Triangle.fromObject = function(object, callback) {\r\n    return fabric.Object._fromObject('Triangle', object, callback);\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      piBy2   = Math.PI * 2;\r\n\r\n  if (fabric.Ellipse) {\r\n    fabric.warn('fabric.Ellipse is already defined.');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Ellipse class\r\n   * @class fabric.Ellipse\r\n   * @extends fabric.Object\r\n   * @return {fabric.Ellipse} thisArg\r\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\r\n   */\r\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'ellipse',\r\n\r\n    /**\r\n     * Horizontal radius\r\n     * @type Number\r\n     * @default\r\n     */\r\n    rx:   0,\r\n\r\n    /**\r\n     * Vertical radius\r\n     * @type Number\r\n     * @default\r\n     */\r\n    ry:   0,\r\n\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.Ellipse} thisArg\r\n     */\r\n    initialize: function(options) {\r\n      this.callSuper('initialize', options);\r\n      this.set('rx', options && options.rx || 0);\r\n      this.set('ry', options && options.ry || 0);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} key\r\n     * @param {*} value\r\n     * @return {fabric.Ellipse} thisArg\r\n     */\r\n    _set: function(key, value) {\r\n      this.callSuper('_set', key, value);\r\n      switch (key) {\r\n\r\n        case 'rx':\r\n          this.rx = value;\r\n          this.set('width', value * 2);\r\n          break;\r\n\r\n        case 'ry':\r\n          this.ry = value;\r\n          this.set('height', value * 2);\r\n          break;\r\n\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns horizontal radius of an object (according to how an object is scaled)\r\n     * @return {Number}\r\n     */\r\n    getRx: function() {\r\n      return this.get('rx') * this.get('scaleX');\r\n    },\r\n\r\n    /**\r\n     * Returns Vertical radius of an object (according to how an object is scaled)\r\n     * @return {Number}\r\n     */\r\n    getRy: function() {\r\n      return this.get('ry') * this.get('scaleY');\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      return [\r\n        '<ellipse ', 'COMMON_PARTS',\r\n        'cx=\"0\" cy=\"0\" ',\r\n        'rx=\"', this.rx,\r\n        '\" ry=\"', this.ry,\r\n        '\" />\\n'\r\n      ];\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      ctx.beginPath();\r\n      ctx.save();\r\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\r\n      ctx.arc(\r\n        0,\r\n        0,\r\n        this.rx,\r\n        0,\r\n        piBy2,\r\n        false);\r\n      ctx.restore();\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n  });\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\r\n   * @static\r\n   * @memberOf fabric.Ellipse\r\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\r\n   */\r\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\r\n\r\n  /**\r\n   * Returns {@link fabric.Ellipse} instance from an SVG element\r\n   * @static\r\n   * @memberOf fabric.Ellipse\r\n   * @param {SVGElement} element Element to parse\r\n   * @param {Function} [callback] Options callback invoked after parsing is finished\r\n   * @return {fabric.Ellipse}\r\n   */\r\n  fabric.Ellipse.fromElement = function(element, callback) {\r\n\r\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\r\n\r\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\r\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\r\n    callback(new fabric.Ellipse(parsedAttributes));\r\n  };\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns {@link fabric.Ellipse} instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Ellipse\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] invoked with new instance as first argument\r\n   * @return {void}\r\n   */\r\n  fabric.Ellipse.fromObject = function(object, callback) {\r\n    fabric.Object._fromObject('Ellipse', object, callback);\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend;\r\n\r\n  if (fabric.Rect) {\r\n    fabric.warn('fabric.Rect is already defined');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Rectangle class\r\n   * @class fabric.Rect\r\n   * @extends fabric.Object\r\n   * @return {fabric.Rect} thisArg\r\n   * @see {@link fabric.Rect#initialize} for constructor definition\r\n   */\r\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\r\n\r\n    /**\r\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n     * as well as for history (undo/redo) purposes\r\n     * @type Array\r\n     */\r\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'rect',\r\n\r\n    /**\r\n     * Horizontal border radius\r\n     * @type Number\r\n     * @default\r\n     */\r\n    rx:   0,\r\n\r\n    /**\r\n     * Vertical border radius\r\n     * @type Number\r\n     * @default\r\n     */\r\n    ry:   0,\r\n\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     * @return {Object} thisArg\r\n     */\r\n    initialize: function(options) {\r\n      this.callSuper('initialize', options);\r\n      this._initRxRy();\r\n    },\r\n\r\n    /**\r\n     * Initializes rx/ry attributes\r\n     * @private\r\n     */\r\n    _initRxRy: function() {\r\n      if (this.rx && !this.ry) {\r\n        this.ry = this.rx;\r\n      }\r\n      else if (this.ry && !this.rx) {\r\n        this.rx = this.ry;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n\r\n      // 1x1 case (used in spray brush) optimization was removed because\r\n      // with caching and higher zoom level this makes more damage than help\r\n\r\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\r\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\r\n          w = this.width,\r\n          h = this.height,\r\n          x = -this.width / 2,\r\n          y = -this.height / 2,\r\n          isRounded = rx !== 0 || ry !== 0,\r\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\r\n          k = 1 - 0.5522847498;\r\n      ctx.beginPath();\r\n\r\n      ctx.moveTo(x + rx, y);\r\n\r\n      ctx.lineTo(x + w - rx, y);\r\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\r\n\r\n      ctx.lineTo(x + w, y + h - ry);\r\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\r\n\r\n      ctx.lineTo(x + rx, y + h);\r\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\r\n\r\n      ctx.lineTo(x, y + ry);\r\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\r\n\r\n      ctx.closePath();\r\n\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      var x = -this.width / 2, y = -this.height / 2;\r\n      return [\r\n        '<rect ', 'COMMON_PARTS',\r\n        'x=\"', x, '\" y=\"', y,\r\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\r\n        '\" width=\"', this.width, '\" height=\"', this.height,\r\n        '\" />\\n'\r\n      ];\r\n    },\r\n    /* _TO_SVG_END_ */\r\n  });\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\r\n   * @static\r\n   * @memberOf fabric.Rect\r\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\r\n   */\r\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\r\n\r\n  /**\r\n   * Returns {@link fabric.Rect} instance from an SVG element\r\n   * @static\r\n   * @memberOf fabric.Rect\r\n   * @param {SVGElement} element Element to parse\r\n   * @param {Function} callback callback function invoked after parsing\r\n   * @param {Object} [options] Options object\r\n   */\r\n  fabric.Rect.fromElement = function(element, callback, options) {\r\n    if (!element) {\r\n      return callback(null);\r\n    }\r\n    options = options || { };\r\n\r\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\r\n    parsedAttributes.left = parsedAttributes.left || 0;\r\n    parsedAttributes.top  = parsedAttributes.top  || 0;\r\n    parsedAttributes.height  = parsedAttributes.height || 0;\r\n    parsedAttributes.width  = parsedAttributes.width || 0;\r\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\r\n    callback(rect);\r\n  };\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns {@link fabric.Rect} instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Rect\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\r\n   */\r\n  fabric.Rect.fromObject = function(object, callback) {\r\n    return fabric.Object._fromObject('Rect', object, callback);\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend,\r\n      min = fabric.util.array.min,\r\n      max = fabric.util.array.max,\r\n      toFixed = fabric.util.toFixed;\r\n\r\n  if (fabric.Polyline) {\r\n    fabric.warn('fabric.Polyline is already defined');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Polyline class\r\n   * @class fabric.Polyline\r\n   * @extends fabric.Object\r\n   * @see {@link fabric.Polyline#initialize} for constructor definition\r\n   */\r\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'polyline',\r\n\r\n    /**\r\n     * Points array\r\n     * @type Array\r\n     * @default\r\n     */\r\n    points: null,\r\n\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Array} points Array of points (where each point is an object with x and y)\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.Polyline} thisArg\r\n     * @example\r\n     * var poly = new fabric.Polyline([\r\n     *     { x: 10, y: 10 },\r\n     *     { x: 50, y: 30 },\r\n     *     { x: 40, y: 70 },\r\n     *     { x: 60, y: 50 },\r\n     *     { x: 100, y: 150 },\r\n     *     { x: 40, y: 100 }\r\n     *   ], {\r\n     *   stroke: 'red',\r\n     *   left: 100,\r\n     *   top: 100\r\n     * });\r\n     */\r\n    initialize: function(points, options) {\r\n      options = options || {};\r\n      this.points = points || [];\r\n      this.callSuper('initialize', options);\r\n      this._setPositionDimensions(options);\r\n    },\r\n\r\n    _setPositionDimensions: function(options) {\r\n      var calcDim = this._calcDimensions(options), correctLeftTop;\r\n      this.width = calcDim.width;\r\n      this.height = calcDim.height;\r\n      if (!options.fromSVG) {\r\n        correctLeftTop = this.translateToGivenOrigin(\r\n          { x: calcDim.left - this.strokeWidth / 2, y: calcDim.top - this.strokeWidth / 2 },\r\n          'left',\r\n          'top',\r\n          this.originX,\r\n          this.originY\r\n        );\r\n      }\r\n      if (typeof options.left === 'undefined') {\r\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\r\n      }\r\n      if (typeof options.top === 'undefined') {\r\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\r\n      }\r\n      this.pathOffset = {\r\n        x: calcDim.left + this.width / 2,\r\n        y: calcDim.top + this.height / 2\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Calculate the polygon min and max point from points array,\r\n     * returning an object with left, top, width, height to measure the\r\n     * polygon size\r\n     * @return {Object} object.left X coordinate of the polygon leftmost point\r\n     * @return {Object} object.top Y coordinate of the polygon topmost point\r\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\r\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\r\n     * @private\r\n     */\r\n    _calcDimensions: function() {\r\n\r\n      var points = this.points,\r\n          minX = min(points, 'x') || 0,\r\n          minY = min(points, 'y') || 0,\r\n          maxX = max(points, 'x') || 0,\r\n          maxY = max(points, 'y') || 0,\r\n          width = (maxX - minX),\r\n          height = (maxY - minY);\r\n\r\n      return {\r\n        left: minX,\r\n        top: minY,\r\n        width: width,\r\n        height: height\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      return extend(this.callSuper('toObject', propertiesToInclude), {\r\n        points: this.points.concat()\r\n      });\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\r\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n\r\n      for (var i = 0, len = this.points.length; i < len; i++) {\r\n        points.push(\r\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\r\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\r\n        );\r\n      }\r\n      return [\r\n        '<' + this.type + ' ', 'COMMON_PARTS',\r\n        'points=\"', points.join(''),\r\n        '\" />\\n'\r\n      ];\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    commonRender: function(ctx) {\r\n      var point, len = this.points.length,\r\n          x = this.pathOffset.x,\r\n          y = this.pathOffset.y;\r\n\r\n      if (!len || isNaN(this.points[len - 1].y)) {\r\n        // do not draw if no points or odd points\r\n        // NaN comes from parseFloat of a empty string in parser\r\n        return false;\r\n      }\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\r\n      for (var i = 0; i < len; i++) {\r\n        point = this.points[i];\r\n        ctx.lineTo(point.x - x, point.y - y);\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      if (!this.commonRender(ctx)) {\r\n        return;\r\n      }\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n\r\n    /**\r\n     * Returns complexity of an instance\r\n     * @return {Number} complexity of this instance\r\n     */\r\n    complexity: function() {\r\n      return this.get('points').length;\r\n    }\r\n  });\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\r\n   * @static\r\n   * @memberOf fabric.Polyline\r\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\r\n   */\r\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n  /**\r\n   * Returns fabric.Polyline instance from an SVG element\r\n   * @static\r\n   * @memberOf fabric.Polyline\r\n   * @param {SVGElement} element Element to parser\r\n   * @param {Function} callback callback function invoked after parsing\r\n   * @param {Object} [options] Options object\r\n   */\r\n  fabric.Polyline.fromElementGenerator = function(_class) {\r\n    return function(element, callback, options) {\r\n      if (!element) {\r\n        return callback(null);\r\n      }\r\n      options || (options = { });\r\n\r\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\r\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\r\n      parsedAttributes.fromSVG = true;\r\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\r\n    };\r\n  };\r\n\r\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\r\n\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns fabric.Polyline instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Polyline\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n   */\r\n  fabric.Polyline.fromObject = function(object, callback) {\r\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { });\r\n\r\n  if (fabric.Polygon) {\r\n    fabric.warn('fabric.Polygon is already defined');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Polygon class\r\n   * @class fabric.Polygon\r\n   * @extends fabric.Polyline\r\n   * @see {@link fabric.Polygon#initialize} for constructor definition\r\n   */\r\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'polygon',\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      if (!this.commonRender(ctx)) {\r\n        return;\r\n      }\r\n      ctx.closePath();\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n\r\n  });\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\r\n   * @static\r\n   * @memberOf fabric.Polygon\r\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\r\n   */\r\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\r\n\r\n  /**\r\n   * Returns {@link fabric.Polygon} instance from an SVG element\r\n   * @static\r\n   * @memberOf fabric.Polygon\r\n   * @param {SVGElement} element Element to parse\r\n   * @param {Function} callback callback function invoked after parsing\r\n   * @param {Object} [options] Options object\r\n   */\r\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns fabric.Polygon instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Polygon\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n   * @return {void}\r\n   */\r\n  fabric.Polygon.fromObject = function(object, callback) {\r\n    fabric.Object._fromObject('Polygon', object, callback, 'points');\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      min = fabric.util.array.min,\r\n      max = fabric.util.array.max,\r\n      extend = fabric.util.object.extend,\r\n      _toString = Object.prototype.toString,\r\n      toFixed = fabric.util.toFixed;\r\n\r\n  if (fabric.Path) {\r\n    fabric.warn('fabric.Path is already defined');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Path class\r\n   * @class fabric.Path\r\n   * @extends fabric.Object\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\r\n   * @see {@link fabric.Path#initialize} for constructor definition\r\n   */\r\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'path',\r\n\r\n    /**\r\n     * Array of path points\r\n     * @type Array\r\n     * @default\r\n     */\r\n    path: null,\r\n\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\r\n\r\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.Path} thisArg\r\n     */\r\n    initialize: function(path, options) {\r\n      options = options || { };\r\n      this.callSuper('initialize', options);\r\n      if (!path) {\r\n        path = [];\r\n      }\r\n\r\n      var fromArray = _toString.call(path) === '[object Array]';\r\n\r\n      this.path = fabric.util.makePathSimpler(\r\n        fromArray ? path : fabric.util.parsePath(path)\r\n      );\r\n\r\n      if (!this.path) {\r\n        return;\r\n      }\r\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx context to render path on\r\n     */\r\n    _renderPathCommands: function(ctx) {\r\n      var current, // current instruction\r\n          subpathStartX = 0,\r\n          subpathStartY = 0,\r\n          x = 0, // current x\r\n          y = 0, // current y\r\n          controlX = 0, // current control point x\r\n          controlY = 0, // current control point y\r\n          l = -this.pathOffset.x,\r\n          t = -this.pathOffset.y;\r\n\r\n      ctx.beginPath();\r\n\r\n      for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n        current = this.path[i];\r\n\r\n        switch (current[0]) { // first letter\r\n\r\n          case 'L': // lineto, absolute\r\n            x = current[1];\r\n            y = current[2];\r\n            ctx.lineTo(x + l, y + t);\r\n            break;\r\n\r\n          case 'M': // moveTo, absolute\r\n            x = current[1];\r\n            y = current[2];\r\n            subpathStartX = x;\r\n            subpathStartY = y;\r\n            ctx.moveTo(x + l, y + t);\r\n            break;\r\n\r\n          case 'C': // bezierCurveTo, absolute\r\n            x = current[5];\r\n            y = current[6];\r\n            controlX = current[3];\r\n            controlY = current[4];\r\n            ctx.bezierCurveTo(\r\n              current[1] + l,\r\n              current[2] + t,\r\n              controlX + l,\r\n              controlY + t,\r\n              x + l,\r\n              y + t\r\n            );\r\n            break;\r\n\r\n          case 'Q': // quadraticCurveTo, absolute\r\n            ctx.quadraticCurveTo(\r\n              current[1] + l,\r\n              current[2] + t,\r\n              current[3] + l,\r\n              current[4] + t\r\n            );\r\n            x = current[3];\r\n            y = current[4];\r\n            controlX = current[1];\r\n            controlY = current[2];\r\n            break;\r\n\r\n          case 'z':\r\n          case 'Z':\r\n            x = subpathStartX;\r\n            y = subpathStartY;\r\n            ctx.closePath();\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx context to render path on\r\n     */\r\n    _render: function(ctx) {\r\n      this._renderPathCommands(ctx);\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n\r\n    /**\r\n     * Returns string representation of an instance\r\n     * @return {String} string representation of an instance\r\n     */\r\n    toString: function() {\r\n      return '#<fabric.Path (' + this.complexity() +\r\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      return extend(this.callSuper('toObject', propertiesToInclude), {\r\n        path: this.path.map(function(item) { return item.slice(); }),\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns dataless object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toDatalessObject: function(propertiesToInclude) {\r\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\r\n      if (o.sourcePath) {\r\n        delete o.path;\r\n      }\r\n      return o;\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      var path = fabric.util.joinPath(this.path);\r\n      return [\r\n        '<path ', 'COMMON_PARTS',\r\n        'd=\"', path,\r\n        '\" stroke-linecap=\"round\" ',\r\n        '/>\\n'\r\n      ];\r\n    },\r\n\r\n    _getOffsetTransform: function() {\r\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\r\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\r\n          toFixed(-this.pathOffset.y, digits) + ')';\r\n    },\r\n\r\n    /**\r\n     * Returns svg clipPath representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    toClipPathSVG: function(reviver) {\r\n      var additionalTransform = this._getOffsetTransform();\r\n      return '\\t' + this._createBaseClipPathSVGMarkup(\r\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    toSVG: function(reviver) {\r\n      var additionalTransform = this._getOffsetTransform();\r\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    /**\r\n     * Returns number representation of an instance complexity\r\n     * @return {Number} complexity of this instance\r\n     */\r\n    complexity: function() {\r\n      return this.path.length;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _calcDimensions: function() {\r\n\r\n      var aX = [],\r\n          aY = [],\r\n          current, // current instruction\r\n          subpathStartX = 0,\r\n          subpathStartY = 0,\r\n          x = 0, // current x\r\n          y = 0, // current y\r\n          bounds;\r\n\r\n      for (var i = 0, len = this.path.length; i < len; ++i) {\r\n\r\n        current = this.path[i];\r\n\r\n        switch (current[0]) { // first letter\r\n\r\n          case 'L': // lineto, absolute\r\n            x = current[1];\r\n            y = current[2];\r\n            bounds = [];\r\n            break;\r\n\r\n          case 'M': // moveTo, absolute\r\n            x = current[1];\r\n            y = current[2];\r\n            subpathStartX = x;\r\n            subpathStartY = y;\r\n            bounds = [];\r\n            break;\r\n\r\n          case 'C': // bezierCurveTo, absolute\r\n            bounds = fabric.util.getBoundsOfCurve(x, y,\r\n              current[1],\r\n              current[2],\r\n              current[3],\r\n              current[4],\r\n              current[5],\r\n              current[6]\r\n            );\r\n            x = current[5];\r\n            y = current[6];\r\n            break;\r\n\r\n          case 'Q': // quadraticCurveTo, absolute\r\n            bounds = fabric.util.getBoundsOfCurve(x, y,\r\n              current[1],\r\n              current[2],\r\n              current[1],\r\n              current[2],\r\n              current[3],\r\n              current[4]\r\n            );\r\n            x = current[3];\r\n            y = current[4];\r\n            break;\r\n\r\n          case 'z':\r\n          case 'Z':\r\n            x = subpathStartX;\r\n            y = subpathStartY;\r\n            break;\r\n        }\r\n        bounds.forEach(function (point) {\r\n          aX.push(point.x);\r\n          aY.push(point.y);\r\n        });\r\n        aX.push(x);\r\n        aY.push(y);\r\n      }\r\n\r\n      var minX = min(aX) || 0,\r\n          minY = min(aY) || 0,\r\n          maxX = max(aX) || 0,\r\n          maxY = max(aY) || 0,\r\n          deltaX = maxX - minX,\r\n          deltaY = maxY - minY;\r\n\r\n      return {\r\n        left: minX,\r\n        top: minY,\r\n        width: deltaX,\r\n        height: deltaY\r\n      };\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Creates an instance of fabric.Path from an object\r\n   * @static\r\n   * @memberOf fabric.Path\r\n   * @param {Object} object\r\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\r\n   */\r\n  fabric.Path.fromObject = function(object, callback) {\r\n    if (typeof object.sourcePath === 'string') {\r\n      var pathUrl = object.sourcePath;\r\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\r\n        var path = elements[0];\r\n        path.setOptions(object);\r\n        callback && callback(path);\r\n      });\r\n    }\r\n    else {\r\n      fabric.Object._fromObject('Path', object, callback, 'path');\r\n    }\r\n  };\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\r\n   * @static\r\n   * @memberOf fabric.Path\r\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\r\n   */\r\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\r\n\r\n  /**\r\n   * Creates an instance of fabric.Path from an SVG <path> element\r\n   * @static\r\n   * @memberOf fabric.Path\r\n   * @param {SVGElement} element to parse\r\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\r\n   * @param {Object} [options] Options object\r\n   * @param {Function} [callback] Options callback invoked after parsing is finished\r\n   */\r\n  fabric.Path.fromElement = function(element, callback, options) {\r\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\r\n    parsedAttributes.fromSVG = true;\r\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\r\n  };\r\n  /* _FROM_SVG_END_ */\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      min = fabric.util.array.min,\r\n      max = fabric.util.array.max;\r\n\r\n  if (fabric.Group) {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Group class\r\n   * @class fabric.Group\r\n   * @extends fabric.Object\r\n   * @mixes fabric.Collection\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n   * @see {@link fabric.Group#initialize} for constructor definition\r\n   */\r\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'group',\r\n\r\n    /**\r\n     * Width of stroke\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeWidth: 0,\r\n\r\n    /**\r\n     * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    subTargetCheck: false,\r\n\r\n    /**\r\n     * Groups are container, do not render anything on theyr own, ence no cache properties\r\n     * @type Array\r\n     * @default\r\n     */\r\n    cacheProperties: [],\r\n\r\n    /**\r\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\r\n     * available setting this boolean to true.\r\n     * @type Boolean\r\n     * @since 2.0.0\r\n     * @default\r\n     */\r\n    useSetOnGroup: false,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} objects Group objects\r\n     * @param {Object} [options] Options object\r\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\r\n     * @return {Object} thisArg\r\n     */\r\n    initialize: function(objects, options, isAlreadyGrouped) {\r\n      options = options || {};\r\n      this._objects = [];\r\n      // if objects enclosed in a group have been grouped already,\r\n      // we cannot change properties of objects.\r\n      // Thus we need to set options to group without objects,\r\n      isAlreadyGrouped && this.callSuper('initialize', options);\r\n      this._objects = objects || [];\r\n      for (var i = this._objects.length; i--; ) {\r\n        this._objects[i].group = this;\r\n      }\r\n\r\n      if (!isAlreadyGrouped) {\r\n        var center = options && options.centerPoint;\r\n        // we want to set origins before calculating the bounding box.\r\n        // so that the topleft can be set with that in mind.\r\n        // if specific top and left are passed, are overwritten later\r\n        // with the callSuper('initialize', options)\r\n        if (options.originX !== undefined) {\r\n          this.originX = options.originX;\r\n        }\r\n        if (options.originY !== undefined) {\r\n          this.originY = options.originY;\r\n        }\r\n        // if coming from svg i do not want to calc bounds.\r\n        // i assume width and height are passed along options\r\n        center || this._calcBounds();\r\n        this._updateObjectsCoords(center);\r\n        delete options.centerPoint;\r\n        this.callSuper('initialize', options);\r\n      }\r\n      else {\r\n        this._updateObjectsACoords();\r\n      }\r\n\r\n      this.setCoords();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _updateObjectsACoords: function() {\r\n      var skipControls = true;\r\n      for (var i = this._objects.length; i--; ){\r\n        this._objects[i].setCoords(skipControls);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\r\n     */\r\n    _updateObjectsCoords: function(center) {\r\n      var center = center || this.getCenterPoint();\r\n      for (var i = this._objects.length; i--; ){\r\n        this._updateObjectCoords(this._objects[i], center);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} object\r\n     * @param {fabric.Point} center, current center of group.\r\n     */\r\n    _updateObjectCoords: function(object, center) {\r\n      var objectLeft = object.left,\r\n          objectTop = object.top,\r\n          skipControls = true;\r\n\r\n      object.set({\r\n        left: objectLeft - center.x,\r\n        top: objectTop - center.y\r\n      });\r\n      object.group = this;\r\n      object.setCoords(skipControls);\r\n    },\r\n\r\n    /**\r\n     * Returns string represenation of a group\r\n     * @return {String}\r\n     */\r\n    toString: function() {\r\n      return '#<fabric.Group: (' + this.complexity() + ')>';\r\n    },\r\n\r\n    /**\r\n     * Adds an object to a group; Then recalculates group's dimension, position.\r\n     * @param {Object} object\r\n     * @return {fabric.Group} thisArg\r\n     * @chainable\r\n     */\r\n    addWithUpdate: function(object) {\r\n      var nested = !!this.group;\r\n      this._restoreObjectsState();\r\n      fabric.util.resetObjectTransform(this);\r\n      if (object) {\r\n        if (nested) {\r\n          // if this group is inside another group, we need to pre transform the object\r\n          fabric.util.removeTransformFromObject(object, this.group.calcTransformMatrix());\r\n        }\r\n        this._objects.push(object);\r\n        object.group = this;\r\n        object._set('canvas', this.canvas);\r\n      }\r\n      this._calcBounds();\r\n      this._updateObjectsCoords();\r\n      this.dirty = true;\r\n      if (nested) {\r\n        this.group.addWithUpdate();\r\n      }\r\n      else {\r\n        this.setCoords();\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Removes an object from a group; Then recalculates group's dimension, position.\r\n     * @param {Object} object\r\n     * @return {fabric.Group} thisArg\r\n     * @chainable\r\n     */\r\n    removeWithUpdate: function(object) {\r\n      this._restoreObjectsState();\r\n      fabric.util.resetObjectTransform(this);\r\n\r\n      this.remove(object);\r\n      this._calcBounds();\r\n      this._updateObjectsCoords();\r\n      this.setCoords();\r\n      this.dirty = true;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _onObjectAdded: function(object) {\r\n      this.dirty = true;\r\n      object.group = this;\r\n      object._set('canvas', this.canvas);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _onObjectRemoved: function(object) {\r\n      this.dirty = true;\r\n      delete object.group;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _set: function(key, value) {\r\n      var i = this._objects.length;\r\n      if (this.useSetOnGroup) {\r\n        while (i--) {\r\n          this._objects[i].setOnGroup(key, value);\r\n        }\r\n      }\r\n      if (key === 'canvas') {\r\n        while (i--) {\r\n          this._objects[i]._set(key, value);\r\n        }\r\n      }\r\n      fabric.Object.prototype._set.call(this, key, value);\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      var _includeDefaultValues = this.includeDefaultValues;\r\n      var objsToObject = this._objects\r\n        .filter(function (obj) {\r\n          return !obj.excludeFromExport;\r\n        })\r\n        .map(function (obj) {\r\n          var originalDefaults = obj.includeDefaultValues;\r\n          obj.includeDefaultValues = _includeDefaultValues;\r\n          var _obj = obj.toObject(propertiesToInclude);\r\n          obj.includeDefaultValues = originalDefaults;\r\n          return _obj;\r\n        });\r\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\r\n      obj.objects = objsToObject;\r\n      return obj;\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance, in dataless mode.\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toDatalessObject: function(propertiesToInclude) {\r\n      var objsToObject, sourcePath = this.sourcePath;\r\n      if (sourcePath) {\r\n        objsToObject = sourcePath;\r\n      }\r\n      else {\r\n        var _includeDefaultValues = this.includeDefaultValues;\r\n        objsToObject = this._objects.map(function(obj) {\r\n          var originalDefaults = obj.includeDefaultValues;\r\n          obj.includeDefaultValues = _includeDefaultValues;\r\n          var _obj = obj.toDatalessObject(propertiesToInclude);\r\n          obj.includeDefaultValues = originalDefaults;\r\n          return _obj;\r\n        });\r\n      }\r\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\r\n      obj.objects = objsToObject;\r\n      return obj;\r\n    },\r\n\r\n    /**\r\n     * Renders instance on a given context\r\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\r\n     */\r\n    render: function(ctx) {\r\n      this._transformDone = true;\r\n      this.callSuper('render', ctx);\r\n      this._transformDone = false;\r\n    },\r\n\r\n    /**\r\n     * Decide if the object should cache or not. Create its own cache level\r\n     * needsItsOwnCache should be used when the object drawing method requires\r\n     * a cache step. None of the fabric classes requires it.\r\n     * Generally you do not cache objects in groups because the group is already cached.\r\n     * @return {Boolean}\r\n     */\r\n    shouldCache: function() {\r\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\r\n      if (ownCache) {\r\n        for (var i = 0, len = this._objects.length; i < len; i++) {\r\n          if (this._objects[i].willDrawShadow()) {\r\n            this.ownCaching = false;\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return ownCache;\r\n    },\r\n\r\n    /**\r\n     * Check if this object or a child object will cast a shadow\r\n     * @return {Boolean}\r\n     */\r\n    willDrawShadow: function() {\r\n      if (fabric.Object.prototype.willDrawShadow.call(this)) {\r\n        return true;\r\n      }\r\n      for (var i = 0, len = this._objects.length; i < len; i++) {\r\n        if (this._objects[i].willDrawShadow()) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Check if this group or its parent group are caching, recursively up\r\n     * @return {Boolean}\r\n     */\r\n    isOnACache: function() {\r\n      return this.ownCaching || (this.group && this.group.isOnACache());\r\n    },\r\n\r\n    /**\r\n     * Execute the drawing operation for an object on a specified context\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    drawObject: function(ctx) {\r\n      for (var i = 0, len = this._objects.length; i < len; i++) {\r\n        this._objects[i].render(ctx);\r\n      }\r\n      this._drawClipPath(ctx);\r\n    },\r\n\r\n    /**\r\n     * Check if cache is dirty\r\n     */\r\n    isCacheDirty: function(skipCanvas) {\r\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\r\n        return true;\r\n      }\r\n      if (!this.statefullCache) {\r\n        return false;\r\n      }\r\n      for (var i = 0, len = this._objects.length; i < len; i++) {\r\n        if (this._objects[i].isCacheDirty(true)) {\r\n          if (this._cacheCanvas) {\r\n            // if this group has not a cache canvas there is nothing to clean\r\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\r\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Restores original state of each of group objects (original state is that which was before group was created).\r\n     * if the nested boolean is true, the original state will be restored just for the\r\n     * first group and not for all the group chain\r\n     * @private\r\n     * @param {Boolean} nested tell the function to restore object state up to the parent group and not more\r\n     * @return {fabric.Group} thisArg\r\n     * @chainable\r\n     */\r\n    _restoreObjectsState: function() {\r\n      var groupMatrix = this.calcOwnMatrix();\r\n      this._objects.forEach(function(object) {\r\n        // instead of using _this = this;\r\n        fabric.util.addTransformToObject(object, groupMatrix);\r\n        delete object.group;\r\n        object.setCoords();\r\n      });\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Realises the transform from this group onto the supplied object\r\n     * i.e. it tells you what would happen if the supplied object was in\r\n     * the group, and then the group was destroyed. It mutates the supplied\r\n     * object.\r\n     * Warning: this method is not useful anymore, it has been kept to no break the api.\r\n     * is not used in the fabricJS codebase\r\n     * this method will be reduced to using the utility.\r\n     * @private\r\n     * @deprecated\r\n     * @param {fabric.Object} object\r\n     * @param {Array} parentMatrix parent transformation\r\n     * @return {fabric.Object} transformedObject\r\n     */\r\n    realizeTransform: function(object, parentMatrix) {\r\n      fabric.util.addTransformToObject(object, parentMatrix);\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Destroys a group (restoring state of its objects)\r\n     * @return {fabric.Group} thisArg\r\n     * @chainable\r\n     */\r\n    destroy: function() {\r\n      // when group is destroyed objects needs to get a repaint to be eventually\r\n      // displayed on canvas.\r\n      this._objects.forEach(function(object) {\r\n        object.set('dirty', true);\r\n      });\r\n      return this._restoreObjectsState();\r\n    },\r\n\r\n    /**\r\n     * make a group an active selection, remove the group from canvas\r\n     * the group has to be on canvas for this to work.\r\n     * @return {fabric.ActiveSelection} thisArg\r\n     * @chainable\r\n     */\r\n    toActiveSelection: function() {\r\n      if (!this.canvas) {\r\n        return;\r\n      }\r\n      var objects = this._objects, canvas = this.canvas;\r\n      this._objects = [];\r\n      var options = this.toObject();\r\n      delete options.objects;\r\n      var activeSelection = new fabric.ActiveSelection([]);\r\n      activeSelection.set(options);\r\n      activeSelection.type = 'activeSelection';\r\n      canvas.remove(this);\r\n      objects.forEach(function(object) {\r\n        object.group = activeSelection;\r\n        object.dirty = true;\r\n        canvas.add(object);\r\n      });\r\n      activeSelection.canvas = canvas;\r\n      activeSelection._objects = objects;\r\n      canvas._activeObject = activeSelection;\r\n      activeSelection.setCoords();\r\n      return activeSelection;\r\n    },\r\n\r\n    /**\r\n     * Destroys a group (restoring state of its objects)\r\n     * @return {fabric.Group} thisArg\r\n     * @chainable\r\n     */\r\n    ungroupOnCanvas: function() {\r\n      return this._restoreObjectsState();\r\n    },\r\n\r\n    /**\r\n     * Sets coordinates of all objects inside group\r\n     * @return {fabric.Group} thisArg\r\n     * @chainable\r\n     */\r\n    setObjectsCoords: function() {\r\n      var skipControls = true;\r\n      this.forEachObject(function(object) {\r\n        object.setCoords(skipControls);\r\n      });\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _calcBounds: function(onlyWidthHeight) {\r\n      var aX = [],\r\n          aY = [],\r\n          o, prop, coords,\r\n          props = ['tr', 'br', 'bl', 'tl'],\r\n          i = 0, iLen = this._objects.length,\r\n          j, jLen = props.length;\r\n\r\n      for ( ; i < iLen; ++i) {\r\n        o = this._objects[i];\r\n        coords = o.calcACoords();\r\n        for (j = 0; j < jLen; j++) {\r\n          prop = props[j];\r\n          aX.push(coords[prop].x);\r\n          aY.push(coords[prop].y);\r\n        }\r\n        o.aCoords = coords;\r\n      }\r\n\r\n      this._getBounds(aX, aY, onlyWidthHeight);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getBounds: function(aX, aY, onlyWidthHeight) {\r\n      var minXY = new fabric.Point(min(aX), min(aY)),\r\n          maxXY = new fabric.Point(max(aX), max(aY)),\r\n          top = minXY.y || 0, left = minXY.x || 0,\r\n          width = (maxXY.x - minXY.x) || 0,\r\n          height = (maxXY.y - minXY.y) || 0;\r\n      this.width = width;\r\n      this.height = height;\r\n      if (!onlyWidthHeight) {\r\n        // the bounding box always finds the topleft most corner.\r\n        // whatever is the group origin, we set up here the left/top position.\r\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\r\n      }\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    _toSVG: function(reviver) {\r\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\r\n\r\n      for (var i = 0, len = this._objects.length; i < len; i++) {\r\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\r\n      }\r\n      svgString.push('</g>\\n');\r\n      return svgString;\r\n    },\r\n\r\n    /**\r\n     * Returns styles-string for svg-export, specific version for group\r\n     * @return {String}\r\n     */\r\n    getSvgStyles: function() {\r\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\r\n            'opacity: ' + this.opacity + ';' : '',\r\n          visibility = this.visible ? '' : ' visibility: hidden;';\r\n      return [\r\n        opacity,\r\n        this.getSvgFilter(),\r\n        visibility\r\n      ].join('');\r\n    },\r\n\r\n    /**\r\n     * Returns svg clipPath representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    toClipPathSVG: function(reviver) {\r\n      var svgString = [];\r\n\r\n      for (var i = 0, len = this._objects.length; i < len; i++) {\r\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\r\n      }\r\n\r\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\r\n    },\r\n    /* _TO_SVG_END_ */\r\n  });\r\n\r\n  /**\r\n   * Returns {@link fabric.Group} instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Group\r\n   * @param {Object} object Object to create a group from\r\n   * @param {Function} [callback] Callback to invoke when an group instance is created\r\n   */\r\n  fabric.Group.fromObject = function(object, callback) {\r\n    var objects = object.objects,\r\n        options = fabric.util.object.clone(object, true);\r\n    delete options.objects;\r\n    if (typeof objects === 'string') {\r\n      // it has to be an url or something went wrong.\r\n      fabric.loadSVGFromURL(objects, function (elements) {\r\n        var group = fabric.util.groupSVGElements(elements, object, objects);\r\n        group.set(options);\r\n        callback && callback(group);\r\n      });\r\n      return;\r\n    }\r\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\r\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\r\n        var options = fabric.util.object.clone(object, true);\r\n        options.clipPath = enlivedClipPath[0];\r\n        delete options.objects;\r\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\r\n      });\r\n    });\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { });\r\n\r\n  if (fabric.ActiveSelection) {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Group class\r\n   * @class fabric.ActiveSelection\r\n   * @extends fabric.Group\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\r\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\r\n   */\r\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'activeSelection',\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} objects ActiveSelection objects\r\n     * @param {Object} [options] Options object\r\n     * @return {Object} thisArg\r\n     */\r\n    initialize: function(objects, options) {\r\n      options = options || {};\r\n      this._objects = objects || [];\r\n      for (var i = this._objects.length; i--; ) {\r\n        this._objects[i].group = this;\r\n      }\r\n\r\n      if (options.originX) {\r\n        this.originX = options.originX;\r\n      }\r\n      if (options.originY) {\r\n        this.originY = options.originY;\r\n      }\r\n      this._calcBounds();\r\n      this._updateObjectsCoords();\r\n      fabric.Object.prototype.initialize.call(this, options);\r\n      this.setCoords();\r\n    },\r\n\r\n    /**\r\n     * Change te activeSelection to a normal group,\r\n     * High level function that automatically adds it to canvas as\r\n     * active object. no events fired.\r\n     * @since 2.0.0\r\n     * @return {fabric.Group}\r\n     */\r\n    toGroup: function() {\r\n      var objects = this._objects.concat();\r\n      this._objects = [];\r\n      var options = fabric.Object.prototype.toObject.call(this);\r\n      var newGroup = new fabric.Group([]);\r\n      delete options.type;\r\n      newGroup.set(options);\r\n      objects.forEach(function(object) {\r\n        object.canvas.remove(object);\r\n        object.group = newGroup;\r\n      });\r\n      newGroup._objects = objects;\r\n      if (!this.canvas) {\r\n        return newGroup;\r\n      }\r\n      var canvas = this.canvas;\r\n      canvas.add(newGroup);\r\n      canvas._activeObject = newGroup;\r\n      newGroup.setCoords();\r\n      return newGroup;\r\n    },\r\n\r\n    /**\r\n     * If returns true, deselection is cancelled.\r\n     * @since 2.0.0\r\n     * @return {Boolean} [cancel]\r\n     */\r\n    onDeselect: function() {\r\n      this.destroy();\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Returns string representation of a group\r\n     * @return {String}\r\n     */\r\n    toString: function() {\r\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\r\n    },\r\n\r\n    /**\r\n     * Decide if the object should cache or not. Create its own cache level\r\n     * objectCaching is a global flag, wins over everything\r\n     * needsItsOwnCache should be used when the object drawing method requires\r\n     * a cache step. None of the fabric classes requires it.\r\n     * Generally you do not cache objects in groups because the group outside is cached.\r\n     * @return {Boolean}\r\n     */\r\n    shouldCache: function() {\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Check if this group or its parent group are caching, recursively up\r\n     * @return {Boolean}\r\n     */\r\n    isOnACache: function() {\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Renders controls and borders for the object\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {Object} [styleOverride] properties to override the object style\r\n     * @param {Object} [childrenOverride] properties to override the children overrides\r\n     */\r\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\r\n      ctx.save();\r\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n      this.callSuper('_renderControls', ctx, styleOverride);\r\n      childrenOverride = childrenOverride || { };\r\n      if (typeof childrenOverride.hasControls === 'undefined') {\r\n        childrenOverride.hasControls = false;\r\n      }\r\n      childrenOverride.forActiveSelection = true;\r\n      for (var i = 0, len = this._objects.length; i < len; i++) {\r\n        this._objects[i]._renderControls(ctx, childrenOverride);\r\n      }\r\n      ctx.restore();\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.ActiveSelection\r\n   * @param {Object} object Object to create a group from\r\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\r\n   */\r\n  fabric.ActiveSelection.fromObject = function(object, callback) {\r\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\r\n      delete object.objects;\r\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\r\n    });\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var extend = fabric.util.object.extend;\r\n\r\n  if (!global.fabric) {\r\n    global.fabric = { };\r\n  }\r\n\r\n  if (global.fabric.Image) {\r\n    fabric.warn('fabric.Image is already defined.');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Image class\r\n   * @class fabric.Image\r\n   * @extends fabric.Object\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\r\n   * @see {@link fabric.Image#initialize} for constructor definition\r\n   */\r\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'image',\r\n\r\n    /**\r\n     * Width of a stroke.\r\n     * For image quality a stroke multiple of 2 gives better results.\r\n     * @type Number\r\n     * @default\r\n     */\r\n    strokeWidth: 0,\r\n\r\n    /**\r\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\r\n     * This allows for relative urls as image src.\r\n     * @since 2.7.0\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    srcFromAttribute: false,\r\n\r\n    /**\r\n     * private\r\n     * contains last value of scaleX to detect\r\n     * if the Image got resized after the last Render\r\n     * @type Number\r\n     */\r\n    _lastScaleX: 1,\r\n\r\n    /**\r\n     * private\r\n     * contains last value of scaleY to detect\r\n     * if the Image got resized after the last Render\r\n     * @type Number\r\n     */\r\n    _lastScaleY: 1,\r\n\r\n    /**\r\n     * private\r\n     * contains last value of scaling applied by the apply filter chain\r\n     * @type Number\r\n     */\r\n    _filterScalingX: 1,\r\n\r\n    /**\r\n     * private\r\n     * contains last value of scaling applied by the apply filter chain\r\n     * @type Number\r\n     */\r\n    _filterScalingY: 1,\r\n\r\n    /**\r\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\r\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\r\n     * number bigger than 1 are not implemented yet.\r\n     * @type Number\r\n     */\r\n    minimumScaleTrigger: 0.5,\r\n\r\n    /**\r\n     * List of properties to consider when checking if\r\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n     * as well as for history (undo/redo) purposes\r\n     * @type Array\r\n     */\r\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\r\n\r\n    /**\r\n     * List of properties to consider when checking if cache needs refresh\r\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\r\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\r\n     * and refreshed at the next render\r\n     * @type Array\r\n     */\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('cropX', 'cropY'),\r\n\r\n    /**\r\n     * key used to retrieve the texture representing this image\r\n     * @since 2.0.0\r\n     * @type String\r\n     * @default\r\n     */\r\n    cacheKey: '',\r\n\r\n    /**\r\n     * Image crop in pixels from original image size.\r\n     * @since 2.0.0\r\n     * @type Number\r\n     * @default\r\n     */\r\n    cropX: 0,\r\n\r\n    /**\r\n     * Image crop in pixels from original image size.\r\n     * @since 2.0.0\r\n     * @type Number\r\n     * @default\r\n     */\r\n    cropY: 0,\r\n\r\n    /**\r\n     * Indicates whether this canvas will use image smoothing when painting this image.\r\n     * Also influence if the cacheCanvas for this image uses imageSmoothing\r\n     * @since 4.0.0-beta.11\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    imageSmoothing: true,\r\n\r\n    /**\r\n     * Constructor\r\n     * Image can be initialized with any canvas drawable or a string.\r\n     * The string should be a url and will be loaded as an image.\r\n     * Canvas and Image element work out of the box, while videos require extra code to work.\r\n     * Please check video element events for seeking.\r\n     * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | String} element Image element\r\n     * @param {Object} [options] Options object\r\n     * @param {function} [callback] callback function to call after eventual filters applied.\r\n     * @return {fabric.Image} thisArg\r\n     */\r\n    initialize: function(element, options) {\r\n      options || (options = { });\r\n      this.filters = [];\r\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\r\n      this.callSuper('initialize', options);\r\n      this._initElement(element, options);\r\n    },\r\n\r\n    /**\r\n     * Returns image element which this instance if based on\r\n     * @return {HTMLImageElement} Image element\r\n     */\r\n    getElement: function() {\r\n      return this._element || {};\r\n    },\r\n\r\n    /**\r\n     * Sets image element for this instance to a specified one.\r\n     * If filters defined they are applied to new image.\r\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\r\n     * @param {HTMLImageElement} element\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.Image} thisArg\r\n     * @chainable\r\n     */\r\n    setElement: function(element, options) {\r\n      this.removeTexture(this.cacheKey);\r\n      this.removeTexture(this.cacheKey + '_filtered');\r\n      this._element = element;\r\n      this._originalElement = element;\r\n      this._initConfig(options);\r\n      if (this.filters.length !== 0) {\r\n        this.applyFilters();\r\n      }\r\n      // resizeFilters work on the already filtered copy.\r\n      // we need to apply resizeFilters AFTER normal filters.\r\n      // applyResizeFilters is run more often than normal filters\r\n      // and is triggered by user interactions rather than dev code\r\n      if (this.resizeFilter) {\r\n        this.applyResizeFilters();\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Delete a single texture if in webgl mode\r\n     */\r\n    removeTexture: function(key) {\r\n      var backend = fabric.filterBackend;\r\n      if (backend && backend.evictCachesForKey) {\r\n        backend.evictCachesForKey(key);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Delete textures, reference to elements and eventually JSDOM cleanup\r\n     */\r\n    dispose: function() {\r\n      this.removeTexture(this.cacheKey);\r\n      this.removeTexture(this.cacheKey + '_filtered');\r\n      this._cacheContext = undefined;\r\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\r\n        fabric.util.cleanUpJsdomNode(this[element]);\r\n        this[element] = undefined;\r\n      }).bind(this));\r\n    },\r\n\r\n    /**\r\n     * Get the crossOrigin value (of the corresponding image element)\r\n     */\r\n    getCrossOrigin: function() {\r\n      return this._originalElement && (this._originalElement.crossOrigin || null);\r\n    },\r\n\r\n    /**\r\n     * Returns original size of an image\r\n     * @return {Object} Object with \"width\" and \"height\" properties\r\n     */\r\n    getOriginalSize: function() {\r\n      var element = this.getElement();\r\n      return {\r\n        width: element.naturalWidth || element.width,\r\n        height: element.naturalHeight || element.height\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _stroke: function(ctx) {\r\n      if (!this.stroke || this.strokeWidth === 0) {\r\n        return;\r\n      }\r\n      var w = this.width / 2, h = this.height / 2;\r\n      ctx.beginPath();\r\n      ctx.moveTo(-w, -h);\r\n      ctx.lineTo(w, -h);\r\n      ctx.lineTo(w, h);\r\n      ctx.lineTo(-w, h);\r\n      ctx.lineTo(-w, -h);\r\n      ctx.closePath();\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      var filters = [];\r\n\r\n      this.filters.forEach(function(filterObj) {\r\n        if (filterObj) {\r\n          filters.push(filterObj.toObject());\r\n        }\r\n      });\r\n      var object = extend(\r\n        this.callSuper(\r\n          'toObject',\r\n          ['cropX', 'cropY'].concat(propertiesToInclude)\r\n        ), {\r\n          src: this.getSrc(),\r\n          crossOrigin: this.getCrossOrigin(),\r\n          filters: filters,\r\n        });\r\n      if (this.resizeFilter) {\r\n        object.resizeFilter = this.resizeFilter.toObject();\r\n      }\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\r\n     * @return {Boolean}\r\n     */\r\n    hasCrop: function() {\r\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\r\n    },\r\n\r\n    /* _TO_SVG_START_ */\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @return {Array} an array of strings with the specific svg representation\r\n     * of the instance\r\n     */\r\n    _toSVG: function() {\r\n      var svgString = [], imageMarkup = [], strokeSvg, element = this._element,\r\n          x = -this.width / 2, y = -this.height / 2, clipPath = '', imageRendering = '';\r\n      if (!element) {\r\n        return [];\r\n      }\r\n      if (this.hasCrop()) {\r\n        var clipPathId = fabric.Object.__uid++;\r\n        svgString.push(\r\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\r\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\r\n          '</clipPath>\\n'\r\n        );\r\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\r\n      }\r\n      if (!this.imageSmoothing) {\r\n        imageRendering = '\" image-rendering=\"optimizeSpeed';\r\n      }\r\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\r\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\r\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\r\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\r\n        // so that object's center aligns with container's left/top\r\n        '\" width=\"', element.width || element.naturalWidth,\r\n        '\" height=\"', element.height || element.height,\r\n        imageRendering,\r\n        '\"', clipPath,\r\n        '></image>\\n');\r\n\r\n      if (this.stroke || this.strokeDashArray) {\r\n        var origFill = this.fill;\r\n        this.fill = null;\r\n        strokeSvg = [\r\n          '\\t<rect ',\r\n          'x=\"', x, '\" y=\"', y,\r\n          '\" width=\"', this.width, '\" height=\"', this.height,\r\n          '\" style=\"', this.getSvgStyles(),\r\n          '\"/>\\n'\r\n        ];\r\n        this.fill = origFill;\r\n      }\r\n      if (this.paintFirst !== 'fill') {\r\n        svgString = svgString.concat(strokeSvg, imageMarkup);\r\n      }\r\n      else {\r\n        svgString = svgString.concat(imageMarkup, strokeSvg);\r\n      }\r\n      return svgString;\r\n    },\r\n    /* _TO_SVG_END_ */\r\n\r\n    /**\r\n     * Returns source of an image\r\n     * @param {Boolean} filtered indicates if the src is needed for svg\r\n     * @return {String} Source of an image\r\n     */\r\n    getSrc: function(filtered) {\r\n      var element = filtered ? this._element : this._originalElement;\r\n      if (element) {\r\n        if (element.toDataURL) {\r\n          return element.toDataURL();\r\n        }\r\n\r\n        if (this.srcFromAttribute) {\r\n          return element.getAttribute('src');\r\n        }\r\n        else {\r\n          return element.src;\r\n        }\r\n      }\r\n      else {\r\n        return this.src || '';\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets source of an image\r\n     * @param {String} src Source string (URL)\r\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\r\n     * @param {Object} [options] Options object\r\n     * @param {String} [options.crossOrigin] crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\r\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\r\n     * @return {fabric.Image} thisArg\r\n     * @chainable\r\n     */\r\n    setSrc: function(src, callback, options) {\r\n      fabric.util.loadImage(src, function(img, isError) {\r\n        this.setElement(img, options);\r\n        this._setWidthHeight();\r\n        callback && callback(this, isError);\r\n      }, this, options && options.crossOrigin);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns string representation of an instance\r\n     * @return {String} String representation of an instance\r\n     */\r\n    toString: function() {\r\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\r\n    },\r\n\r\n    applyResizeFilters: function() {\r\n      var filter = this.resizeFilter,\r\n          minimumScale = this.minimumScaleTrigger,\r\n          objectScale = this.getTotalObjectScaling(),\r\n          scaleX = objectScale.scaleX,\r\n          scaleY = objectScale.scaleY,\r\n          elementToFilter = this._filteredEl || this._originalElement;\r\n      if (this.group) {\r\n        this.set('dirty', true);\r\n      }\r\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\r\n        this._element = elementToFilter;\r\n        this._filterScalingX = 1;\r\n        this._filterScalingY = 1;\r\n        this._lastScaleX = scaleX;\r\n        this._lastScaleY = scaleY;\r\n        return;\r\n      }\r\n      if (!fabric.filterBackend) {\r\n        fabric.filterBackend = fabric.initFilterBackend();\r\n      }\r\n      var canvasEl = fabric.util.createCanvasElement(),\r\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\r\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\r\n      canvasEl.width = sourceWidth;\r\n      canvasEl.height = sourceHeight;\r\n      this._element = canvasEl;\r\n      this._lastScaleX = filter.scaleX = scaleX;\r\n      this._lastScaleY = filter.scaleY = scaleY;\r\n      fabric.filterBackend.applyFilters(\r\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\r\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\r\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\r\n    },\r\n\r\n    /**\r\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\r\n     * @method applyFilters\r\n     * @param {Array} filters to be applied\r\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\r\n     * @return {thisArg} return the fabric.Image object\r\n     * @chainable\r\n     */\r\n    applyFilters: function(filters) {\r\n\r\n      filters = filters || this.filters || [];\r\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\r\n      this.set('dirty', true);\r\n\r\n      // needs to clear out or WEBGL will not resize correctly\r\n      this.removeTexture(this.cacheKey + '_filtered');\r\n\r\n      if (filters.length === 0) {\r\n        this._element = this._originalElement;\r\n        this._filteredEl = null;\r\n        this._filterScalingX = 1;\r\n        this._filterScalingY = 1;\r\n        return this;\r\n      }\r\n\r\n      var imgElement = this._originalElement,\r\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\r\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\r\n\r\n      if (this._element === this._originalElement) {\r\n        // if the element is the same we need to create a new element\r\n        var canvasEl = fabric.util.createCanvasElement();\r\n        canvasEl.width = sourceWidth;\r\n        canvasEl.height = sourceHeight;\r\n        this._element = canvasEl;\r\n        this._filteredEl = canvasEl;\r\n      }\r\n      else {\r\n        // clear the existing element to get new filter data\r\n        // also dereference the eventual resized _element\r\n        this._element = this._filteredEl;\r\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\r\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\r\n        this._lastScaleX = 1;\r\n        this._lastScaleY = 1;\r\n      }\r\n      if (!fabric.filterBackend) {\r\n        fabric.filterBackend = fabric.initFilterBackend();\r\n      }\r\n      fabric.filterBackend.applyFilters(\r\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\r\n      if (this._originalElement.width !== this._element.width ||\r\n        this._originalElement.height !== this._element.height) {\r\n        this._filterScalingX = this._element.width / this._originalElement.width;\r\n        this._filterScalingY = this._element.height / this._originalElement.height;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothing);\r\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\r\n        this.applyResizeFilters();\r\n      }\r\n      this._stroke(ctx);\r\n      this._renderPaintInOrder(ctx);\r\n    },\r\n\r\n    /**\r\n     * Paint the cached copy of the object on the target context.\r\n     * it will set the imageSmoothing for the draw operation\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    drawCacheOnCanvas: function(ctx) {\r\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothing);\r\n      fabric.Object.prototype.drawCacheOnCanvas.call(this, ctx);\r\n    },\r\n\r\n    /**\r\n     * Decide if the object should cache or not. Create its own cache level\r\n     * needsItsOwnCache should be used when the object drawing method requires\r\n     * a cache step. None of the fabric classes requires it.\r\n     * Generally you do not cache objects in groups because the group outside is cached.\r\n     * This is the special image version where we would like to avoid caching where possible.\r\n     * Essentially images do not benefit from caching. They may require caching, and in that\r\n     * case we do it. Also caching an image usually ends in a loss of details.\r\n     * A full performance audit should be done.\r\n     * @return {Boolean}\r\n     */\r\n    shouldCache: function() {\r\n      return this.needsItsOwnCache();\r\n    },\r\n\r\n    _renderFill: function(ctx) {\r\n      var elementToDraw = this._element;\r\n      if (!elementToDraw) {\r\n        return;\r\n      }\r\n      var scaleX = this._filterScalingX, scaleY = this._filterScalingY,\r\n          w = this.width, h = this.height, min = Math.min, max = Math.max,\r\n          // crop values cannot be lesser than 0.\r\n          cropX = max(this.cropX, 0), cropY = max(this.cropY, 0),\r\n          elWidth = elementToDraw.naturalWidth || elementToDraw.width,\r\n          elHeight = elementToDraw.naturalHeight || elementToDraw.height,\r\n          sX = cropX * scaleX,\r\n          sY = cropY * scaleY,\r\n          // the width height cannot exceed element width/height, starting from the crop offset.\r\n          sW = min(w * scaleX, elWidth - sX),\r\n          sH = min(h * scaleY, elHeight - sY),\r\n          x = -w / 2, y = -h / 2,\r\n          maxDestW = min(w, elWidth / scaleX - cropX),\r\n          maxDestH = min(h, elHeight / scaleY - cropY);\r\n\r\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\r\n    },\r\n\r\n    /**\r\n     * needed to check if image needs resize\r\n     * @private\r\n     */\r\n    _needsResize: function() {\r\n      var scale = this.getTotalObjectScaling();\r\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _resetWidthHeight: function() {\r\n      this.set(this.getOriginalSize());\r\n    },\r\n\r\n    /**\r\n     * The Image class's initialization method. This method is automatically\r\n     * called by the constructor.\r\n     * @private\r\n     * @param {HTMLImageElement|String} element The element representing the image\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _initElement: function(element, options) {\r\n      this.setElement(fabric.util.getById(element), options);\r\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} [options] Options object\r\n     */\r\n    _initConfig: function(options) {\r\n      options || (options = { });\r\n      this.setOptions(options);\r\n      this._setWidthHeight(options);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Array} filters to be initialized\r\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\r\n     */\r\n    _initFilters: function(filters, callback) {\r\n      if (filters && filters.length) {\r\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\r\n          callback && callback(enlivenedObjects);\r\n        }, 'fabric.Image.filters');\r\n      }\r\n      else {\r\n        callback && callback();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * Set the width and the height of the image object, using the element or the\r\n     * options.\r\n     * @param {Object} [options] Object with width/height properties\r\n     */\r\n    _setWidthHeight: function(options) {\r\n      options || (options = { });\r\n      var el = this.getElement();\r\n      this.width = options.width || el.naturalWidth || el.width || 0;\r\n      this.height = options.height || el.naturalHeight || el.height || 0;\r\n    },\r\n\r\n    /**\r\n     * Calculate offset for center and scale factor for the image in order to respect\r\n     * the preserveAspectRatio attribute\r\n     * @private\r\n     * @return {Object}\r\n     */\r\n    parsePreserveAspectRatioAttribute: function() {\r\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\r\n          rWidth = this._element.width, rHeight = this._element.height,\r\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\r\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\r\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\r\n        if (pAR.meetOrSlice === 'meet') {\r\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\r\n          offset = (pWidth - rWidth * scaleX) / 2;\r\n          if (pAR.alignX === 'Min') {\r\n            offsetLeft = -offset;\r\n          }\r\n          if (pAR.alignX === 'Max') {\r\n            offsetLeft = offset;\r\n          }\r\n          offset = (pHeight - rHeight * scaleY) / 2;\r\n          if (pAR.alignY === 'Min') {\r\n            offsetTop = -offset;\r\n          }\r\n          if (pAR.alignY === 'Max') {\r\n            offsetTop = offset;\r\n          }\r\n        }\r\n        if (pAR.meetOrSlice === 'slice') {\r\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\r\n          offset = rWidth - pWidth / scaleX;\r\n          if (pAR.alignX === 'Mid') {\r\n            cropX = offset / 2;\r\n          }\r\n          if (pAR.alignX === 'Max') {\r\n            cropX = offset;\r\n          }\r\n          offset = rHeight - pHeight / scaleY;\r\n          if (pAR.alignY === 'Mid') {\r\n            cropY = offset / 2;\r\n          }\r\n          if (pAR.alignY === 'Max') {\r\n            cropY = offset;\r\n          }\r\n          rWidth = pWidth / scaleX;\r\n          rHeight = pHeight / scaleY;\r\n        }\r\n      }\r\n      else {\r\n        scaleX = pWidth / rWidth;\r\n        scaleY = pHeight / rHeight;\r\n      }\r\n      return {\r\n        width: rWidth,\r\n        height: rHeight,\r\n        scaleX: scaleX,\r\n        scaleY: scaleY,\r\n        offsetLeft: offsetLeft,\r\n        offsetTop: offsetTop,\r\n        cropX: cropX,\r\n        cropY: cropY\r\n      };\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Default CSS class name for canvas\r\n   * @static\r\n   * @type String\r\n   * @default\r\n   */\r\n  fabric.Image.CSS_CANVAS = 'canvas-img';\r\n\r\n  /**\r\n   * Alias for getSrc\r\n   * @static\r\n   */\r\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\r\n\r\n  /**\r\n   * Creates an instance of fabric.Image from its object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} callback Callback to invoke when an image instance is created\r\n   */\r\n  fabric.Image.fromObject = function(_object, callback) {\r\n    var object = fabric.util.object.clone(_object);\r\n    fabric.util.loadImage(object.src, function(img, isError) {\r\n      if (isError) {\r\n        callback && callback(null, true);\r\n        return;\r\n      }\r\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\r\n        object.filters = filters || [];\r\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\r\n          object.resizeFilter = resizeFilters[0];\r\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\r\n            object.clipPath = enlivedProps[0];\r\n            var image = new fabric.Image(img, object);\r\n            callback(image, false);\r\n          });\r\n        });\r\n      });\r\n    }, null, object.crossOrigin);\r\n  };\r\n\r\n  /**\r\n   * Creates an instance of fabric.Image from an URL string\r\n   * @static\r\n   * @param {String} url URL to create an image from\r\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument). Second argument is a boolean indicating if an error occurred or not.\r\n   * @param {Object} [imgOptions] Options object\r\n   */\r\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\r\n    fabric.util.loadImage(url, function(img, isError) {\r\n      callback && callback(new fabric.Image(img, imgOptions), isError);\r\n    }, null, imgOptions && imgOptions.crossOrigin);\r\n  };\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\r\n   * @static\r\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\r\n   */\r\n  fabric.Image.ATTRIBUTE_NAMES =\r\n    fabric.SHARED_ATTRIBUTES.concat(\r\n      'x y width height preserveAspectRatio xlink:href crossOrigin image-rendering'.split(' ')\r\n    );\r\n\r\n  /**\r\n   * Returns {@link fabric.Image} instance from an SVG element\r\n   * @static\r\n   * @param {SVGElement} element Element to parse\r\n   * @param {Object} [options] Options object\r\n   * @param {Function} callback Callback to execute when fabric.Image object is created\r\n   * @return {fabric.Image} Instance of fabric.Image\r\n   */\r\n  fabric.Image.fromElement = function(element, callback, options) {\r\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\r\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\r\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\r\n  };\r\n  /* _FROM_SVG_END_ */\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\r\n\r\n  /**\r\n   * @private\r\n   * @return {Number} angle value\r\n   */\r\n  _getAngleValueForStraighten: function() {\r\n    var angle = this.angle % 360;\r\n    if (angle > 0) {\r\n      return Math.round((angle - 1) / 90) * 90;\r\n    }\r\n    return Math.round(angle / 90) * 90;\r\n  },\r\n\r\n  /**\r\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  straighten: function() {\r\n    this.rotate(this._getAngleValueForStraighten());\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\r\n   * @param {Object} callbacks Object with callback functions\r\n   * @param {Function} [callbacks.onComplete] Invoked on completion\r\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\r\n   * @return {fabric.Object} thisArg\r\n   * @chainable\r\n   */\r\n  fxStraighten: function(callbacks) {\r\n    callbacks = callbacks || { };\r\n\r\n    var empty = function() { },\r\n        onComplete = callbacks.onComplete || empty,\r\n        onChange = callbacks.onChange || empty,\r\n        _this = this;\r\n\r\n    fabric.util.animate({\r\n      startValue: this.get('angle'),\r\n      endValue: this._getAngleValueForStraighten(),\r\n      duration: this.FX_DURATION,\r\n      onChange: function(value) {\r\n        _this.rotate(value);\r\n        onChange();\r\n      },\r\n      onComplete: function() {\r\n        _this.setCoords();\r\n        onComplete();\r\n      },\r\n    });\r\n\r\n    return this;\r\n  }\r\n});\r\n\r\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\r\n\r\n  /**\r\n   * Straightens object, then rerenders canvas\r\n   * @param {fabric.Object} object Object to straighten\r\n   * @return {fabric.Canvas} thisArg\r\n   * @chainable\r\n   */\r\n  straightenObject: function (object) {\r\n    object.straighten();\r\n    this.requestRenderAll();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\r\n   * @param {fabric.Object} object Object to straighten\r\n   * @return {fabric.Canvas} thisArg\r\n   * @chainable\r\n   */\r\n  fxStraightenObject: function (object) {\r\n    object.fxStraighten({\r\n      onChange: this.requestRenderAllBound\r\n    });\r\n    return this;\r\n  }\r\n});\r\n\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /**\r\n   * Tests if webgl supports certain precision\r\n   * @param {WebGL} Canvas WebGL context to test on\r\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\r\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\r\n   */\r\n  function testPrecision(gl, precision){\r\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\r\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, fragmentSource);\r\n    gl.compileShader(fragmentShader);\r\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Indicate whether this filtering backend is supported by the user's browser.\r\n   * @param {Number} tileSize check if the tileSize is supported\r\n   * @returns {Boolean} Whether the user's browser supports WebGL.\r\n   */\r\n  fabric.isWebglSupported = function(tileSize) {\r\n    if (fabric.isLikelyNode) {\r\n      return false;\r\n    }\r\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\r\n    var canvas = document.createElement('canvas');\r\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n    var isSupported = false;\r\n    // eslint-disable-next-line\r\n    if (gl) {\r\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n      isSupported = fabric.maxTextureSize >= tileSize;\r\n      var precisions = ['highp', 'mediump', 'lowp'];\r\n      for (var i = 0; i < 3; i++){\r\n        if (testPrecision(gl, precisions[i])){\r\n          fabric.webGlPrecision = precisions[i];\r\n          break;\r\n        };\r\n      }\r\n    }\r\n    this.isSupported = isSupported;\r\n    return isSupported;\r\n  };\r\n\r\n  fabric.WebglFilterBackend = WebglFilterBackend;\r\n\r\n  /**\r\n   * WebGL filter backend.\r\n   */\r\n  function WebglFilterBackend(options) {\r\n    if (options && options.tileSize) {\r\n      this.tileSize = options.tileSize;\r\n    }\r\n    this.setupGLContext(this.tileSize, this.tileSize);\r\n    this.captureGPUInfo();\r\n  };\r\n\r\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\r\n\r\n    tileSize: 2048,\r\n\r\n    /**\r\n     * Experimental. This object is a sort of repository of help layers used to avoid\r\n     * of recreating them during frequent filtering. If you are previewing a filter with\r\n     * a slider you probably do not want to create help layers every filter step.\r\n     * in this object there will be appended some canvases, created once, resized sometimes\r\n     * cleared never. Clearing is left to the developer.\r\n     **/\r\n    resources: {\r\n\r\n    },\r\n\r\n    /**\r\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\r\n     */\r\n    setupGLContext: function(width, height) {\r\n      this.dispose();\r\n      this.createWebGLCanvas(width, height);\r\n      // eslint-disable-next-line\r\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\r\n      this.chooseFastestCopyGLTo2DMethod(width, height);\r\n    },\r\n\r\n    /**\r\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\r\n     * putImageData is faster than drawImage for that specific operation.\r\n     */\r\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\r\n      var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\r\n      try {\r\n        new ImageData(1, 1);\r\n        canUseImageData = true;\r\n      }\r\n      catch (e) {\r\n        canUseImageData = false;\r\n      }\r\n      // eslint-disable-next-line no-undef\r\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\r\n      // eslint-disable-next-line no-undef\r\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\r\n\r\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\r\n        return;\r\n      }\r\n\r\n      var targetCanvas = fabric.util.createCanvasElement();\r\n      // eslint-disable-next-line no-undef\r\n      var imageBuffer = new ArrayBuffer(width * height * 4);\r\n      if (fabric.forceGLPutImageData) {\r\n        this.imageBuffer = imageBuffer;\r\n        this.copyGLTo2D = copyGLTo2DPutImageData;\r\n        return;\r\n      }\r\n      var testContext = {\r\n        imageBuffer: imageBuffer,\r\n        destinationWidth: width,\r\n        destinationHeight: height,\r\n        targetCanvas: targetCanvas\r\n      };\r\n      var startTime, drawImageTime, putImageDataTime;\r\n      targetCanvas.width = width;\r\n      targetCanvas.height = height;\r\n\r\n      startTime = window.performance.now();\r\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\r\n      drawImageTime = window.performance.now() - startTime;\r\n\r\n      startTime = window.performance.now();\r\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\r\n      putImageDataTime = window.performance.now() - startTime;\r\n\r\n      if (drawImageTime > putImageDataTime) {\r\n        this.imageBuffer = imageBuffer;\r\n        this.copyGLTo2D = copyGLTo2DPutImageData;\r\n      }\r\n      else {\r\n        this.copyGLTo2D = copyGLTo2DDrawImage;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Create a canvas element and associated WebGL context and attaches them as\r\n     * class properties to the GLFilterBackend class.\r\n     */\r\n    createWebGLCanvas: function(width, height) {\r\n      var canvas = fabric.util.createCanvasElement();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      var glOptions = {\r\n            alpha: true,\r\n            premultipliedAlpha: false,\r\n            depth: false,\r\n            stencil: false,\r\n            antialias: false\r\n          },\r\n          gl = canvas.getContext('webgl', glOptions);\r\n      if (!gl) {\r\n        gl = canvas.getContext('experimental-webgl', glOptions);\r\n      }\r\n      if (!gl) {\r\n        return;\r\n      }\r\n      gl.clearColor(0, 0, 0, 0);\r\n      // this canvas can fire webglcontextlost and webglcontextrestored\r\n      this.canvas = canvas;\r\n      this.gl = gl;\r\n    },\r\n\r\n    /**\r\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\r\n     * to the provided target canvas.\r\n     *\r\n     * @param {Array} filters The filters to apply.\r\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\r\n     * @param {Number} width The width of the source input.\r\n     * @param {Number} height The height of the source input.\r\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\r\n     * omitted, caching will be skipped.\r\n     */\r\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\r\n      var gl = this.gl;\r\n      var cachedTexture;\r\n      if (cacheKey) {\r\n        cachedTexture = this.getCachedTexture(cacheKey, source);\r\n      }\r\n      var pipelineState = {\r\n        originalWidth: source.width || source.originalWidth,\r\n        originalHeight: source.height || source.originalHeight,\r\n        sourceWidth: width,\r\n        sourceHeight: height,\r\n        destinationWidth: width,\r\n        destinationHeight: height,\r\n        context: gl,\r\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\r\n        targetTexture: this.createTexture(gl, width, height),\r\n        originalTexture: cachedTexture ||\r\n          this.createTexture(gl, width, height, !cachedTexture && source),\r\n        passes: filters.length,\r\n        webgl: true,\r\n        aPosition: this.aPosition,\r\n        programCache: this.programCache,\r\n        pass: 0,\r\n        filterBackend: this,\r\n        targetCanvas: targetCanvas\r\n      };\r\n      var tempFbo = gl.createFramebuffer();\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\r\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\r\n      resizeCanvasIfNeeded(pipelineState);\r\n      this.copyGLTo2D(gl, pipelineState);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n      gl.deleteTexture(pipelineState.sourceTexture);\r\n      gl.deleteTexture(pipelineState.targetTexture);\r\n      gl.deleteFramebuffer(tempFbo);\r\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\r\n      return pipelineState;\r\n    },\r\n\r\n    /**\r\n     * Detach event listeners, remove references, and clean up caches.\r\n     */\r\n    dispose: function() {\r\n      if (this.canvas) {\r\n        this.canvas = null;\r\n        this.gl = null;\r\n      }\r\n      this.clearWebGLCaches();\r\n    },\r\n\r\n    /**\r\n     * Wipe out WebGL-related caches.\r\n     */\r\n    clearWebGLCaches: function() {\r\n      this.programCache = {};\r\n      this.textureCache = {};\r\n    },\r\n\r\n    /**\r\n     * Create a WebGL texture object.\r\n     *\r\n     * Accepts specific dimensions to initialize the texture to or a source image.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\r\n     * @param {Number} width The width to initialize the texture at.\r\n     * @param {Number} height The height to initialize the texture.\r\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\r\n     * @returns {WebGLTexture}\r\n     */\r\n    createTexture: function(gl, width, height, textureImageSource) {\r\n      var texture = gl.createTexture();\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      if (textureImageSource) {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\r\n      }\r\n      else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n      }\r\n      return texture;\r\n    },\r\n\r\n    /**\r\n     * Can be optionally used to get a texture from the cache array\r\n     *\r\n     * If an existing texture is not found, a new texture is created and cached.\r\n     *\r\n     * @param {String} uniqueId A cache key to use to find an existing texture.\r\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\r\n     * texture cache entry if one does not already exist.\r\n     */\r\n    getCachedTexture: function(uniqueId, textureImageSource) {\r\n      if (this.textureCache[uniqueId]) {\r\n        return this.textureCache[uniqueId];\r\n      }\r\n      else {\r\n        var texture = this.createTexture(\r\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\r\n        this.textureCache[uniqueId] = texture;\r\n        return texture;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Clear out cached resources related to a source image that has been\r\n     * filtered previously.\r\n     *\r\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\r\n     */\r\n    evictCachesForKey: function(cacheKey) {\r\n      if (this.textureCache[cacheKey]) {\r\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\r\n        delete this.textureCache[cacheKey];\r\n      }\r\n    },\r\n\r\n    copyGLTo2D: copyGLTo2DDrawImage,\r\n\r\n    /**\r\n     * Attempt to extract GPU information strings from a WebGL context.\r\n     *\r\n     * Useful information when debugging or blacklisting specific GPUs.\r\n     *\r\n     * @returns {Object} A GPU info object with renderer and vendor strings.\r\n     */\r\n    captureGPUInfo: function() {\r\n      if (this.gpuInfo) {\r\n        return this.gpuInfo;\r\n      }\r\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\r\n      if (!gl) {\r\n        return gpuInfo;\r\n      }\r\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\r\n      if (ext) {\r\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\r\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\r\n        if (renderer) {\r\n          gpuInfo.renderer = renderer.toLowerCase();\r\n        }\r\n        if (vendor) {\r\n          gpuInfo.vendor = vendor.toLowerCase();\r\n        }\r\n      }\r\n      this.gpuInfo = gpuInfo;\r\n      return gpuInfo;\r\n    },\r\n  };\r\n})();\r\n\r\nfunction resizeCanvasIfNeeded(pipelineState) {\r\n  var targetCanvas = pipelineState.targetCanvas,\r\n      width = targetCanvas.width, height = targetCanvas.height,\r\n      dWidth = pipelineState.destinationWidth,\r\n      dHeight = pipelineState.destinationHeight;\r\n\r\n  if (width !== dWidth || height !== dHeight) {\r\n    targetCanvas.width = dWidth;\r\n    targetCanvas.height = dHeight;\r\n  }\r\n}\r\n\r\n/**\r\n * Copy an input WebGL canvas on to an output 2D canvas.\r\n *\r\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\r\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\r\n *\r\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n */\r\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\r\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\r\n      ctx = targetCanvas.getContext('2d');\r\n  ctx.translate(0, targetCanvas.height); // move it down again\r\n  ctx.scale(1, -1); // vertical flip\r\n  // where is my image on the big glcanvas?\r\n  var sourceY = glCanvas.height - targetCanvas.height;\r\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\r\n    targetCanvas.width, targetCanvas.height);\r\n}\r\n\r\n/**\r\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\r\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\r\n *\r\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n */\r\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\r\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\r\n      dWidth = pipelineState.destinationWidth,\r\n      dHeight = pipelineState.destinationHeight,\r\n      numBytes = dWidth * dHeight * 4;\r\n\r\n  // eslint-disable-next-line no-undef\r\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\r\n  // eslint-disable-next-line no-undef\r\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\r\n\r\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\r\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\r\n  ctx.putImageData(imgData, 0, 0);\r\n}\r\n\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  var noop = function() {};\r\n\r\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\r\n\r\n  /**\r\n   * Canvas 2D filter backend.\r\n   */\r\n  function Canvas2dFilterBackend() {};\r\n\r\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\r\n    evictCachesForKey: noop,\r\n    dispose: noop,\r\n    clearWebGLCaches: noop,\r\n\r\n    /**\r\n     * Experimental. This object is a sort of repository of help layers used to avoid\r\n     * of recreating them during frequent filtering. If you are previewing a filter with\r\n     * a slider you probably do not want to create help layers every filter step.\r\n     * in this object there will be appended some canvases, created once, resized sometimes\r\n     * cleared never. Clearing is left to the developer.\r\n     **/\r\n    resources: {\r\n\r\n    },\r\n\r\n    /**\r\n     * Apply a set of filters against a source image and draw the filtered output\r\n     * to the provided destination canvas.\r\n     *\r\n     * @param {EnhancedFilter} filters The filter to apply.\r\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\r\n     * @param {Number} sourceWidth The width of the source input.\r\n     * @param {Number} sourceHeight The height of the source input.\r\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n     */\r\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\r\n      var ctx = targetCanvas.getContext('2d');\r\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\r\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n      var pipelineState = {\r\n        sourceWidth: sourceWidth,\r\n        sourceHeight: sourceHeight,\r\n        imageData: imageData,\r\n        originalEl: sourceElement,\r\n        originalImageData: originalImageData,\r\n        canvasEl: targetCanvas,\r\n        ctx: ctx,\r\n        filterBackend: this,\r\n      };\r\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\r\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\r\n        targetCanvas.width = pipelineState.imageData.width;\r\n        targetCanvas.height = pipelineState.imageData.height;\r\n      }\r\n      ctx.putImageData(pipelineState.imageData, 0, 0);\r\n      return pipelineState;\r\n    },\r\n\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @namespace fabric.Image.filters\r\n * @memberOf fabric.Image\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\r\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n */\r\nfabric.Image = fabric.Image || { };\r\nfabric.Image.filters = fabric.Image.filters || { };\r\n\r\n/**\r\n * Root filter class from which all filter classes inherit from\r\n * @class fabric.Image.filters.BaseFilter\r\n * @memberOf fabric.Image.filters\r\n */\r\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\r\n\r\n  /**\r\n   * Filter type\r\n   * @param {String} type\r\n   * @default\r\n   */\r\n  type: 'BaseFilter',\r\n\r\n  /**\r\n   * Array of attributes to send with buffers. do not modify\r\n   * @private\r\n   */\r\n\r\n  vertexSource: 'attribute vec2 aPosition;\\n' +\r\n    'varying vec2 vTexCoord;\\n' +\r\n    'void main() {\\n' +\r\n      'vTexCoord = aPosition;\\n' +\r\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n    '}',\r\n\r\n  fragmentSource: 'precision highp float;\\n' +\r\n    'varying vec2 vTexCoord;\\n' +\r\n    'uniform sampler2D uTexture;\\n' +\r\n    'void main() {\\n' +\r\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n    '}',\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  initialize: function(options) {\r\n    if (options) {\r\n      this.setOptions(options);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Sets filter's properties from options\r\n   * @param {Object} [options] Options object\r\n   */\r\n  setOptions: function(options) {\r\n    for (var prop in options) {\r\n      this[prop] = options[prop];\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Compile this filter's shader program.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\r\n   * @param {String} fragmentSource fragmentShader source for compilation\r\n   * @param {String} vertexSource vertexShader source for compilation\r\n   */\r\n  createProgram: function(gl, fragmentSource, vertexSource) {\r\n    fragmentSource = fragmentSource || this.fragmentSource;\r\n    vertexSource = vertexSource || this.vertexSource;\r\n    if (fabric.webGlPrecision !== 'highp'){\r\n      fragmentSource = fragmentSource.replace(\r\n        /precision highp float/g,\r\n        'precision ' + fabric.webGlPrecision + ' float'\r\n      );\r\n    }\r\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertexShader, vertexSource);\r\n    gl.compileShader(vertexShader);\r\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n      throw new Error(\r\n        // eslint-disable-next-line prefer-template\r\n        'Vertex shader compile error for ' + this.type + ': ' +\r\n        gl.getShaderInfoLog(vertexShader)\r\n      );\r\n    }\r\n\r\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, fragmentSource);\r\n    gl.compileShader(fragmentShader);\r\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n      throw new Error(\r\n        // eslint-disable-next-line prefer-template\r\n        'Fragment shader compile error for ' + this.type + ': ' +\r\n        gl.getShaderInfoLog(fragmentShader)\r\n      );\r\n    }\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      throw new Error(\r\n        // eslint-disable-next-line prefer-template\r\n        'Shader link error for \"${this.type}\" ' +\r\n        gl.getProgramInfoLog(program)\r\n      );\r\n    }\r\n\r\n    var attributeLocations = this.getAttributeLocations(gl, program);\r\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\r\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\r\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\r\n    return {\r\n      program: program,\r\n      attributeLocations: attributeLocations,\r\n      uniformLocations: uniformLocations\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Return a map of attribute names to WebGLAttributeLocation objects.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\r\n   * @returns {Object} A map of attribute names to attribute locations.\r\n   */\r\n  getAttributeLocations: function(gl, program) {\r\n    return {\r\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Return a map of uniform names to WebGLUniformLocation objects.\r\n   *\r\n   * Intended to be overridden by subclasses.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\r\n   * @returns {Object} A map of uniform names to uniform locations.\r\n   */\r\n  getUniformLocations: function (/* gl, program */) {\r\n    // in case i do not need any special uniform i need to return an empty object\r\n    return { };\r\n  },\r\n\r\n  /**\r\n   * Send attribute data from this filter to its shader program on the GPU.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\r\n   */\r\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\r\n    var attributeLocation = attributeLocations.aPosition;\r\n    var buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.enableVertexAttribArray(attributeLocation);\r\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\r\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\r\n  },\r\n\r\n  _setupFrameBuffer: function(options) {\r\n    var gl = options.context, width, height;\r\n    if (options.passes > 1) {\r\n      width = options.destinationWidth;\r\n      height = options.destinationHeight;\r\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\r\n        gl.deleteTexture(options.targetTexture);\r\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\r\n      }\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\r\n        options.targetTexture, 0);\r\n    }\r\n    else {\r\n      // draw last filter on canvas and not to framebuffer.\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.finish();\r\n    }\r\n  },\r\n\r\n  _swapTextures: function(options) {\r\n    options.passes--;\r\n    options.pass++;\r\n    var temp = options.targetTexture;\r\n    options.targetTexture = options.sourceTexture;\r\n    options.sourceTexture = temp;\r\n  },\r\n\r\n  /**\r\n   * Generic isNeutral implementation for one parameter based filters.\r\n   * Used only in image applyFilters to discard filters that will not have an effect\r\n   * on the image\r\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\r\n   * @param {Object} options\r\n   **/\r\n  isNeutralState: function(/* options */) {\r\n    var main = this.mainParameter,\r\n        _class = fabric.Image.filters[this.type].prototype;\r\n    if (main) {\r\n      if (Array.isArray(_class[main])) {\r\n        for (var i = _class[main].length; i--;) {\r\n          if (this[main][i] !== _class[main][i]) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      else {\r\n        return _class[main] === this[main];\r\n      }\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Apply this filter to the input image data provided.\r\n   *\r\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n   *\r\n   * @param {Object} options\r\n   * @param {Number} options.passes The number of filters remaining to be executed\r\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   */\r\n  applyTo: function(options) {\r\n    if (options.webgl) {\r\n      this._setupFrameBuffer(options);\r\n      this.applyToWebGL(options);\r\n      this._swapTextures(options);\r\n    }\r\n    else {\r\n      this.applyTo2d(options);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Retrieves the cached shader.\r\n   * @param {Object} options\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   */\r\n  retrieveShader: function(options) {\r\n    if (!options.programCache.hasOwnProperty(this.type)) {\r\n      options.programCache[this.type] = this.createProgram(options.context);\r\n    }\r\n    return options.programCache[this.type];\r\n  },\r\n\r\n  /**\r\n   * Apply this filter using webgl.\r\n   *\r\n   * @param {Object} options\r\n   * @param {Number} options.passes The number of filters remaining to be executed\r\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\r\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   */\r\n  applyToWebGL: function(options) {\r\n    var gl = options.context;\r\n    var shader = this.retrieveShader(options);\r\n    if (options.pass === 0 && options.originalTexture) {\r\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\r\n    }\r\n    else {\r\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\r\n    }\r\n    gl.useProgram(shader.program);\r\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\r\n\r\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\r\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\r\n\r\n    this.sendUniformData(gl, shader.uniformLocations);\r\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n  },\r\n\r\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\r\n    gl.activeTexture(textureUnit);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    // reset active texture to 0 as usual\r\n    gl.activeTexture(gl.TEXTURE0);\r\n  },\r\n\r\n  unbindAdditionalTexture: function(gl, textureUnit) {\r\n    gl.activeTexture(textureUnit);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.activeTexture(gl.TEXTURE0);\r\n  },\r\n\r\n  getMainParameter: function() {\r\n    return this[this.mainParameter];\r\n  },\r\n\r\n  setMainParameter: function(value) {\r\n    this[this.mainParameter] = value;\r\n  },\r\n\r\n  /**\r\n   * Send uniform data from this filter to its shader program on the GPU.\r\n   *\r\n   * Intended to be overridden by subclasses.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\r\n   */\r\n  sendUniformData: function(/* gl, uniformLocations */) {\r\n    // Intentionally left blank.  Override me in subclasses.\r\n  },\r\n\r\n  /**\r\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\r\n   * remember that options.targetCanvas is available for use till end of chain.\r\n   */\r\n  createHelpLayer: function(options) {\r\n    if (!options.helpLayer) {\r\n      var helpLayer = document.createElement('canvas');\r\n      helpLayer.width = options.sourceWidth;\r\n      helpLayer.height = options.sourceHeight;\r\n      options.helpLayer = helpLayer;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject: function() {\r\n    var object = { type: this.type }, mainP = this.mainParameter;\r\n    if (mainP) {\r\n      object[mainP] = this[mainP];\r\n    }\r\n    return object;\r\n  },\r\n\r\n  /**\r\n   * Returns a JSON representation of an instance\r\n   * @return {Object} JSON\r\n   */\r\n  toJSON: function() {\r\n    // delegate, not alias\r\n    return this.toObject();\r\n  }\r\n});\r\n\r\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\r\n  var filter = new fabric.Image.filters[object.type](object);\r\n  callback && callback(filter);\r\n  return filter;\r\n};\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Color Matrix filter class\r\n   * @class fabric.Image.filters.ColorMatrix\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\r\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\r\n   * @example <caption>Kodachrome filter</caption>\r\n   * var filter = new fabric.Image.filters.ColorMatrix({\r\n   *  matrix: [\r\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\r\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\r\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\r\n       0, 0, 0, 1, 0\r\n      ]\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'ColorMatrix',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'uniform mat4 uColorMatrix;\\n' +\r\n      'uniform vec4 uConstants;\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'color *= uColorMatrix;\\n' +\r\n        'color += uConstants;\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Colormatrix for pixels.\r\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n     * outside the -1, 1 range.\r\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n     * @param {Array} matrix array of 20 numbers.\r\n     * @default\r\n     */\r\n    matrix: [\r\n      1, 0, 0, 0, 0,\r\n      0, 1, 0, 0, 0,\r\n      0, 0, 1, 0, 0,\r\n      0, 0, 0, 1, 0\r\n    ],\r\n\r\n    mainParameter: 'matrix',\r\n\r\n    /**\r\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\r\n     * to save some calculation\r\n     */\r\n    colorsOnly: true,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     */\r\n    initialize: function(options) {\r\n      this.callSuper('initialize', options);\r\n      // create a new array instead mutating the prototype with push\r\n      this.matrix = this.matrix.slice(0);\r\n    },\r\n\r\n    /**\r\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          data = imageData.data,\r\n          iLen = data.length,\r\n          m = this.matrix,\r\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\r\n\r\n      for (i = 0; i < iLen; i += 4) {\r\n        r = data[i];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n        if (colorsOnly) {\r\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\r\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\r\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\r\n        }\r\n        else {\r\n          a = data[i + 3];\r\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\r\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\r\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\r\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\r\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      var m = this.matrix,\r\n          matrix = [\r\n            m[0], m[1], m[2], m[3],\r\n            m[5], m[6], m[7], m[8],\r\n            m[10], m[11], m[12], m[13],\r\n            m[15], m[16], m[17], m[18]\r\n          ],\r\n          constants = [m[4], m[9], m[14], m[19]];\r\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\r\n      gl.uniform4fv(uniformLocations.uConstants, constants);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] function to invoke after filter creation\r\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\r\n   */\r\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Brightness filter class\r\n   * @class fabric.Image.filters.Brightness\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Brightness({\r\n   *   brightness: 0.05\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Brightness',\r\n\r\n    /**\r\n     * Fragment source for the brightness program\r\n     */\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform float uBrightness;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'color.rgb += uBrightness;\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Brightness value, from -1 to 1.\r\n     * translated to -255 to 255 for 2d\r\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n     * @param {Number} brightness\r\n     * @default\r\n     */\r\n    brightness: 0,\r\n\r\n    /**\r\n     * Describe the property that is the filter parameter\r\n     * @param {String} m\r\n     * @default\r\n     */\r\n    mainParameter: 'brightness',\r\n\r\n    /**\r\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n    *\r\n    * @param {Object} options\r\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n    */\r\n    applyTo2d: function(options) {\r\n      if (this.brightness === 0) {\r\n        return;\r\n      }\r\n      var imageData = options.imageData,\r\n          data = imageData.data, i, len = data.length,\r\n          brightness = Math.round(this.brightness * 255);\r\n      for (i = 0; i < len; i += 4) {\r\n        data[i] = data[i] + brightness;\r\n        data[i + 1] = data[i + 1] + brightness;\r\n        data[i + 2] = data[i + 2] + brightness;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\r\n   */\r\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend,\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\r\n   * @class fabric.Image.filters.Convolute\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example <caption>Sharpen filter</caption>\r\n   * var filter = new fabric.Image.filters.Convolute({\r\n   *   matrix: [ 0, -1,  0,\r\n   *            -1,  5, -1,\r\n   *             0, -1,  0 ]\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   * @example <caption>Blur filter</caption>\r\n   * var filter = new fabric.Image.filters.Convolute({\r\n   *   matrix: [ 1/9, 1/9, 1/9,\r\n   *             1/9, 1/9, 1/9,\r\n   *             1/9, 1/9, 1/9 ]\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   * @example <caption>Emboss filter</caption>\r\n   * var filter = new fabric.Image.filters.Convolute({\r\n   *   matrix: [ 1,   1,  1,\r\n   *             1, 0.7, -1,\r\n   *            -1,  -1, -1 ]\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   * @example <caption>Emboss filter with opaqueness</caption>\r\n   * var filter = new fabric.Image.filters.Convolute({\r\n   *   opaque: true,\r\n   *   matrix: [ 1,   1,  1,\r\n   *             1, 0.7, -1,\r\n   *            -1,  -1, -1 ]\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   */\r\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Convolute',\r\n\r\n    /*\r\n     * Opaque value (true/false)\r\n     */\r\n    opaque: false,\r\n\r\n    /*\r\n     * matrix for the filter, max 9x9\r\n     */\r\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n\r\n    /**\r\n     * Fragment source for the brightness program\r\n     */\r\n    fragmentSource: {\r\n      Convolute_3_1: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[9];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\r\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n      Convolute_3_0: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[9];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\r\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'gl_FragColor.a = alpha;\\n' +\r\n        '}',\r\n      Convolute_5_1: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[25];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n      Convolute_5_0: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[25];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\r\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'gl_FragColor.a = alpha;\\n' +\r\n        '}',\r\n      Convolute_7_1: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[49];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n      Convolute_7_0: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[49];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\r\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'gl_FragColor.a = alpha;\\n' +\r\n        '}',\r\n      Convolute_9_1: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[81];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\r\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n      Convolute_9_0: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform float uMatrix[81];\\n' +\r\n        'uniform float uStepW;\\n' +\r\n        'uniform float uStepH;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\r\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\r\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\r\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\r\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\r\n            '}\\n' +\r\n          '}\\n' +\r\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'gl_FragColor.a = alpha;\\n' +\r\n        '}',\r\n    },\r\n\r\n    /**\r\n     * Constructor\r\n     * @memberOf fabric.Image.filters.Convolute.prototype\r\n     * @param {Object} [options] Options object\r\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\r\n     * @param {Array} [options.matrix] Filter matrix\r\n     */\r\n\r\n\r\n    /**\r\n    * Retrieves the cached shader.\r\n    * @param {Object} options\r\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n    */\r\n    retrieveShader: function(options) {\r\n      var size = Math.sqrt(this.matrix.length);\r\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\r\n      var shaderSource = this.fragmentSource[cacheKey];\r\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n      }\r\n      return options.programCache[cacheKey];\r\n    },\r\n\r\n    /**\r\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          data = imageData.data,\r\n          weights = this.matrix,\r\n          side = Math.round(Math.sqrt(weights.length)),\r\n          halfSide = Math.floor(side / 2),\r\n          sw = imageData.width,\r\n          sh = imageData.height,\r\n          output = options.ctx.createImageData(sw, sh),\r\n          dst = output.data,\r\n          // go through the destination image pixels\r\n          alphaFac = this.opaque ? 1 : 0,\r\n          r, g, b, a, dstOff,\r\n          scx, scy, srcOff, wt,\r\n          x, y, cx, cy;\r\n\r\n      for (y = 0; y < sh; y++) {\r\n        for (x = 0; x < sw; x++) {\r\n          dstOff = (y * sw + x) * 4;\r\n          // calculate the weighed sum of the source image pixels that\r\n          // fall under the convolution matrix\r\n          r = 0; g = 0; b = 0; a = 0;\r\n\r\n          for (cy = 0; cy < side; cy++) {\r\n            for (cx = 0; cx < side; cx++) {\r\n              scy = y + cy - halfSide;\r\n              scx = x + cx - halfSide;\r\n\r\n              // eslint-disable-next-line max-depth\r\n              if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\r\n                continue;\r\n              }\r\n\r\n              srcOff = (scy * sw + scx) * 4;\r\n              wt = weights[cy * side + cx];\r\n\r\n              r += data[srcOff] * wt;\r\n              g += data[srcOff + 1] * wt;\r\n              b += data[srcOff + 2] * wt;\r\n              // eslint-disable-next-line max-depth\r\n              if (!alphaFac) {\r\n                a += data[srcOff + 3] * wt;\r\n              }\r\n            }\r\n          }\r\n          dst[dstOff] = r;\r\n          dst[dstOff + 1] = g;\r\n          dst[dstOff + 2] = b;\r\n          if (!alphaFac) {\r\n            dst[dstOff + 3] = a;\r\n          }\r\n          else {\r\n            dst[dstOff + 3] = data[dstOff + 3];\r\n          }\r\n        }\r\n      }\r\n      options.imageData = output;\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\r\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\r\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\r\n        uSize: gl.getUniformLocation(program, 'uSize'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      return extend(this.callSuper('toObject'), {\r\n        opaque: this.opaque,\r\n        matrix: this.matrix\r\n      });\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\r\n   */\r\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Grayscale image filter class\r\n   * @class fabric.Image.filters.Grayscale\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Grayscale();\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Grayscale',\r\n\r\n    fragmentSource: {\r\n      average: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\r\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\r\n        '}',\r\n      lightness: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform int uMode;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\r\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n        '}',\r\n      luminosity: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform int uMode;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\r\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\r\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\r\n        '}',\r\n    },\r\n\r\n\r\n    /**\r\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    mode: 'average',\r\n\r\n    mainParameter: 'mode',\r\n\r\n    /**\r\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          data = imageData.data, i,\r\n          len = data.length, value,\r\n          mode = this.mode;\r\n      for (i = 0; i < len; i += 4) {\r\n        if (mode === 'average') {\r\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n        }\r\n        else if (mode === 'lightness') {\r\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\r\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\r\n        }\r\n        else if (mode === 'luminosity') {\r\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\r\n        }\r\n        data[i] = value;\r\n        data[i + 1] = value;\r\n        data[i + 2] = value;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Retrieves the cached shader.\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    retrieveShader: function(options) {\r\n      var cacheKey = this.type + '_' + this.mode;\r\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n        var shaderSource = this.fragmentSource[this.mode];\r\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n      }\r\n      return options.programCache[cacheKey];\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uMode: gl.getUniformLocation(program, 'uMode'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      // default average mode.\r\n      var mode = 1;\r\n      gl.uniform1i(uniformLocations.uMode, mode);\r\n    },\r\n\r\n    /**\r\n     * Grayscale filter isNeutralState implementation\r\n     * The filter is never neutral\r\n     * on the image\r\n     **/\r\n    isNeutralState: function() {\r\n      return false;\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\r\n   */\r\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Invert filter class\r\n   * @class fabric.Image.filters.Invert\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Invert();\r\n   * object.filters.push(filter);\r\n   * object.applyFilters(canvas.renderAll.bind(canvas));\r\n   */\r\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Invert',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform int uInvert;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'if (uInvert == 1) {\\n' +\r\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\r\n        '} else {\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Filter invert. if false, does nothing\r\n     * @param {Boolean} invert\r\n     * @default\r\n     */\r\n    invert: true,\r\n\r\n    mainParameter: 'invert',\r\n\r\n    /**\r\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          data = imageData.data, i,\r\n          len = data.length;\r\n      for (i = 0; i < len; i += 4) {\r\n        data[i] = 255 - data[i];\r\n        data[i + 1] = 255 - data[i + 1];\r\n        data[i + 2] = 255 - data[i + 2];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Invert filter isNeutralState implementation\r\n     * Used only in image applyFilters to discard filters that will not have an effect\r\n     * on the image\r\n     * @param {Object} options\r\n     **/\r\n    isNeutralState: function() {\r\n      return !this.invert;\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\r\n   */\r\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend,\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Noise filter class\r\n   * @class fabric.Image.filters.Noise\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Noise({\r\n   *   noise: 700\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   */\r\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Noise',\r\n\r\n    /**\r\n     * Fragment source for the noise program\r\n     */\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform float uStepH;\\n' +\r\n      'uniform float uNoise;\\n' +\r\n      'uniform float uSeed;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\r\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\r\n      '}\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Describe the property that is the filter parameter\r\n     * @param {String} m\r\n     * @default\r\n     */\r\n    mainParameter: 'noise',\r\n\r\n    /**\r\n     * Noise value, from\r\n     * @param {Number} noise\r\n     * @default\r\n     */\r\n    noise: 0,\r\n\r\n    /**\r\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      if (this.noise === 0) {\r\n        return;\r\n      }\r\n      var imageData = options.imageData,\r\n          data = imageData.data, i, len = data.length,\r\n          noise = this.noise, rand;\r\n\r\n      for (i = 0, len = data.length; i < len; i += 4) {\r\n\r\n        rand = (0.5 - Math.random()) * noise;\r\n\r\n        data[i] += rand;\r\n        data[i + 1] += rand;\r\n        data[i + 2] += rand;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\r\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\r\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      return extend(this.callSuper('toObject'), {\r\n        noise: this.noise\r\n      });\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\r\n   */\r\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Pixelate filter class\r\n   * @class fabric.Image.filters.Pixelate\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Pixelate({\r\n   *   blocksize: 8\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Pixelate',\r\n\r\n    blocksize: 4,\r\n\r\n    mainParameter: 'blocksize',\r\n\r\n    /**\r\n     * Fragment source for the Pixelate program\r\n     */\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform float uBlocksize;\\n' +\r\n      'uniform float uStepW;\\n' +\r\n      'uniform float uStepH;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'float blockW = uBlocksize * uStepW;\\n' +\r\n        'float blockH = uBlocksize * uStepW;\\n' +\r\n        'int posX = int(vTexCoord.x / blockW);\\n' +\r\n        'int posY = int(vTexCoord.y / blockH);\\n' +\r\n        'float fposX = float(posX);\\n' +\r\n        'float fposY = float(posY);\\n' +\r\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\r\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          data = imageData.data,\r\n          iLen = imageData.height,\r\n          jLen = imageData.width,\r\n          index, i, j, r, g, b, a,\r\n          _i, _j, _iLen, _jLen;\r\n\r\n      for (i = 0; i < iLen; i += this.blocksize) {\r\n        for (j = 0; j < jLen; j += this.blocksize) {\r\n\r\n          index = (i * 4) * jLen + (j * 4);\r\n\r\n          r = data[index];\r\n          g = data[index + 1];\r\n          b = data[index + 2];\r\n          a = data[index + 3];\r\n\r\n          _iLen = Math.min(i + this.blocksize, iLen);\r\n          _jLen = Math.min(j + this.blocksize, jLen);\r\n          for (_i = i; _i < _iLen; _i++) {\r\n            for (_j = j; _j < _jLen; _j++) {\r\n              index = (_i * 4) * jLen + (_j * 4);\r\n              data[index] = r;\r\n              data[index + 1] = g;\r\n              data[index + 2] = b;\r\n              data[index + 3] = a;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Indicate when the filter is not gonna apply changes to the image\r\n     **/\r\n    isNeutralState: function() {\r\n      return this.blocksize === 1;\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\r\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\r\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\r\n   */\r\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      extend = fabric.util.object.extend,\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Remove white filter class\r\n   * @class fabric.Image.filters.RemoveColor\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.RemoveColor({\r\n   *   threshold: 0.2,\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   */\r\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'RemoveColor',\r\n\r\n    /**\r\n     * Color to remove, in any format understood by fabric.Color.\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    color: '#FFFFFF',\r\n\r\n    /**\r\n     * Fragment source for the brightness program\r\n     */\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform vec4 uLow;\\n' +\r\n      'uniform vec4 uHigh;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\r\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\r\n          'gl_FragColor.a = 0.0;\\n' +\r\n        '}\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * distance to actual color, as value up or down from each r,g,b\r\n     * between 0 and 1\r\n     **/\r\n    distance: 0.02,\r\n\r\n    /**\r\n     * For color to remove inside distance, use alpha channel for a smoother deletion\r\n     * NOT IMPLEMENTED YET\r\n     **/\r\n    useAlpha: false,\r\n\r\n    /**\r\n     * Constructor\r\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\r\n     * @param {Object} [options] Options object\r\n     * @param {Number} [options.color=#RRGGBB] Threshold value\r\n     * @param {Number} [options.distance=10] Distance value\r\n     */\r\n\r\n    /**\r\n     * Applies filter to canvas element\r\n     * @param {Object} canvasEl Canvas element to apply filter to\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          data = imageData.data, i,\r\n          distance = this.distance * 255,\r\n          r, g, b,\r\n          source = new fabric.Color(this.color).getSource(),\r\n          lowC = [\r\n            source[0] - distance,\r\n            source[1] - distance,\r\n            source[2] - distance,\r\n          ],\r\n          highC = [\r\n            source[0] + distance,\r\n            source[1] + distance,\r\n            source[2] + distance,\r\n          ];\r\n\r\n\r\n      for (i = 0; i < data.length; i += 4) {\r\n        r = data[i];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n\r\n        if (r > lowC[0] &&\r\n            g > lowC[1] &&\r\n            b > lowC[2] &&\r\n            r < highC[0] &&\r\n            g < highC[1] &&\r\n            b < highC[2]) {\r\n          data[i + 3] = 0;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uLow: gl.getUniformLocation(program, 'uLow'),\r\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      var source = new fabric.Color(this.color).getSource(),\r\n          distance = parseFloat(this.distance),\r\n          lowC = [\r\n            0 + source[0] / 255 - distance,\r\n            0 + source[1] / 255 - distance,\r\n            0 + source[2] / 255 - distance,\r\n            1\r\n          ],\r\n          highC = [\r\n            source[0] / 255 + distance,\r\n            source[1] / 255 + distance,\r\n            source[2] / 255 + distance,\r\n            1\r\n          ];\r\n      gl.uniform4fv(uniformLocations.uLow, lowC);\r\n      gl.uniform4fv(uniformLocations.uHigh, highC);\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      return extend(this.callSuper('toObject'), {\r\n        color: this.color,\r\n        distance: this.distance\r\n      });\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\r\n   */\r\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  var matrices = {\r\n    Brownie: [\r\n      0.59970,0.34553,-0.27082,0,0.186,\r\n      -0.03770,0.86095,0.15059,0,-0.1449,\r\n      0.24113,-0.07441,0.44972,0,-0.02965,\r\n      0,0,0,1,0\r\n    ],\r\n    Vintage: [\r\n      0.62793,0.32021,-0.03965,0,0.03784,\r\n      0.02578,0.64411,0.03259,0,0.02926,\r\n      0.04660,-0.08512,0.52416,0,0.02023,\r\n      0,0,0,1,0\r\n    ],\r\n    Kodachrome: [\r\n      1.12855,-0.39673,-0.03992,0,0.24991,\r\n      -0.16404,1.08352,-0.05498,0,0.09698,\r\n      -0.16786,-0.56034,1.60148,0,0.13972,\r\n      0,0,0,1,0\r\n    ],\r\n    Technicolor: [\r\n      1.91252,-0.85453,-0.09155,0,0.04624,\r\n      -0.30878,1.76589,-0.10601,0,-0.27589,\r\n      -0.23110,-0.75018,1.84759,0,0.12137,\r\n      0,0,0,1,0\r\n    ],\r\n    Polaroid: [\r\n      1.438,-0.062,-0.062,0,0,\r\n      -0.122,1.378,-0.122,0,0,\r\n      -0.016,-0.016,1.483,0,0,\r\n      0,0,0,1,0\r\n    ],\r\n    Sepia: [\r\n      0.393, 0.769, 0.189, 0, 0,\r\n      0.349, 0.686, 0.168, 0, 0,\r\n      0.272, 0.534, 0.131, 0, 0,\r\n      0, 0, 0, 1, 0\r\n    ],\r\n    BlackWhite: [\r\n      1.5, 1.5, 1.5, 0, -1,\r\n      1.5, 1.5, 1.5, 0, -1,\r\n      1.5, 1.5, 1.5, 0, -1,\r\n      0, 0, 0, 1, 0,\r\n    ]\r\n  };\r\n\r\n  for (var key in matrices) {\r\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\r\n\r\n      /**\r\n       * Filter type\r\n       * @param {String} type\r\n       * @default\r\n       */\r\n      type: key,\r\n\r\n      /**\r\n       * Colormatrix for the effect\r\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n       * outside the -1, 1 range.\r\n       * @param {Array} matrix array of 20 numbers.\r\n       * @default\r\n       */\r\n      matrix: matrices[key],\r\n\r\n      /**\r\n       * Lock the matrix export for this kind of static, parameter less filters.\r\n       */\r\n      mainParameter: false,\r\n      /**\r\n       * Lock the colormatrix on the color part, skipping alpha\r\n       */\r\n      colorsOnly: true,\r\n\r\n    });\r\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n  }\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n  'use strict';\r\n\r\n  var fabric = global.fabric,\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Color Blend filter class\r\n   * @class fabric.Image.filter.BlendColor\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @example\r\n   * var filter = new fabric.Image.filters.BlendColor({\r\n   *  color: '#000',\r\n   *  mode: 'multiply'\r\n   * });\r\n   *\r\n   * var filter = new fabric.Image.filters.BlendImage({\r\n   *  image: fabricImageObject,\r\n   *  mode: 'multiply',\r\n   *  alpha: 0.5\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   */\r\n\r\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\r\n    type: 'BlendColor',\r\n\r\n    /**\r\n     * Color to make the blend operation with. default to a reddish color since black or white\r\n     * gives always strong result.\r\n     **/\r\n    color: '#F95C63',\r\n\r\n    /**\r\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n     * darken, lighten, overlay, exclusion, tint.\r\n     **/\r\n    mode: 'multiply',\r\n\r\n    /**\r\n     * alpha value. represent the strength of the blend color operation.\r\n     **/\r\n    alpha: 1,\r\n\r\n    /**\r\n     * Fragment source for the Multiply program\r\n     */\r\n    fragmentSource: {\r\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\r\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\r\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\r\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\r\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\r\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\r\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\r\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\r\n      overlay: 'if (uColor.r < 0.5) {\\n' +\r\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\r\n        '} else {\\n' +\r\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\r\n        '}\\n' +\r\n        'if (uColor.g < 0.5) {\\n' +\r\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\r\n        '} else {\\n' +\r\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\r\n        '}\\n' +\r\n        'if (uColor.b < 0.5) {\\n' +\r\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\r\n        '} else {\\n' +\r\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\r\n        '}\\n',\r\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\r\n        'gl_FragColor.rgb += uColor.rgb;\\n',\r\n    },\r\n\r\n    /**\r\n     * build the fragment source for the filters, joining the common part with\r\n     * the specific one.\r\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\r\n     * @return {String} the source to be compiled\r\n     * @private\r\n     */\r\n    buildSource: function(mode) {\r\n      return 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform vec4 uColor;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n          'if (color.a > 0.0) {\\n' +\r\n            this.fragmentSource[mode] +\r\n          '}\\n' +\r\n        '}';\r\n    },\r\n\r\n    /**\r\n     * Retrieves the cached shader.\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    retrieveShader: function(options) {\r\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\r\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n        shaderSource = this.buildSource(this.mode);\r\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n      }\r\n      return options.programCache[cacheKey];\r\n    },\r\n\r\n    /**\r\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          data = imageData.data, iLen = data.length,\r\n          tr, tg, tb,\r\n          r, g, b,\r\n          source, alpha1 = 1 - this.alpha;\r\n\r\n      source = new fabric.Color(this.color).getSource();\r\n      tr = source[0] * this.alpha;\r\n      tg = source[1] * this.alpha;\r\n      tb = source[2] * this.alpha;\r\n\r\n      for (var i = 0; i < iLen; i += 4) {\r\n\r\n        r = data[i];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n\r\n        switch (this.mode) {\r\n          case 'multiply':\r\n            data[i] = r * tr / 255;\r\n            data[i + 1] = g * tg / 255;\r\n            data[i + 2] = b * tb / 255;\r\n            break;\r\n          case 'screen':\r\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\r\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\r\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\r\n            break;\r\n          case 'add':\r\n            data[i] = r + tr;\r\n            data[i + 1] = g + tg;\r\n            data[i + 2] = b + tb;\r\n            break;\r\n          case 'diff':\r\n          case 'difference':\r\n            data[i] = Math.abs(r - tr);\r\n            data[i + 1] = Math.abs(g - tg);\r\n            data[i + 2] = Math.abs(b - tb);\r\n            break;\r\n          case 'subtract':\r\n            data[i] = r - tr;\r\n            data[i + 1] = g - tg;\r\n            data[i + 2] = b - tb;\r\n            break;\r\n          case 'darken':\r\n            data[i] = Math.min(r, tr);\r\n            data[i + 1] = Math.min(g, tg);\r\n            data[i + 2] = Math.min(b, tb);\r\n            break;\r\n          case 'lighten':\r\n            data[i] = Math.max(r, tr);\r\n            data[i + 1] = Math.max(g, tg);\r\n            data[i + 2] = Math.max(b, tb);\r\n            break;\r\n          case 'overlay':\r\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\r\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\r\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\r\n            break;\r\n          case 'exclusion':\r\n            data[i] = tr + r - ((2 * tr * r) / 255);\r\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\r\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\r\n            break;\r\n          case 'tint':\r\n            data[i] = tr + r * alpha1;\r\n            data[i + 1] = tg + g * alpha1;\r\n            data[i + 2] = tb + b * alpha1;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uColor: gl.getUniformLocation(program, 'uColor'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      var source = new fabric.Color(this.color).getSource();\r\n      source[0] = this.alpha * source[0] / 255;\r\n      source[1] = this.alpha * source[1] / 255;\r\n      source[2] = this.alpha * source[2] / 255;\r\n      source[3] = this.alpha;\r\n      gl.uniform4fv(uniformLocations.uColor, source);\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      return {\r\n        type: this.type,\r\n        color: this.color,\r\n        mode: this.mode,\r\n        alpha: this.alpha\r\n      };\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\r\n   */\r\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n  'use strict';\r\n\r\n  var fabric = global.fabric,\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Image Blend filter class\r\n   * @class fabric.Image.filter.BlendImage\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @example\r\n   * var filter = new fabric.Image.filters.BlendColor({\r\n   *  color: '#000',\r\n   *  mode: 'multiply'\r\n   * });\r\n   *\r\n   * var filter = new fabric.Image.filters.BlendImage({\r\n   *  image: fabricImageObject,\r\n   *  mode: 'multiply',\r\n   *  alpha: 0.5\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   */\r\n\r\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\r\n    type: 'BlendImage',\r\n\r\n    /**\r\n     * Color to make the blend operation with. default to a reddish color since black or white\r\n     * gives always strong result.\r\n     **/\r\n    image: null,\r\n\r\n    /**\r\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\r\n     * darken, lighten, overlay, exclusion, tint.\r\n     **/\r\n    mode: 'multiply',\r\n\r\n    /**\r\n     * alpha value. represent the strength of the blend image operation.\r\n     * not implemented.\r\n     **/\r\n    alpha: 1,\r\n\r\n    vertexSource: 'attribute vec2 aPosition;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'varying vec2 vTexCoord2;\\n' +\r\n      'uniform mat3 uTransformMatrix;\\n' +\r\n      'void main() {\\n' +\r\n        'vTexCoord = aPosition;\\n' +\r\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\r\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Fragment source for the Multiply program\r\n     */\r\n    fragmentSource: {\r\n      multiply: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform sampler2D uImage;\\n' +\r\n        'uniform vec4 uColor;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'varying vec2 vTexCoord2;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n          'color.rgba *= color2.rgba;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n      mask: 'precision highp float;\\n' +\r\n        'uniform sampler2D uTexture;\\n' +\r\n        'uniform sampler2D uImage;\\n' +\r\n        'uniform vec4 uColor;\\n' +\r\n        'varying vec2 vTexCoord;\\n' +\r\n        'varying vec2 vTexCoord2;\\n' +\r\n        'void main() {\\n' +\r\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\r\n          'color.a = color2.a;\\n' +\r\n          'gl_FragColor = color;\\n' +\r\n        '}',\r\n    },\r\n\r\n    /**\r\n     * Retrieves the cached shader.\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    retrieveShader: function(options) {\r\n      var cacheKey = this.type + '_' + this.mode;\r\n      var shaderSource = this.fragmentSource[this.mode];\r\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\r\n      }\r\n      return options.programCache[cacheKey];\r\n    },\r\n\r\n    applyToWebGL: function(options) {\r\n      // load texture to blend.\r\n      var gl = options.context,\r\n          texture = this.createTexture(options.filterBackend, this.image);\r\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\r\n      this.callSuper('applyToWebGL', options);\r\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\r\n    },\r\n\r\n    createTexture: function(backend, image) {\r\n      return backend.getCachedTexture(image.cacheKey, image._element);\r\n    },\r\n\r\n    /**\r\n     * Calculate a transformMatrix to adapt the image to blend over\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    calculateMatrix: function() {\r\n      var image = this.image,\r\n          width = image._element.width,\r\n          height = image._element.height;\r\n      return [\r\n        1 / image.scaleX, 0, 0,\r\n        0, 1 / image.scaleY, 0,\r\n        -image.left / width, -image.top / height, 1\r\n      ];\r\n    },\r\n\r\n    /**\r\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          resources = options.filterBackend.resources,\r\n          data = imageData.data, iLen = data.length,\r\n          width = imageData.width,\r\n          height = imageData.height,\r\n          tr, tg, tb, ta,\r\n          r, g, b, a,\r\n          canvas1, context, image = this.image, blendData;\r\n\r\n      if (!resources.blendImage) {\r\n        resources.blendImage = fabric.util.createCanvasElement();\r\n      }\r\n      canvas1 = resources.blendImage;\r\n      context = canvas1.getContext('2d');\r\n      if (canvas1.width !== width || canvas1.height !== height) {\r\n        canvas1.width = width;\r\n        canvas1.height = height;\r\n      }\r\n      else {\r\n        context.clearRect(0, 0, width, height);\r\n      }\r\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\r\n      context.drawImage(image._element, 0, 0, width, height);\r\n      blendData = context.getImageData(0, 0, width, height).data;\r\n      for (var i = 0; i < iLen; i += 4) {\r\n\r\n        r = data[i];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n        a = data[i + 3];\r\n\r\n        tr = blendData[i];\r\n        tg = blendData[i + 1];\r\n        tb = blendData[i + 2];\r\n        ta = blendData[i + 3];\r\n\r\n        switch (this.mode) {\r\n          case 'multiply':\r\n            data[i] = r * tr / 255;\r\n            data[i + 1] = g * tg / 255;\r\n            data[i + 2] = b * tb / 255;\r\n            data[i + 3] = a * ta / 255;\r\n            break;\r\n          case 'mask':\r\n            data[i + 3] = ta;\r\n            break;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\r\n        uImage: gl.getUniformLocation(program, 'uImage'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      var matrix = this.calculateMatrix();\r\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\r\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      return {\r\n        type: this.type,\r\n        image: this.image && this.image.toObject(),\r\n        mode: this.mode,\r\n        alpha: this.alpha\r\n      };\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} callback to be invoked after filter creation\r\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\r\n   */\r\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\r\n    fabric.Image.fromObject(object.image, function(image) {\r\n      var options = fabric.util.object.clone(object);\r\n      options.image = image;\r\n      callback(new fabric.Image.filters.BlendImage(options));\r\n    });\r\n  };\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\r\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\r\n      ceil = Math.ceil,\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Resize image filter class\r\n   * @class fabric.Image.filters.Resize\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Resize();\r\n   * object.filters.push(filter);\r\n   * object.applyFilters(canvas.renderAll.bind(canvas));\r\n   */\r\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Resize',\r\n\r\n    /**\r\n     * Resize type\r\n     * for webgl resizeType is just lanczos, for canvas2d can be:\r\n     * bilinear, hermite, sliceHack, lanczos.\r\n     * @param {String} resizeType\r\n     * @default\r\n     */\r\n    resizeType: 'hermite',\r\n\r\n    /**\r\n     * Scale factor for resizing, x axis\r\n     * @param {Number} scaleX\r\n     * @default\r\n     */\r\n    scaleX: 1,\r\n\r\n    /**\r\n     * Scale factor for resizing, y axis\r\n     * @param {Number} scaleY\r\n     * @default\r\n     */\r\n    scaleY: 1,\r\n\r\n    /**\r\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\r\n     * @param {Number} lanczosLobes\r\n     * @default\r\n     */\r\n    lanczosLobes: 3,\r\n\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\r\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\r\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\r\n    },\r\n\r\n    /**\r\n     * Retrieves the cached shader.\r\n     * @param {Object} options\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    retrieveShader: function(options) {\r\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\r\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\r\n        var fragmentShader = this.generateShader(filterWindow);\r\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\r\n      }\r\n      return options.programCache[cacheKey];\r\n    },\r\n\r\n    getFilterWindow: function() {\r\n      var scale = this.tempScale;\r\n      return Math.ceil(this.lanczosLobes / scale);\r\n    },\r\n\r\n    getTaps: function() {\r\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\r\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\r\n      for (var i = 1; i <= filterWindow; i++) {\r\n        taps[i - 1] = lobeFunction(i * scale);\r\n      }\r\n      return taps;\r\n    },\r\n\r\n    /**\r\n     * Generate vertex and shader sources from the necessary steps numbers\r\n     * @param {Number} filterWindow\r\n     */\r\n    generateShader: function(filterWindow) {\r\n      var offsets = new Array(filterWindow),\r\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\r\n\r\n      for (var i = 1; i <= filterWindow; i++) {\r\n        offsets[i - 1] = i + '.0 * uDelta';\r\n      }\r\n\r\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\r\n      fragmentShader += 'void main() {\\n';\r\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\r\n      fragmentShader += '  float sum = 1.0;\\n';\r\n\r\n      offsets.forEach(function(offset, i) {\r\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\r\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\r\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\r\n      });\r\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\r\n      fragmentShader += '}';\r\n      return fragmentShader;\r\n    },\r\n\r\n    fragmentSourceTOP: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform vec2 uDelta;\\n' +\r\n      'varying vec2 vTexCoord;\\n',\r\n\r\n    /**\r\n     * Apply the resize filter to the image\r\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyTo: function(options) {\r\n      if (options.webgl) {\r\n        options.passes++;\r\n        this.width = options.sourceWidth;\r\n        this.horizontal = true;\r\n        this.dW = Math.round(this.width * this.scaleX);\r\n        this.dH = options.sourceHeight;\r\n        this.tempScale = this.dW / this.width;\r\n        this.taps = this.getTaps();\r\n        options.destinationWidth = this.dW;\r\n        this._setupFrameBuffer(options);\r\n        this.applyToWebGL(options);\r\n        this._swapTextures(options);\r\n        options.sourceWidth = options.destinationWidth;\r\n\r\n        this.height = options.sourceHeight;\r\n        this.horizontal = false;\r\n        this.dH = Math.round(this.height * this.scaleY);\r\n        this.tempScale = this.dH / this.height;\r\n        this.taps = this.getTaps();\r\n        options.destinationHeight = this.dH;\r\n        this._setupFrameBuffer(options);\r\n        this.applyToWebGL(options);\r\n        this._swapTextures(options);\r\n        options.sourceHeight = options.destinationHeight;\r\n      }\r\n      else {\r\n        this.applyTo2d(options);\r\n      }\r\n    },\r\n\r\n    isNeutralState: function() {\r\n      return this.scaleX === 1 && this.scaleY === 1;\r\n    },\r\n\r\n    lanczosCreate: function(lobes) {\r\n      return function(x) {\r\n        if (x >= lobes || x <= -lobes) {\r\n          return 0.0;\r\n        }\r\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\r\n          return 1.0;\r\n        }\r\n        x *= Math.PI;\r\n        var xx = x / lobes;\r\n        return (sin(x) / x) * sin(xx) / xx;\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Applies filter to canvas element\r\n     * @memberOf fabric.Image.filters.Resize.prototype\r\n     * @param {Object} canvasEl Canvas element to apply filter to\r\n     * @param {Number} scaleX\r\n     * @param {Number} scaleY\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData,\r\n          scaleX = this.scaleX,\r\n          scaleY = this.scaleY;\r\n\r\n      this.rcpScaleX = 1 / scaleX;\r\n      this.rcpScaleY = 1 / scaleY;\r\n\r\n      var oW = imageData.width, oH = imageData.height,\r\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\r\n          newData;\r\n\r\n      if (this.resizeType === 'sliceHack') {\r\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\r\n      }\r\n      else if (this.resizeType === 'hermite') {\r\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\r\n      }\r\n      else if (this.resizeType === 'bilinear') {\r\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\r\n      }\r\n      else if (this.resizeType === 'lanczos') {\r\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\r\n      }\r\n      options.imageData = newData;\r\n    },\r\n\r\n    /**\r\n     * Filter sliceByTwo\r\n     * @param {Object} canvasEl Canvas element to apply filter to\r\n     * @param {Number} oW Original Width\r\n     * @param {Number} oH Original Height\r\n     * @param {Number} dW Destination Width\r\n     * @param {Number} dH Destination Height\r\n     * @returns {ImageData}\r\n     */\r\n    sliceByTwo: function(options, oW, oH, dW, dH) {\r\n      var imageData = options.imageData,\r\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\r\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\r\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\r\n      if (!resources.sliceByTwo) {\r\n        resources.sliceByTwo = document.createElement('canvas');\r\n      }\r\n      tmpCanvas = resources.sliceByTwo;\r\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\r\n        tmpCanvas.width = oW * 1.5;\r\n        tmpCanvas.height = oH;\r\n      }\r\n      ctx = tmpCanvas.getContext('2d');\r\n      ctx.clearRect(0, 0, oW * 1.5, oH);\r\n      ctx.putImageData(imageData, 0, 0);\r\n\r\n      dW = floor(dW);\r\n      dH = floor(dH);\r\n\r\n      while (!doneW || !doneH) {\r\n        oW = stepW;\r\n        oH = stepH;\r\n        if (dW < floor(stepW * mult)) {\r\n          stepW = floor(stepW * mult);\r\n        }\r\n        else {\r\n          stepW = dW;\r\n          doneW = true;\r\n        }\r\n        if (dH < floor(stepH * mult)) {\r\n          stepH = floor(stepH * mult);\r\n        }\r\n        else {\r\n          stepH = dH;\r\n          doneH = true;\r\n        }\r\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\r\n        sX = dX;\r\n        sY = dY;\r\n        dY += stepH;\r\n      }\r\n      return ctx.getImageData(sX, sY, dW, dH);\r\n    },\r\n\r\n    /**\r\n     * Filter lanczosResize\r\n     * @param {Object} canvasEl Canvas element to apply filter to\r\n     * @param {Number} oW Original Width\r\n     * @param {Number} oH Original Height\r\n     * @param {Number} dW Destination Width\r\n     * @param {Number} dH Destination Height\r\n     * @returns {ImageData}\r\n     */\r\n    lanczosResize: function(options, oW, oH, dW, dH) {\r\n\r\n      function process(u) {\r\n        var v, i, weight, idx, a, red, green,\r\n            blue, alpha, fX, fY;\r\n        center.x = (u + 0.5) * ratioX;\r\n        icenter.x = floor(center.x);\r\n        for (v = 0; v < dH; v++) {\r\n          center.y = (v + 0.5) * ratioY;\r\n          icenter.y = floor(center.y);\r\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\r\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\r\n            if (i < 0 || i >= oW) {\r\n              continue;\r\n            }\r\n            fX = floor(1000 * abs(i - center.x));\r\n            if (!cacheLanc[fX]) {\r\n              cacheLanc[fX] = { };\r\n            }\r\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\r\n              if (j < 0 || j >= oH) {\r\n                continue;\r\n              }\r\n              fY = floor(1000 * abs(j - center.y));\r\n              if (!cacheLanc[fX][fY]) {\r\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\r\n              }\r\n              weight = cacheLanc[fX][fY];\r\n              if (weight > 0) {\r\n                idx = (j * oW + i) * 4;\r\n                a += weight;\r\n                red += weight * srcData[idx];\r\n                green += weight * srcData[idx + 1];\r\n                blue += weight * srcData[idx + 2];\r\n                alpha += weight * srcData[idx + 3];\r\n              }\r\n            }\r\n          }\r\n          idx = (v * dW + u) * 4;\r\n          destData[idx] = red / a;\r\n          destData[idx + 1] = green / a;\r\n          destData[idx + 2] = blue / a;\r\n          destData[idx + 3] = alpha / a;\r\n        }\r\n\r\n        if (++u < dW) {\r\n          return process(u);\r\n        }\r\n        else {\r\n          return destImg;\r\n        }\r\n      }\r\n\r\n      var srcData = options.imageData.data,\r\n          destImg = options.ctx.createImageData(dW, dH),\r\n          destData = destImg.data,\r\n          lanczos = this.lanczosCreate(this.lanczosLobes),\r\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\r\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\r\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\r\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\r\n          cacheLanc = { }, center = { }, icenter = { };\r\n\r\n      return process(0);\r\n    },\r\n\r\n    /**\r\n     * bilinearFiltering\r\n     * @param {Object} canvasEl Canvas element to apply filter to\r\n     * @param {Number} oW Original Width\r\n     * @param {Number} oH Original Height\r\n     * @param {Number} dW Destination Width\r\n     * @param {Number} dH Destination Height\r\n     * @returns {ImageData}\r\n     */\r\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\r\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\r\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\r\n          ratioY = this.rcpScaleY,\r\n          w4 = 4 * (oW - 1), img = options.imageData,\r\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\r\n          destPixels = destImage.data;\r\n      for (i = 0; i < dH; i++) {\r\n        for (j = 0; j < dW; j++) {\r\n          x = floor(ratioX * j);\r\n          y = floor(ratioY * i);\r\n          xDiff = ratioX * j - x;\r\n          yDiff = ratioY * i - y;\r\n          origPix = 4 * (y * oW + x);\r\n\r\n          for (chnl = 0; chnl < 4; chnl++) {\r\n            a = pixels[origPix + chnl];\r\n            b = pixels[origPix + 4 + chnl];\r\n            c = pixels[origPix + w4 + chnl];\r\n            d = pixels[origPix + w4 + 4 + chnl];\r\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\r\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\r\n            destPixels[offset++] = color;\r\n          }\r\n        }\r\n      }\r\n      return destImage;\r\n    },\r\n\r\n    /**\r\n     * hermiteFastResize\r\n     * @param {Object} canvasEl Canvas element to apply filter to\r\n     * @param {Number} oW Original Width\r\n     * @param {Number} oH Original Height\r\n     * @param {Number} dW Destination Width\r\n     * @param {Number} dH Destination Height\r\n     * @returns {ImageData}\r\n     */\r\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\r\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\r\n          ratioWHalf = ceil(ratioW / 2),\r\n          ratioHHalf = ceil(ratioH / 2),\r\n          img = options.imageData, data = img.data,\r\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\r\n      for (var j = 0; j < dH; j++) {\r\n        for (var i = 0; i < dW; i++) {\r\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\r\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\r\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\r\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\r\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\r\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\r\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\r\n                  w = sqrt(w0 + dx * dx);\r\n              /* eslint-disable max-depth */\r\n              if (w > 1 && w < -1) {\r\n                continue;\r\n              }\r\n              //hermite filter\r\n              weight = 2 * w * w * w - 3 * w * w + 1;\r\n              if (weight > 0) {\r\n                dx = 4 * (xx + yy * oW);\r\n                //alpha\r\n                gxA += weight * data[dx + 3];\r\n                weightsAlpha += weight;\r\n                //colors\r\n                if (data[dx + 3] < 255) {\r\n                  weight = weight * data[dx + 3] / 250;\r\n                }\r\n                gxR += weight * data[dx];\r\n                gxG += weight * data[dx + 1];\r\n                gxB += weight * data[dx + 2];\r\n                weights += weight;\r\n              }\r\n              /* eslint-enable max-depth */\r\n            }\r\n          }\r\n          data2[x2] = gxR / weights;\r\n          data2[x2 + 1] = gxG / weights;\r\n          data2[x2 + 2] = gxB / weights;\r\n          data2[x2 + 3] = gxA / weightsAlpha;\r\n        }\r\n      }\r\n      return img2;\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function() {\r\n      return {\r\n        type: this.type,\r\n        scaleX: this.scaleX,\r\n        scaleY: this.scaleY,\r\n        resizeType: this.resizeType,\r\n        lanczosLobes: this.lanczosLobes\r\n      };\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\r\n   */\r\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Contrast filter class\r\n   * @class fabric.Image.filters.Contrast\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Contrast({\r\n   *   contrast: 0.25\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Contrast',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform float uContrast;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\r\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * contrast value, range from -1 to 1.\r\n     * @param {Number} contrast\r\n     * @default 0\r\n     */\r\n    contrast: 0,\r\n\r\n    mainParameter: 'contrast',\r\n\r\n    /**\r\n     * Constructor\r\n     * @memberOf fabric.Image.filters.Contrast.prototype\r\n     * @param {Object} [options] Options object\r\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\r\n     */\r\n\r\n    /**\r\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\r\n      *\r\n      * @param {Object} options\r\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n      */\r\n    applyTo2d: function(options) {\r\n      if (this.contrast === 0) {\r\n        return;\r\n      }\r\n      var imageData = options.imageData, i, len,\r\n          data = imageData.data, len = data.length,\r\n          contrast = Math.floor(this.contrast * 255),\r\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\r\n\r\n      for (i = 0; i < len; i += 4) {\r\n        data[i] = contrastF * (data[i] - 128) + 128;\r\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\r\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\r\n   */\r\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Saturate filter class\r\n   * @class fabric.Image.filters.Saturation\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Saturation({\r\n   *   saturation: 1\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Saturation',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform float uSaturation;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'float rgMax = max(color.r, color.g);\\n' +\r\n        'float rgbMax = max(rgMax, color.b);\\n' +\r\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\r\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\r\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Saturation value, from -1 to 1.\r\n     * Increases/decreases the color saturation.\r\n     * A value of 0 has no effect.\r\n     * \r\n     * @param {Number} saturation\r\n     * @default\r\n     */\r\n    saturation: 0,\r\n\r\n    mainParameter: 'saturation',\r\n\r\n    /**\r\n     * Constructor\r\n     * @memberOf fabric.Image.filters.Saturate.prototype\r\n     * @param {Object} [options] Options object\r\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\r\n     */\r\n\r\n    /**\r\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      if (this.saturation === 0) {\r\n        return;\r\n      }\r\n      var imageData = options.imageData,\r\n          data = imageData.data, len = data.length,\r\n          adjust = -this.saturation, i, max;\r\n\r\n      for (i = 0; i < len; i += 4) {\r\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\r\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\r\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\r\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\r\n   */\r\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Vibrance filter class\r\n   * @class fabric.Image.filters.Vibrance\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Vibrance#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Vibrance({\r\n   *   vibrance: 1\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.Vibrance = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Vibrance.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Vibrance',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform float uVibrance;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'float max = max(color.r, max(color.g, color.b));\\n' +\r\n        'float avg = (color.r + color.g + color.b) / 3.0;\\n' +\r\n        'float amt = (abs(max - avg) * 2.0) * uVibrance;\\n' +\r\n        'color.r += max != color.r ? (max - color.r) * amt : 0.00;\\n' +\r\n        'color.g += max != color.g ? (max - color.g) * amt : 0.00;\\n' +\r\n        'color.b += max != color.b ? (max - color.b) * amt : 0.00;\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Vibrance value, from -1 to 1.\r\n     * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\r\n     * A value of 0 has no effect.\r\n     * \r\n     * @param {Number} vibrance\r\n     * @default\r\n     */\r\n    vibrance: 0,\r\n\r\n    mainParameter: 'vibrance',\r\n\r\n    /**\r\n     * Constructor\r\n     * @memberOf fabric.Image.filters.Vibrance.prototype\r\n     * @param {Object} [options] Options object\r\n     * @param {Number} [options.vibrance=0] Vibrance value for the image (between -1 and 1)\r\n     */\r\n\r\n    /**\r\n     * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      if (this.vibrance === 0) {\r\n        return;\r\n      }\r\n      var imageData = options.imageData,\r\n          data = imageData.data, len = data.length,\r\n          adjust = -this.vibrance, i, max, avg, amt;\r\n\r\n      for (i = 0; i < len; i += 4) {\r\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\r\n        avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n        amt = ((Math.abs(max - avg) * 2 / 255) * adjust);\r\n        data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\r\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\r\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uVibrance: gl.getUniformLocation(program, 'uVibrance'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Vibrance} Instance of fabric.Image.filters.Vibrance\r\n   */\r\n  fabric.Image.filters.Vibrance.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Blur filter class\r\n   * @class fabric.Image.filters.Blur\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Blur({\r\n   *   blur: 0.5\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   * canvas.renderAll();\r\n   */\r\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\r\n\r\n    type: 'Blur',\r\n\r\n    /*\r\n'gl_FragColor = vec4(0.0);',\r\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\r\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\r\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\r\n*/\r\n\r\n    /* eslint-disable max-len */\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform vec2 uDelta;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'const float nSamples = 15.0;\\n' +\r\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\r\n      'float random(vec3 scale) {\\n' +\r\n        /* use the fragment position for a different seed per-pixel */\r\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\r\n      '}\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = vec4(0.0);\\n' +\r\n        'float total = 0.0;\\n' +\r\n        'float offset = random(v3offset);\\n' +\r\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\r\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\r\n          'float weight = 1.0 - abs(percent);\\n' +\r\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\r\n          'total += weight;\\n' +\r\n        '}\\n' +\r\n        'gl_FragColor = color / total;\\n' +\r\n      '}',\r\n    /* eslint-enable max-len */\r\n\r\n    /**\r\n     * blur value, in percentage of image dimensions.\r\n     * specific to keep the image blur constant at different resolutions\r\n     * range between 0 and 1.\r\n     */\r\n    blur: 0,\r\n\r\n    mainParameter: 'blur',\r\n\r\n    applyTo: function(options) {\r\n      if (options.webgl) {\r\n        // this aspectRatio is used to give the same blur to vertical and horizontal\r\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\r\n        options.passes++;\r\n        this._setupFrameBuffer(options);\r\n        this.horizontal = true;\r\n        this.applyToWebGL(options);\r\n        this._swapTextures(options);\r\n        this._setupFrameBuffer(options);\r\n        this.horizontal = false;\r\n        this.applyToWebGL(options);\r\n        this._swapTextures(options);\r\n      }\r\n      else {\r\n        this.applyTo2d(options);\r\n      }\r\n    },\r\n\r\n    applyTo2d: function(options) {\r\n      // paint canvasEl with current image data.\r\n      //options.ctx.putImageData(options.imageData, 0, 0);\r\n      options.imageData = this.simpleBlur(options);\r\n    },\r\n\r\n    simpleBlur: function(options) {\r\n      var resources = options.filterBackend.resources, canvas1, canvas2,\r\n          width = options.imageData.width,\r\n          height = options.imageData.height;\r\n\r\n      if (!resources.blurLayer1) {\r\n        resources.blurLayer1 = fabric.util.createCanvasElement();\r\n        resources.blurLayer2 = fabric.util.createCanvasElement();\r\n      }\r\n      canvas1 = resources.blurLayer1;\r\n      canvas2 = resources.blurLayer2;\r\n      if (canvas1.width !== width || canvas1.height !== height) {\r\n        canvas2.width = canvas1.width = width;\r\n        canvas2.height = canvas1.height = height;\r\n      }\r\n      var ctx1 = canvas1.getContext('2d'),\r\n          ctx2 = canvas2.getContext('2d'),\r\n          nSamples = 15,\r\n          random, percent, j, i,\r\n          blur = this.blur * 0.06 * 0.5;\r\n\r\n      // load first canvas\r\n      ctx1.putImageData(options.imageData, 0, 0);\r\n      ctx2.clearRect(0, 0, width, height);\r\n\r\n      for (i = -nSamples; i <= nSamples; i++) {\r\n        random = (Math.random() - 0.5) / 4;\r\n        percent = i / nSamples;\r\n        j = blur * percent * width + random;\r\n        ctx2.globalAlpha = 1 - Math.abs(percent);\r\n        ctx2.drawImage(canvas1, j, random);\r\n        ctx1.drawImage(canvas2, 0, 0);\r\n        ctx2.globalAlpha = 1;\r\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n      }\r\n      for (i = -nSamples; i <= nSamples; i++) {\r\n        random = (Math.random() - 0.5) / 4;\r\n        percent = i / nSamples;\r\n        j = blur * percent * height + random;\r\n        ctx2.globalAlpha = 1 - Math.abs(percent);\r\n        ctx2.drawImage(canvas1, random, j);\r\n        ctx1.drawImage(canvas2, 0, 0);\r\n        ctx2.globalAlpha = 1;\r\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n      }\r\n      options.ctx.drawImage(canvas1, 0, 0);\r\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\r\n      ctx1.globalAlpha = 1;\r\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\r\n      return newImageData;\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        delta: gl.getUniformLocation(program, 'uDelta'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      var delta = this.chooseRightDelta();\r\n      gl.uniform2fv(uniformLocations.delta, delta);\r\n    },\r\n\r\n    /**\r\n     * choose right value of image percentage to blur with\r\n     * @returns {Array} a numeric array with delta values\r\n     */\r\n    chooseRightDelta: function() {\r\n      var blurScale = 1, delta = [0, 0], blur;\r\n      if (this.horizontal) {\r\n        if (this.aspectRatio > 1) {\r\n          // image is wide, i want to shrink radius horizontal\r\n          blurScale = 1 / this.aspectRatio;\r\n        }\r\n      }\r\n      else {\r\n        if (this.aspectRatio < 1) {\r\n          // image is tall, i want to shrink radius vertical\r\n          blurScale = this.aspectRatio;\r\n        }\r\n      }\r\n      blur = blurScale * this.blur * 0.12;\r\n      if (this.horizontal) {\r\n        delta[0] = blur;\r\n      }\r\n      else {\r\n        delta[1] = blur;\r\n      }\r\n      return delta;\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\r\n   */\r\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * Gamma filter class\r\n   * @class fabric.Image.filters.Gamma\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.Gamma({\r\n   *   gamma: [1, 0.5, 2.1]\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'Gamma',\r\n\r\n    fragmentSource: 'precision highp float;\\n' +\r\n      'uniform sampler2D uTexture;\\n' +\r\n      'uniform vec3 uGamma;\\n' +\r\n      'varying vec2 vTexCoord;\\n' +\r\n      'void main() {\\n' +\r\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\r\n        'vec3 correction = (1.0 / uGamma);\\n' +\r\n        'color.r = pow(color.r, correction.r);\\n' +\r\n        'color.g = pow(color.g, correction.g);\\n' +\r\n        'color.b = pow(color.b, correction.b);\\n' +\r\n        'gl_FragColor = color;\\n' +\r\n        'gl_FragColor.rgb *= color.a;\\n' +\r\n      '}',\r\n\r\n    /**\r\n     * Gamma array value, from 0.01 to 2.2.\r\n     * @param {Array} gamma\r\n     * @default\r\n     */\r\n    gamma: [1, 1, 1],\r\n\r\n    /**\r\n     * Describe the property that is the filter parameter\r\n     * @param {String} m\r\n     * @default\r\n     */\r\n    mainParameter: 'gamma',\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     */\r\n    initialize: function(options) {\r\n      this.gamma = [1, 1, 1];\r\n      filters.BaseFilter.prototype.initialize.call(this, options);\r\n    },\r\n\r\n    /**\r\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\r\n     *\r\n     * @param {Object} options\r\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n     */\r\n    applyTo2d: function(options) {\r\n      var imageData = options.imageData, data = imageData.data,\r\n          gamma = this.gamma, len = data.length,\r\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\r\n          bInv = 1 / gamma[2], i;\r\n\r\n      if (!this.rVals) {\r\n        // eslint-disable-next-line\r\n        this.rVals = new Uint8Array(256);\r\n        // eslint-disable-next-line\r\n        this.gVals = new Uint8Array(256);\r\n        // eslint-disable-next-line\r\n        this.bVals = new Uint8Array(256);\r\n      }\r\n\r\n      // This is an optimization - pre-compute a look-up table for each color channel\r\n      // instead of performing these pow calls for each pixel in the image.\r\n      for (i = 0, len = 256; i < len; i++) {\r\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\r\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\r\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\r\n      }\r\n      for (i = 0, len = data.length; i < len; i += 4) {\r\n        data[i] = this.rVals[data[i]];\r\n        data[i + 1] = this.gVals[data[i + 1]];\r\n        data[i + 2] = this.bVals[data[i + 2]];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return WebGL uniform locations for this filter's shader.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\r\n     */\r\n    getUniformLocations: function(gl, program) {\r\n      return {\r\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Send data from this filter to its shader program's uniforms.\r\n     *\r\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n     */\r\n    sendUniformData: function(gl, uniformLocations) {\r\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\r\n   */\r\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * A container class that knows how to apply a sequence of filters to an input image.\r\n   */\r\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\r\n\r\n    type: 'Composed',\r\n\r\n    /**\r\n     * A non sparse array of filters to apply\r\n     */\r\n    subFilters: [],\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {Object} [options] Options object\r\n     */\r\n    initialize: function(options) {\r\n      this.callSuper('initialize', options);\r\n      // create a new array instead mutating the prototype with push\r\n      this.subFilters = this.subFilters.slice(0);\r\n    },\r\n\r\n    /**\r\n     * Apply this container's filters to the input image provided.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be applied.\r\n     */\r\n    applyTo: function(options) {\r\n      options.passes += this.subFilters.length - 1;\r\n      this.subFilters.forEach(function(filter) {\r\n        filter.applyTo(options);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Serialize this filter into JSON.\r\n     *\r\n     * @returns {Object} A JSON representation of this filter.\r\n     */\r\n    toObject: function() {\r\n      return fabric.util.object.extend(this.callSuper('toObject'), {\r\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\r\n      });\r\n    },\r\n\r\n    isNeutralState: function() {\r\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\r\n   */\r\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\r\n    var filters = object.subFilters || [],\r\n        subFilters = filters.map(function(filter) {\r\n          return new fabric.Image.filters[filter.type](filter);\r\n        }),\r\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\r\n    callback && callback(instance);\r\n    return instance;\r\n  };\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric  = global.fabric || (global.fabric = { }),\r\n      filters = fabric.Image.filters,\r\n      createClass = fabric.util.createClass;\r\n\r\n  /**\r\n   * HueRotation filter class\r\n   * @class fabric.Image.filters.HueRotation\r\n   * @memberOf fabric.Image.filters\r\n   * @extends fabric.Image.filters.BaseFilter\r\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @example\r\n   * var filter = new fabric.Image.filters.HueRotation({\r\n   *   rotation: -0.5\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\r\n\r\n    /**\r\n     * Filter type\r\n     * @param {String} type\r\n     * @default\r\n     */\r\n    type: 'HueRotation',\r\n\r\n    /**\r\n     * HueRotation value, from -1 to 1.\r\n     * the unit is radians\r\n     * @param {Number} myParameter\r\n     * @default\r\n     */\r\n    rotation: 0,\r\n\r\n    /**\r\n     * Describe the property that is the filter parameter\r\n     * @param {String} m\r\n     * @default\r\n     */\r\n    mainParameter: 'rotation',\r\n\r\n    calculateMatrix: function() {\r\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\r\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\r\n      this.matrix = [\r\n        1, 0, 0, 0, 0,\r\n        0, 1, 0, 0, 0,\r\n        0, 0, 1, 0, 0,\r\n        0, 0, 0, 1, 0\r\n      ];\r\n      this.matrix[0] = cos + OneMinusCos / 3;\r\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\r\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\r\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\r\n      this.matrix[6] = cos + aThird * OneMinusCos;\r\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\r\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\r\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\r\n      this.matrix[12] = cos + aThird * OneMinusCos;\r\n    },\r\n\r\n    /**\r\n     * HueRotation isNeutralState implementation\r\n     * Used only in image applyFilters to discard filters that will not have an effect\r\n     * on the image\r\n     * @param {Object} options\r\n     **/\r\n    isNeutralState: function(options) {\r\n      this.calculateMatrix();\r\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\r\n    },\r\n\r\n    /**\r\n     * Apply this filter to the input image data provided.\r\n     *\r\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Number} options.passes The number of filters remaining to be executed\r\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n     */\r\n    applyTo: function(options) {\r\n      this.calculateMatrix();\r\n      filters.BaseFilter.prototype.applyTo.call(this, options);\r\n    },\r\n\r\n  });\r\n\r\n  /**\r\n   * Returns filter instance from an object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] to be invoked after filter creation\r\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\r\n   */\r\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = { }),\r\n      clone = fabric.util.object.clone;\r\n\r\n  if (fabric.Text) {\r\n    fabric.warn('fabric.Text is already defined');\r\n    return;\r\n  }\r\n\r\n  var additionalProps =\r\n    ('fontFamily fontWeight fontSize text underline overline linethrough' +\r\n    ' textAlign fontStyle lineHeight textBackgroundColor charSpacing styles' +\r\n    ' direction path pathStartOffset pathSide').split(' ');\r\n\r\n  /**\r\n   * Text class\r\n   * @class fabric.Text\r\n   * @extends fabric.Object\r\n   * @return {fabric.Text} thisArg\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\r\n   * @see {@link fabric.Text#initialize} for constructor definition\r\n   */\r\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\r\n\r\n    /**\r\n     * Properties which when set cause object to change dimensions\r\n     * @type Array\r\n     * @private\r\n     */\r\n    _dimensionAffectingProps: [\r\n      'fontSize',\r\n      'fontWeight',\r\n      'fontFamily',\r\n      'fontStyle',\r\n      'lineHeight',\r\n      'text',\r\n      'charSpacing',\r\n      'textAlign',\r\n      'styles',\r\n      'path',\r\n      'pathStartOffset',\r\n      'pathSide'\r\n    ],\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _reNewline: /\\r?\\n/,\r\n\r\n    /**\r\n     * Use this regular expression to filter for whitespaces that is not a new line.\r\n     * Mostly used when text is 'justify' aligned.\r\n     * @private\r\n     */\r\n    _reSpacesAndTabs: /[ \\t\\r]/g,\r\n\r\n    /**\r\n     * Use this regular expression to filter for whitespace that is not a new line.\r\n     * Mostly used when text is 'justify' aligned.\r\n     * @private\r\n     */\r\n    _reSpaceAndTab: /[ \\t\\r]/,\r\n\r\n    /**\r\n     * Use this regular expression to filter consecutive groups of non spaces.\r\n     * Mostly used when text is 'justify' aligned.\r\n     * @private\r\n     */\r\n    _reWords: /\\S+/g,\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type:                 'text',\r\n\r\n    /**\r\n     * Font size (in pixels)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    fontSize:             40,\r\n\r\n    /**\r\n     * Font weight (e.g. bold, normal, 400, 600, 800)\r\n     * @type {(Number|String)}\r\n     * @default\r\n     */\r\n    fontWeight:           'normal',\r\n\r\n    /**\r\n     * Font family\r\n     * @type String\r\n     * @default\r\n     */\r\n    fontFamily:           'Times New Roman',\r\n\r\n    /**\r\n     * Text decoration underline.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    underline:       false,\r\n\r\n    /**\r\n     * Text decoration overline.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    overline:       false,\r\n\r\n    /**\r\n     * Text decoration linethrough.\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    linethrough:       false,\r\n\r\n    /**\r\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\r\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\r\n     * @type String\r\n     * @default\r\n     */\r\n    textAlign:            'left',\r\n\r\n    /**\r\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\r\n     * @type String\r\n     * @default\r\n     */\r\n    fontStyle:            'normal',\r\n\r\n    /**\r\n     * Line height\r\n     * @type Number\r\n     * @default\r\n     */\r\n    lineHeight:           1.16,\r\n\r\n    /**\r\n     * Superscript schema object (minimum overlap)\r\n     * @type {Object}\r\n     * @default\r\n     */\r\n    superscript: {\r\n      size:      0.60, // fontSize factor\r\n      baseline: -0.35  // baseline-shift factor (upwards)\r\n    },\r\n\r\n    /**\r\n     * Subscript schema object (minimum overlap)\r\n     * @type {Object}\r\n     * @default\r\n     */\r\n    subscript: {\r\n      size:      0.60, // fontSize factor\r\n      baseline:  0.11  // baseline-shift factor (downwards)\r\n    },\r\n\r\n    /**\r\n     * Background color of text lines\r\n     * @type String\r\n     * @default\r\n     */\r\n    textBackgroundColor:  '',\r\n\r\n    /**\r\n     * List of properties to consider when checking if\r\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\r\n     * as well as for history (undo/redo) purposes\r\n     * @type Array\r\n     */\r\n    stateProperties: fabric.Object.prototype.stateProperties.concat(additionalProps),\r\n\r\n    /**\r\n     * List of properties to consider when checking if cache needs refresh\r\n     * @type Array\r\n     */\r\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat(additionalProps),\r\n\r\n    /**\r\n     * When defined, an object is rendered via stroke and this property specifies its color.\r\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\r\n     * @type String\r\n     * @default\r\n     */\r\n    stroke:               null,\r\n\r\n    /**\r\n     * Shadow object representing shadow of this shape.\r\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\r\n     * @type fabric.Shadow\r\n     * @default\r\n     */\r\n    shadow:               null,\r\n\r\n    /**\r\n     * fabric.Path that the text should follow.\r\n     * since 4.6.0 the path will be drawn automatically.\r\n     * if you want to make the path visible, give it a stroke and strokeWidth or fill value\r\n     * if you want it to be hidden, assign visible = false to the path.\r\n     * This feature is in BETA, and SVG import/export is not yet supported.\r\n     * @type fabric.Path\r\n     * @example\r\n     * var textPath = new fabric.Text('Text on a path', {\r\n     *     top: 150,\r\n     *     left: 150,\r\n     *     textAlign: 'center',\r\n     *     charSpacing: -50,\r\n     *     path: new fabric.Path('M 0 0 C 50 -100 150 -100 200 0', {\r\n     *         strokeWidth: 1,\r\n     *         visible: false\r\n     *     }),\r\n     *     pathSide: 'left',\r\n     *     pathStartOffset: 0\r\n     * });\r\n     * @default\r\n     */\r\n    path:               null,\r\n\r\n    /**\r\n     * Offset amount for text path starting position\r\n     * Only used when text has a path\r\n     * @type Number\r\n     * @default\r\n     */\r\n    pathStartOffset:               0,\r\n\r\n    /**\r\n     * Which side of the path the text should be drawn on.\r\n     * Only used when text has a path\r\n     * @type {String} 'left|right'\r\n     * @default\r\n     */\r\n    pathSide:               'left',\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _fontSizeFraction: 0.222,\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    offsets: {\r\n      underline: 0.10,\r\n      linethrough: -0.315,\r\n      overline: -0.88\r\n    },\r\n\r\n    /**\r\n     * Text Line proportion to font Size (in pixels)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    _fontSizeMult:             1.13,\r\n\r\n    /**\r\n     * additional space between characters\r\n     * expressed in thousands of em unit\r\n     * @type Number\r\n     * @default\r\n     */\r\n    charSpacing:             0,\r\n\r\n    /**\r\n     * Object containing character styles - top-level properties -> line numbers,\r\n     * 2nd-level properties - character numbers\r\n     * @type Object\r\n     * @default\r\n     */\r\n    styles: null,\r\n\r\n    /**\r\n     * Reference to a context to measure text char or couple of chars\r\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\r\n     * once created it will be referenced on fabric._measuringContext to avoid creating a canvas for every\r\n     * text object created.\r\n     * @type {CanvasRenderingContext2D}\r\n     * @default\r\n     */\r\n    _measuringContext: null,\r\n\r\n    /**\r\n     * Baseline shift, styles only, keep at 0 for the main text object\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    deltaY: 0,\r\n\r\n    /**\r\n     * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\r\n     * determine the direction of the text.\r\n     * This has to be set manually together with textAlign and originX for proper\r\n     * experience.\r\n     * some interesting link for the future\r\n     * https://www.w3.org/International/questions/qa-bidi-unicode-controls\r\n     * @since 4.5.0\r\n     * @type {String} 'ltr|rtl'\r\n     * @default\r\n     */\r\n    direction: 'ltr',\r\n\r\n    /**\r\n     * Array of properties that define a style unit (of 'styles').\r\n     * @type {Array}\r\n     * @default\r\n     */\r\n    _styleProperties: [\r\n      'stroke',\r\n      'strokeWidth',\r\n      'fill',\r\n      'fontFamily',\r\n      'fontSize',\r\n      'fontWeight',\r\n      'fontStyle',\r\n      'underline',\r\n      'overline',\r\n      'linethrough',\r\n      'deltaY',\r\n      'textBackgroundColor',\r\n    ],\r\n\r\n    /**\r\n     * contains characters bounding boxes\r\n     */\r\n    __charBounds: [],\r\n\r\n    /**\r\n     * use this size when measuring text. To avoid IE11 rounding errors\r\n     * @type {Number}\r\n     * @default\r\n     * @readonly\r\n     * @private\r\n     */\r\n    CACHE_FONT_SIZE: 400,\r\n\r\n    /**\r\n     * contains the min text width to avoid getting 0\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    MIN_TEXT_WIDTH: 2,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {String} text Text string\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.Text} thisArg\r\n     */\r\n    initialize: function(text, options) {\r\n      this.styles = options ? (options.styles || { }) : { };\r\n      this.text = text;\r\n      this.__skipDimension = true;\r\n      this.callSuper('initialize', options);\r\n      if (this.path) {\r\n        this.setPathInfo();\r\n      }\r\n      this.__skipDimension = false;\r\n      this.initDimensions();\r\n      this.setCoords();\r\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\r\n    },\r\n\r\n    /**\r\n     * If text has a path, it will add the extra information needed\r\n     * for path and text calculations\r\n     * @return {fabric.Text} thisArg\r\n     */\r\n    setPathInfo: function() {\r\n      var path = this.path;\r\n      if (path) {\r\n        path.segmentsInfo = fabric.util.getPathSegmentsInfo(path.path);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return a context for measurement of text string.\r\n     * if created it gets stored for reuse\r\n     * @param {String} text Text string\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.Text} thisArg\r\n     */\r\n    getMeasuringContext: function() {\r\n      // if we did not return we have to measure something.\r\n      if (!fabric._measuringContext) {\r\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\r\n          fabric.util.createCanvasElement().getContext('2d');\r\n      }\r\n      return fabric._measuringContext;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * Divides text into lines of text and lines of graphemes.\r\n     */\r\n    _splitText: function() {\r\n      var newLines = this._splitTextIntoLines(this.text);\r\n      this.textLines = newLines.lines;\r\n      this._textLines = newLines.graphemeLines;\r\n      this._unwrappedTextLines = newLines._unwrappedLines;\r\n      this._text = newLines.graphemeText;\r\n      return newLines;\r\n    },\r\n\r\n    /**\r\n     * Initialize or update text dimensions.\r\n     * Updates this.width and this.height with the proper values.\r\n     * Does not return dimensions.\r\n     */\r\n    initDimensions: function() {\r\n      if (this.__skipDimension) {\r\n        return;\r\n      }\r\n      this._splitText();\r\n      this._clearCache();\r\n      if (this.path) {\r\n        this.width = this.path.width;\r\n        this.height = this.path.height;\r\n      }\r\n      else {\r\n        this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\r\n        this.height = this.calcTextHeight();\r\n      }\r\n      if (this.textAlign.indexOf('justify') !== -1) {\r\n        // once text is measured we need to make space fatter to make justified text.\r\n        this.enlargeSpaces();\r\n      }\r\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n    },\r\n\r\n    /**\r\n     * Enlarge space boxes and shift the others\r\n     */\r\n    enlargeSpaces: function() {\r\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\r\n          continue;\r\n        }\r\n        accumulatedSpace = 0;\r\n        line = this._textLines[i];\r\n        currentLineWidth = this.getLineWidth(i);\r\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\r\n          numberOfSpaces = spaces.length;\r\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\r\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\r\n            charBound = this.__charBounds[i][j];\r\n            if (this._reSpaceAndTab.test(line[j])) {\r\n              charBound.width += diffSpace;\r\n              charBound.kernedWidth += diffSpace;\r\n              charBound.left += accumulatedSpace;\r\n              accumulatedSpace += diffSpace;\r\n            }\r\n            else {\r\n              charBound.left += accumulatedSpace;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Detect if the text line is ended with an hard break\r\n     * text and itext do not have wrapping, return false\r\n     * @return {Boolean}\r\n     */\r\n    isEndOfWrapping: function(lineIndex) {\r\n      return lineIndex === this._textLines.length - 1;\r\n    },\r\n\r\n    /**\r\n     * Detect if a line has a linebreak and so we need to account for it when moving\r\n     * and counting style.\r\n     * It return always for text and Itext.\r\n     * @return Number\r\n     */\r\n    missingNewlineOffset: function() {\r\n      return 1;\r\n    },\r\n\r\n    /**\r\n     * Returns string representation of an instance\r\n     * @return {String} String representation of text object\r\n     */\r\n    toString: function() {\r\n      return '#<fabric.Text (' + this.complexity() +\r\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\r\n    },\r\n\r\n    /**\r\n     * Return the dimension and the zoom level needed to create a cache canvas\r\n     * big enough to host the object to be cached.\r\n     * @private\r\n     * @param {Object} dim.x width of object to be cached\r\n     * @param {Object} dim.y height of object to be cached\r\n     * @return {Object}.width width of canvas\r\n     * @return {Object}.height height of canvas\r\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n     */\r\n    _getCacheCanvasDimensions: function() {\r\n      var dims = this.callSuper('_getCacheCanvasDimensions');\r\n      var fontSize = this.fontSize;\r\n      dims.width += fontSize * dims.zoomX;\r\n      dims.height += fontSize * dims.zoomY;\r\n      return dims;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      var path = this.path;\r\n      path && !path.isNotVisible() && path._render(ctx);\r\n      this._setTextStyles(ctx);\r\n      this._renderTextLinesBackground(ctx);\r\n      this._renderTextDecoration(ctx, 'underline');\r\n      this._renderText(ctx);\r\n      this._renderTextDecoration(ctx, 'overline');\r\n      this._renderTextDecoration(ctx, 'linethrough');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderText: function(ctx) {\r\n      if (this.paintFirst === 'stroke') {\r\n        this._renderTextStroke(ctx);\r\n        this._renderTextFill(ctx);\r\n      }\r\n      else {\r\n        this._renderTextFill(ctx);\r\n        this._renderTextStroke(ctx);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set the font parameter of the context with the object properties or with charStyle\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {Object} [charStyle] object with font style properties\r\n     * @param {String} [charStyle.fontFamily] Font Family\r\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\r\n     * @param {String} [charStyle.fontWeight] Font weight\r\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\r\n     */\r\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\r\n      ctx.textBaseline = 'alphabetic';\r\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\r\n    },\r\n\r\n    /**\r\n     * calculate and return the text Width measuring each line.\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @return {Number} Maximum width of fabric.Text object\r\n     */\r\n    calcTextWidth: function() {\r\n      var maxWidth = this.getLineWidth(0);\r\n\r\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\r\n        var currentLineWidth = this.getLineWidth(i);\r\n        if (currentLineWidth > maxWidth) {\r\n          maxWidth = currentLineWidth;\r\n        }\r\n      }\r\n      return maxWidth;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {String} line Text to render\r\n     * @param {Number} left Left position of text\r\n     * @param {Number} top Top position of text\r\n     * @param {Number} lineIndex Index of a line in a text\r\n     */\r\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\r\n      this._renderChars(method, ctx, line, left, top, lineIndex);\r\n    },\r\n\r\n    /**\r\n     * Renders the text background for lines, taking care of style\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderTextLinesBackground: function(ctx) {\r\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\r\n        return;\r\n      }\r\n      var heightOfLine,\r\n          lineLeftOffset, originalFill = ctx.fillStyle,\r\n          line, lastColor,\r\n          leftOffset = this._getLeftOffset(),\r\n          lineTopOffset = this._getTopOffset(),\r\n          boxStart = 0, boxWidth = 0, charBox, currentColor, path = this.path,\r\n          drawStart;\r\n\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        heightOfLine = this.getHeightOfLine(i);\r\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\r\n          lineTopOffset += heightOfLine;\r\n          continue;\r\n        }\r\n        line = this._textLines[i];\r\n        lineLeftOffset = this._getLineLeftOffset(i);\r\n        boxWidth = 0;\r\n        boxStart = 0;\r\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n          charBox = this.__charBounds[i][j];\r\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n          if (path) {\r\n            ctx.save();\r\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\r\n            ctx.rotate(charBox.angle);\r\n            ctx.fillStyle = currentColor;\r\n            currentColor && ctx.fillRect(\r\n              -charBox.width / 2,\r\n              -heightOfLine / this.lineHeight * (1 - this._fontSizeFraction),\r\n              charBox.width,\r\n              heightOfLine / this.lineHeight\r\n            );\r\n            ctx.restore();\r\n          }\r\n          else if (currentColor !== lastColor) {\r\n            drawStart = leftOffset + lineLeftOffset + boxStart;\r\n            if (this.direction === 'rtl') {\r\n              drawStart = this.width - drawStart - boxWidth;\r\n            }\r\n            ctx.fillStyle = lastColor;\r\n            lastColor && ctx.fillRect(\r\n              drawStart,\r\n              lineTopOffset,\r\n              boxWidth,\r\n              heightOfLine / this.lineHeight\r\n            );\r\n            boxStart = charBox.left;\r\n            boxWidth = charBox.width;\r\n            lastColor = currentColor;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n        }\r\n        if (currentColor && !path) {\r\n          drawStart = leftOffset + lineLeftOffset + boxStart;\r\n          if (this.direction === 'rtl') {\r\n            drawStart = this.width - drawStart - boxWidth;\r\n          }\r\n          ctx.fillStyle = currentColor;\r\n          ctx.fillRect(\r\n            drawStart,\r\n            lineTopOffset,\r\n            boxWidth,\r\n            heightOfLine / this.lineHeight\r\n          );\r\n        }\r\n        lineTopOffset += heightOfLine;\r\n      }\r\n      ctx.fillStyle = originalFill;\r\n      // if there is text background color no\r\n      // other shadows should be casted\r\n      this._removeShadow(ctx);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} decl style declaration for cache\r\n     * @param {String} decl.fontFamily fontFamily\r\n     * @param {String} decl.fontStyle fontStyle\r\n     * @param {String} decl.fontWeight fontWeight\r\n     * @return {Object} reference to cache\r\n     */\r\n    getFontCache: function(decl) {\r\n      var fontFamily = decl.fontFamily.toLowerCase();\r\n      if (!fabric.charWidthsCache[fontFamily]) {\r\n        fabric.charWidthsCache[fontFamily] = { };\r\n      }\r\n      var cache = fabric.charWidthsCache[fontFamily],\r\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\r\n      if (!cache[cacheProp]) {\r\n        cache[cacheProp] = { };\r\n      }\r\n      return cache[cacheProp];\r\n    },\r\n\r\n    /**\r\n     * measure and return the width of a single character.\r\n     * possibly overridden to accommodate different measure logic or\r\n     * to hook some external lib for character measurement\r\n     * @private\r\n     * @param {String} _char, char to be measured\r\n     * @param {Object} charStyle style of char to be measured\r\n     * @param {String} [previousChar] previous char\r\n     * @param {Object} [prevCharStyle] style of previous char\r\n     */\r\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\r\n      // first i try to return from cache\r\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\r\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\r\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\r\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\r\n\r\n      if (previousChar && fontCache[previousChar] !== undefined) {\r\n        previousWidth = fontCache[previousChar];\r\n      }\r\n      if (fontCache[_char] !== undefined) {\r\n        kernedWidth = width = fontCache[_char];\r\n      }\r\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\r\n        coupleWidth = fontCache[couple];\r\n        kernedWidth = coupleWidth - previousWidth;\r\n      }\r\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\r\n        var ctx = this.getMeasuringContext();\r\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\r\n        this._setTextStyles(ctx, charStyle, true);\r\n      }\r\n      if (width === undefined) {\r\n        kernedWidth = width = ctx.measureText(_char).width;\r\n        fontCache[_char] = width;\r\n      }\r\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\r\n        previousWidth = ctx.measureText(previousChar).width;\r\n        fontCache[previousChar] = previousWidth;\r\n      }\r\n      if (stylesAreEqual && coupleWidth === undefined) {\r\n        // we can measure the kerning couple and subtract the width of the previous character\r\n        coupleWidth = ctx.measureText(couple).width;\r\n        fontCache[couple] = coupleWidth;\r\n        kernedWidth = coupleWidth - previousWidth;\r\n      }\r\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\r\n    },\r\n\r\n    /**\r\n     * Computes height of character at given position\r\n     * @param {Number} line the line index number\r\n     * @param {Number} _char the character index number\r\n     * @return {Number} fontSize of the character\r\n     */\r\n    getHeightOfChar: function(line, _char) {\r\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\r\n    },\r\n\r\n    /**\r\n     * measure a text line measuring all characters.\r\n     * @param {Number} lineIndex line number\r\n     * @return {Number} Line width\r\n     */\r\n    measureLine: function(lineIndex) {\r\n      var lineInfo = this._measureLine(lineIndex);\r\n      if (this.charSpacing !== 0) {\r\n        lineInfo.width -= this._getWidthOfCharSpacing();\r\n      }\r\n      if (lineInfo.width < 0) {\r\n        lineInfo.width = 0;\r\n      }\r\n      return lineInfo;\r\n    },\r\n\r\n    /**\r\n     * measure every grapheme of a line, populating __charBounds\r\n     * @param {Number} lineIndex\r\n     * @return {Object} object.width total width of characters\r\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\r\n     */\r\n    _measureLine: function(lineIndex) {\r\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\r\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length),\r\n          positionInPath = 0, startingPoint, totalPathLength, path = this.path,\r\n          reverse = this.pathSide === 'right';\r\n\r\n      this.__charBounds[lineIndex] = lineBounds;\r\n      for (i = 0; i < line.length; i++) {\r\n        grapheme = line[i];\r\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\r\n        lineBounds[i] = graphemeInfo;\r\n        width += graphemeInfo.kernedWidth;\r\n        prevGrapheme = grapheme;\r\n      }\r\n      // this latest bound box represent the last character of the line\r\n      // to simplify cursor handling in interactive mode.\r\n      lineBounds[i] = {\r\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\r\n        width: 0,\r\n        kernedWidth: 0,\r\n        height: this.fontSize\r\n      };\r\n      if (path) {\r\n        totalPathLength = path.segmentsInfo[path.segmentsInfo.length - 1].length;\r\n        startingPoint = fabric.util.getPointOnPath(path.path, 0, path.segmentsInfo);\r\n        startingPoint.x += path.pathOffset.x;\r\n        startingPoint.y += path.pathOffset.y;\r\n        switch (this.textAlign) {\r\n          case 'left':\r\n            positionInPath = reverse ? (totalPathLength - width) : 0;\r\n            break;\r\n          case 'center':\r\n            positionInPath = (totalPathLength - width) / 2;\r\n            break;\r\n          case 'right':\r\n            positionInPath = reverse ? 0 : (totalPathLength - width);\r\n            break;\r\n          //todo - add support for justify\r\n        }\r\n        positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\r\n        for (i = reverse ? line.length - 1 : 0;\r\n          reverse ? i >= 0 : i < line.length;\r\n          reverse ? i-- : i++) {\r\n          graphemeInfo = lineBounds[i];\r\n          if (positionInPath > totalPathLength) {\r\n            positionInPath %= totalPathLength;\r\n          }\r\n          else if (positionInPath < 0) {\r\n            positionInPath += totalPathLength;\r\n          }\r\n          // it would probably much faster to send all the grapheme position for a line\r\n          // and calculate path position/angle at once.\r\n          this._setGraphemeOnPath(positionInPath, graphemeInfo, startingPoint);\r\n          positionInPath += graphemeInfo.kernedWidth;\r\n        }\r\n      }\r\n      return { width: width, numOfSpaces: numOfSpaces };\r\n    },\r\n\r\n    /**\r\n     * Calculate the angle  and the left,top position of the char that follow a path.\r\n     * It appends it to graphemeInfo to be reused later at rendering\r\n     * @private\r\n     * @param {Number} positionInPath to be measured\r\n     * @param {Object} graphemeInfo current grapheme box information\r\n     * @param {Object} startingPoint position of the point\r\n     */\r\n    _setGraphemeOnPath: function(positionInPath, graphemeInfo, startingPoint) {\r\n      var centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\r\n          path = this.path;\r\n\r\n      // we are at currentPositionOnPath. we want to know what point on the path is.\r\n      var info = fabric.util.getPointOnPath(path.path, centerPosition, path.segmentsInfo);\r\n      graphemeInfo.renderLeft = info.x - startingPoint.x;\r\n      graphemeInfo.renderTop = info.y - startingPoint.y;\r\n      graphemeInfo.angle = info.angle + (this.pathSide ===  'right' ? Math.PI : 0);\r\n    },\r\n\r\n    /**\r\n     * Measure and return the info of a single grapheme.\r\n     * needs the the info of previous graphemes already filled\r\n     * @private\r\n     * @param {String} grapheme to be measured\r\n     * @param {Number} lineIndex index of the line where the char is\r\n     * @param {Number} charIndex position in the line\r\n     * @param {String} [prevGrapheme] character preceding the one to be measured\r\n     */\r\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\r\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\r\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\r\n          kernedWidth = info.kernedWidth,\r\n          width = info.width, charSpacing;\r\n\r\n      if (this.charSpacing !== 0) {\r\n        charSpacing = this._getWidthOfCharSpacing();\r\n        width += charSpacing;\r\n        kernedWidth += charSpacing;\r\n      }\r\n\r\n      var box = {\r\n        width: width,\r\n        left: 0,\r\n        height: style.fontSize,\r\n        kernedWidth: kernedWidth,\r\n        deltaY: style.deltaY,\r\n      };\r\n      if (charIndex > 0 && !skipLeft) {\r\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\r\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\r\n      }\r\n      return box;\r\n    },\r\n\r\n    /**\r\n     * Calculate height of line at 'lineIndex'\r\n     * @param {Number} lineIndex index of line to calculate\r\n     * @return {Number}\r\n     */\r\n    getHeightOfLine: function(lineIndex) {\r\n      if (this.__lineHeights[lineIndex]) {\r\n        return this.__lineHeights[lineIndex];\r\n      }\r\n\r\n      var line = this._textLines[lineIndex],\r\n          // char 0 is measured before the line cycle because it nneds to char\r\n          // emptylines\r\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\r\n      for (var i = 1, len = line.length; i < len; i++) {\r\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\r\n      }\r\n\r\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\r\n    },\r\n\r\n    /**\r\n     * Calculate text box height\r\n     */\r\n    calcTextHeight: function() {\r\n      var lineHeight, height = 0;\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        lineHeight = this.getHeightOfLine(i);\r\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\r\n      }\r\n      return height;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} Left offset\r\n     */\r\n    _getLeftOffset: function() {\r\n      return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Number} Top offset\r\n     */\r\n    _getTopOffset: function() {\r\n      return -this.height / 2;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n     */\r\n    _renderTextCommon: function(ctx, method) {\r\n      ctx.save();\r\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        var heightOfLine = this.getHeightOfLine(i),\r\n            maxHeight = heightOfLine / this.lineHeight,\r\n            leftOffset = this._getLineLeftOffset(i);\r\n        this._renderTextLine(\r\n          method,\r\n          ctx,\r\n          this._textLines[i],\r\n          left + leftOffset,\r\n          top + lineHeights + maxHeight,\r\n          i\r\n        );\r\n        lineHeights += heightOfLine;\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderTextFill: function(ctx) {\r\n      if (!this.fill && !this.styleHas('fill')) {\r\n        return;\r\n      }\r\n\r\n      this._renderTextCommon(ctx, 'fillText');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderTextStroke: function(ctx) {\r\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\r\n        return;\r\n      }\r\n\r\n      if (this.shadow && !this.shadow.affectStroke) {\r\n        this._removeShadow(ctx);\r\n      }\r\n\r\n      ctx.save();\r\n      this._setLineDash(ctx, this.strokeDashArray);\r\n      ctx.beginPath();\r\n      this._renderTextCommon(ctx, 'strokeText');\r\n      ctx.closePath();\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} method fillText or strokeText.\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {Array} line Content of the line, splitted in an array by grapheme\r\n     * @param {Number} left\r\n     * @param {Number} top\r\n     * @param {Number} lineIndex\r\n     */\r\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\r\n      // set proper line offset\r\n      var lineHeight = this.getHeightOfLine(lineIndex),\r\n          isJustify = this.textAlign.indexOf('justify') !== -1,\r\n          actualStyle,\r\n          nextStyle,\r\n          charsToRender = '',\r\n          charBox,\r\n          boxWidth = 0,\r\n          timeToRender,\r\n          path = this.path,\r\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex) && !path,\r\n          isLtr = this.direction === 'ltr', sign = this.direction === 'ltr' ? 1 : -1,\r\n          drawingLeft;\r\n\r\n      ctx.save();\r\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\r\n      if (shortCut) {\r\n        // render all the line in one pass without checking\r\n        // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\r\n        ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\r\n        ctx.direction = isLtr ? 'ltr' : 'rtl';\r\n        ctx.textAlign = isLtr ? 'left' : 'right';\r\n        this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top, lineHeight);\r\n        ctx.restore();\r\n        return;\r\n      }\r\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n        timeToRender = i === len || this.charSpacing || path;\r\n        charsToRender += line[i];\r\n        charBox = this.__charBounds[lineIndex][i];\r\n        if (boxWidth === 0) {\r\n          left += sign * (charBox.kernedWidth - charBox.width);\r\n          boxWidth += charBox.width;\r\n        }\r\n        else {\r\n          boxWidth += charBox.kernedWidth;\r\n        }\r\n        if (isJustify && !timeToRender) {\r\n          if (this._reSpaceAndTab.test(line[i])) {\r\n            timeToRender = true;\r\n          }\r\n        }\r\n        if (!timeToRender) {\r\n          // if we have charSpacing, we render char by char\r\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\r\n        }\r\n        if (timeToRender) {\r\n          if (path) {\r\n            ctx.save();\r\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\r\n            ctx.rotate(charBox.angle);\r\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, -boxWidth / 2, 0, lineHeight);\r\n            ctx.restore();\r\n          }\r\n          else {\r\n            drawingLeft = left;\r\n            ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\r\n            ctx.direction = isLtr ? 'ltr' : 'rtl';\r\n            ctx.textAlign = isLtr ? 'left' : 'right';\r\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, drawingLeft, top, lineHeight);\r\n          }\r\n          charsToRender = '';\r\n          actualStyle = nextStyle;\r\n          left += sign * boxWidth;\r\n          boxWidth = 0;\r\n        }\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * This function try to patch the missing gradientTransform on canvas gradients.\r\n     * transforming a context to transform the gradient, is going to transform the stroke too.\r\n     * we want to transform the gradient but not the stroke operation, so we create\r\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\r\n     * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\r\n     * is limited.\r\n     * @private\r\n     * @param {fabric.Gradient} filler a fabric gradient instance\r\n     * @return {CanvasPattern} a pattern to use as fill/stroke style\r\n     */\r\n    _applyPatternGradientTransformText: function(filler) {\r\n      var pCanvas = fabric.util.createCanvasElement(), pCtx,\r\n          // TODO: verify compatibility with strokeUniform\r\n          width = this.width + this.strokeWidth, height = this.height + this.strokeWidth;\r\n      pCanvas.width = width;\r\n      pCanvas.height = height;\r\n      pCtx = pCanvas.getContext('2d');\r\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\r\n      pCtx.lineTo(0, height); pCtx.closePath();\r\n      pCtx.translate(width / 2, height / 2);\r\n      pCtx.fillStyle = filler.toLive(pCtx);\r\n      this._applyPatternGradientTransform(pCtx, filler);\r\n      pCtx.fill();\r\n      return pCtx.createPattern(pCanvas, 'no-repeat');\r\n    },\r\n\r\n    handleFiller: function(ctx, property, filler) {\r\n      var offsetX, offsetY;\r\n      if (filler.toLive) {\r\n        if (filler.gradientUnits === 'percentage' || filler.gradientTransform || filler.patternTransform) {\r\n          // need to transform gradient in a pattern.\r\n          // this is a slow process. If you are hitting this codepath, and the object\r\n          // is not using caching, you should consider switching it on.\r\n          // we need a canvas as big as the current object caching canvas.\r\n          offsetX = -this.width / 2;\r\n          offsetY = -this.height / 2;\r\n          ctx.translate(offsetX, offsetY);\r\n          ctx[property] = this._applyPatternGradientTransformText(filler);\r\n          return { offsetX: offsetX, offsetY: offsetY };\r\n        }\r\n        else {\r\n          // is a simple gradient or pattern\r\n          ctx[property] = filler.toLive(ctx, this);\r\n          return this._applyPatternGradientTransform(ctx, filler);\r\n        }\r\n      }\r\n      else {\r\n        // is a color\r\n        ctx[property] = filler;\r\n      }\r\n      return { offsetX: 0, offsetY: 0 };\r\n    },\r\n\r\n    _setStrokeStyles: function(ctx, decl) {\r\n      ctx.lineWidth = decl.strokeWidth;\r\n      ctx.lineCap = this.strokeLineCap;\r\n      ctx.lineDashOffset = this.strokeDashOffset;\r\n      ctx.lineJoin = this.strokeLineJoin;\r\n      ctx.miterLimit = this.strokeMiterLimit;\r\n      return this.handleFiller(ctx, 'strokeStyle', decl.stroke);\r\n    },\r\n\r\n    _setFillStyles: function(ctx, decl) {\r\n      return this.handleFiller(ctx, 'fillStyle', decl.fill);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} method\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @param {String} _char\r\n     * @param {Number} left Left coordinate\r\n     * @param {Number} top Top coordinate\r\n     * @param {Number} lineHeight Height of the line\r\n     */\r\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\r\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\r\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n          shouldFill = method === 'fillText' && fullDecl.fill,\r\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth,\r\n          fillOffsets, strokeOffsets;\r\n\r\n      if (!shouldStroke && !shouldFill) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n\r\n      shouldFill && (fillOffsets = this._setFillStyles(ctx, fullDecl));\r\n      shouldStroke && (strokeOffsets = this._setStrokeStyles(ctx, fullDecl));\r\n\r\n      ctx.font = this._getFontDeclaration(fullDecl);\r\n\r\n\r\n      if (decl && decl.textBackgroundColor) {\r\n        this._removeShadow(ctx);\r\n      }\r\n      if (decl && decl.deltaY) {\r\n        top += decl.deltaY;\r\n      }\r\n      shouldFill && ctx.fillText(_char, left - fillOffsets.offsetX, top - fillOffsets.offsetY);\r\n      shouldStroke && ctx.strokeText(_char, left - strokeOffsets.offsetX, top - strokeOffsets.offsetY);\r\n      ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\r\n     * @param {Number} start selection start\r\n     * @param {Number} end selection end\r\n     * @returns {fabric.Text} thisArg\r\n     * @chainable\r\n     */\r\n    setSuperscript: function(start, end) {\r\n      return this._setScript(start, end, this.superscript);\r\n    },\r\n\r\n    /**\r\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\r\n     * @param {Number} start selection start\r\n     * @param {Number} end selection end\r\n     * @returns {fabric.Text} thisArg\r\n     * @chainable\r\n     */\r\n    setSubscript: function(start, end) {\r\n      return this._setScript(start, end, this.subscript);\r\n    },\r\n\r\n    /**\r\n     * Applies 'schema' at given position\r\n     * @private\r\n     * @param {Number} start selection start\r\n     * @param {Number} end selection end\r\n     * @param {Number} schema\r\n     * @returns {fabric.Text} thisArg\r\n     * @chainable\r\n     */\r\n    _setScript: function(start, end, schema) {\r\n      var loc = this.get2DCursorLocation(start, true),\r\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\r\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\r\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\r\n      this.setSelectionStyles(style, start, end);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} prevStyle\r\n     * @param {Object} thisStyle\r\n     */\r\n    _hasStyleChanged: function(prevStyle, thisStyle) {\r\n      return prevStyle.fill !== thisStyle.fill ||\r\n              prevStyle.stroke !== thisStyle.stroke ||\r\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\r\n              prevStyle.fontSize !== thisStyle.fontSize ||\r\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\r\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\r\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\r\n              prevStyle.deltaY !== thisStyle.deltaY;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Object} prevStyle\r\n     * @param {Object} thisStyle\r\n     */\r\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\r\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\r\n        prevStyle.overline !== thisStyle.overline ||\r\n        prevStyle.underline !== thisStyle.underline ||\r\n        prevStyle.linethrough !== thisStyle.linethrough;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Number} lineIndex index text line\r\n     * @return {Number} Line left offset\r\n     */\r\n    _getLineLeftOffset: function(lineIndex) {\r\n      var lineWidth = this.getLineWidth(lineIndex),\r\n          lineDiff = this.width - lineWidth, textAlign = this.textAlign, direction = this.direction,\r\n          isEndOfWrapping, leftOffset = 0, isEndOfWrapping = this.isEndOfWrapping(lineIndex);\r\n      if (textAlign === 'justify'\r\n        || (textAlign === 'justify-center' && !isEndOfWrapping)\r\n        || (textAlign === 'justify-right' && !isEndOfWrapping)\r\n        || (textAlign === 'justify-left' && !isEndOfWrapping)\r\n      ) {\r\n        return 0;\r\n      }\r\n      if (textAlign === 'center') {\r\n        leftOffset = lineDiff / 2;\r\n      }\r\n      if (textAlign === 'right') {\r\n        leftOffset = lineDiff;\r\n      }\r\n      if (textAlign === 'justify-center') {\r\n        leftOffset = lineDiff / 2;\r\n      }\r\n      if (textAlign === 'justify-right') {\r\n        leftOffset = lineDiff;\r\n      }\r\n      if (direction === 'rtl') {\r\n        leftOffset -= lineDiff;\r\n      }\r\n      return leftOffset;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _clearCache: function() {\r\n      this.__lineWidths = [];\r\n      this.__lineHeights = [];\r\n      this.__charBounds = [];\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _shouldClearDimensionCache: function() {\r\n      var shouldClear = this._forceClearCache;\r\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\r\n      if (shouldClear) {\r\n        this.dirty = true;\r\n        this._forceClearCache = false;\r\n      }\r\n      return shouldClear;\r\n    },\r\n\r\n    /**\r\n     * Measure a single line given its index. Used to calculate the initial\r\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\r\n     * @private\r\n     * @param {Number} lineIndex line number\r\n     * @return {Number} Line width\r\n     */\r\n    getLineWidth: function(lineIndex) {\r\n      if (this.__lineWidths[lineIndex]) {\r\n        return this.__lineWidths[lineIndex];\r\n      }\r\n\r\n      var width, line = this._textLines[lineIndex], lineInfo;\r\n\r\n      if (line === '') {\r\n        width = 0;\r\n      }\r\n      else {\r\n        lineInfo = this.measureLine(lineIndex);\r\n        width = lineInfo.width;\r\n      }\r\n      this.__lineWidths[lineIndex] = width;\r\n      return width;\r\n    },\r\n\r\n    _getWidthOfCharSpacing: function() {\r\n      if (this.charSpacing !== 0) {\r\n        return this.fontSize * this.charSpacing / 1000;\r\n      }\r\n      return 0;\r\n    },\r\n\r\n    /**\r\n     * Retrieves the value of property at given character position\r\n     * @param {Number} lineIndex the line number\r\n     * @param {Number} charIndex the character number\r\n     * @param {String} property the property name\r\n     * @returns the value of 'property'\r\n     */\r\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\r\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\r\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\r\n        return charStyle[property];\r\n      }\r\n      return this[property];\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _renderTextDecoration: function(ctx, type) {\r\n      if (!this[type] && !this.styleHas(type)) {\r\n        return;\r\n      }\r\n      var heightOfLine, size, _size,\r\n          lineLeftOffset, dy, _dy,\r\n          line, lastDecoration,\r\n          leftOffset = this._getLeftOffset(),\r\n          topOffset = this._getTopOffset(), top,\r\n          boxStart, boxWidth, charBox, currentDecoration,\r\n          maxHeight, currentFill, lastFill, path = this.path,\r\n          charSpacing = this._getWidthOfCharSpacing(),\r\n          offsetY = this.offsets[type];\r\n\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        heightOfLine = this.getHeightOfLine(i);\r\n        if (!this[type] && !this.styleHas(type, i)) {\r\n          topOffset += heightOfLine;\r\n          continue;\r\n        }\r\n        line = this._textLines[i];\r\n        maxHeight = heightOfLine / this.lineHeight;\r\n        lineLeftOffset = this._getLineLeftOffset(i);\r\n        boxStart = 0;\r\n        boxWidth = 0;\r\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\r\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\r\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\r\n        size = this.getHeightOfChar(i, 0);\r\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\r\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n          charBox = this.__charBounds[i][j];\r\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\r\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\r\n          _size = this.getHeightOfChar(i, j);\r\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\r\n          if (path && currentDecoration && currentFill) {\r\n            ctx.save();\r\n            ctx.fillStyle = lastFill;\r\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\r\n            ctx.rotate(charBox.angle);\r\n            ctx.fillRect(\r\n              -charBox.kernedWidth / 2,\r\n              offsetY * _size + _dy,\r\n              charBox.kernedWidth,\r\n              this.fontSize / 15\r\n            );\r\n            ctx.restore();\r\n          }\r\n          else if (\r\n            (currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy)\r\n            && boxWidth > 0\r\n          ) {\r\n            var drawStart = leftOffset + lineLeftOffset + boxStart;\r\n            if (this.direction === 'rtl') {\r\n              drawStart = this.width - drawStart - boxWidth;\r\n            }\r\n            if (lastDecoration && lastFill) {\r\n              ctx.fillStyle = lastFill;\r\n              ctx.fillRect(\r\n                drawStart,\r\n                top + offsetY * size + dy,\r\n                boxWidth,\r\n                this.fontSize / 15\r\n              );\r\n            }\r\n            boxStart = charBox.left;\r\n            boxWidth = charBox.width;\r\n            lastDecoration = currentDecoration;\r\n            lastFill = currentFill;\r\n            size = _size;\r\n            dy = _dy;\r\n          }\r\n          else {\r\n            boxWidth += charBox.kernedWidth;\r\n          }\r\n        }\r\n        var drawStart = leftOffset + lineLeftOffset + boxStart;\r\n        if (this.direction === 'rtl') {\r\n          drawStart = this.width - drawStart - boxWidth;\r\n        }\r\n        ctx.fillStyle = currentFill;\r\n        currentDecoration && currentFill && ctx.fillRect(\r\n          drawStart,\r\n          top + offsetY * size + dy,\r\n          boxWidth - charSpacing,\r\n          this.fontSize / 15\r\n        );\r\n        topOffset += heightOfLine;\r\n      }\r\n      // if there is text background color no\r\n      // other shadows should be casted\r\n      this._removeShadow(ctx);\r\n    },\r\n\r\n    /**\r\n     * return font declaration string for canvas context\r\n     * @param {Object} [styleObject] object\r\n     * @returns {String} font declaration formatted for canvas context.\r\n     */\r\n    _getFontDeclaration: function(styleObject, forMeasuring) {\r\n      var style = styleObject || this, family = this.fontFamily,\r\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\r\n      var fontFamily = family === undefined ||\r\n      family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\r\n      family.indexOf('\"') > -1 || fontIsGeneric\r\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\r\n      return [\r\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\r\n        // verify if this can be fixed in JSDOM\r\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\r\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\r\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\r\n        fontFamily\r\n      ].join(' ');\r\n    },\r\n\r\n    /**\r\n     * Renders text instance on a specified context\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    render: function(ctx) {\r\n      // do not render if object is not visible\r\n      if (!this.visible) {\r\n        return;\r\n      }\r\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\r\n        return;\r\n      }\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n      }\r\n      this.callSuper('render', ctx);\r\n    },\r\n\r\n    /**\r\n     * Returns the text as an array of lines.\r\n     * @param {String} text text to split\r\n     * @returns {Array} Lines in the text\r\n     */\r\n    _splitTextIntoLines: function(text) {\r\n      var lines = text.split(this._reNewline),\r\n          newLines = new Array(lines.length),\r\n          newLine = ['\\n'],\r\n          newText = [];\r\n      for (var i = 0; i < lines.length; i++) {\r\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\r\n        newText = newText.concat(newLines[i], newLine);\r\n      }\r\n      newText.pop();\r\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} Object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      var allProperties = additionalProps.concat(propertiesToInclude);\r\n      var obj = this.callSuper('toObject', allProperties);\r\n      // styles will be overridden with a properly cloned structure\r\n      obj.styles = clone(this.styles, true);\r\n      if (obj.path) {\r\n        obj.path = this.path.toObject();\r\n      }\r\n      return obj;\r\n    },\r\n\r\n    /**\r\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n     * @return {fabric.Object} thisArg\r\n     * @chainable\r\n     */\r\n    set: function(key, value) {\r\n      this.callSuper('set', key, value);\r\n      var needsDims = false;\r\n      var isAddingPath = false;\r\n      if (typeof key === 'object') {\r\n        for (var _key in key) {\r\n          if (_key === 'path') {\r\n            this.setPathInfo();\r\n          }\r\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\r\n          isAddingPath = isAddingPath || _key === 'path';\r\n        }\r\n      }\r\n      else {\r\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\r\n        isAddingPath = key === 'path';\r\n      }\r\n      if (isAddingPath) {\r\n        this.setPathInfo();\r\n      }\r\n      if (needsDims) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns complexity of an instance\r\n     * @return {Number} complexity\r\n     */\r\n    complexity: function() {\r\n      return 1;\r\n    }\r\n  });\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\r\n   * @static\r\n   * @memberOf fabric.Text\r\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\r\n   */\r\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\r\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\r\n\r\n  /**\r\n   * Default SVG font size\r\n   * @static\r\n   * @memberOf fabric.Text\r\n   */\r\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\r\n\r\n  /**\r\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\r\n   * @static\r\n   * @memberOf fabric.Text\r\n   * @param {SVGElement} element Element to parse\r\n   * @param {Function} callback callback function invoked after parsing\r\n   * @param {Object} [options] Options object\r\n   */\r\n  fabric.Text.fromElement = function(element, callback, options) {\r\n    if (!element) {\r\n      return callback(null);\r\n    }\r\n\r\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\r\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\r\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\r\n\r\n    options.top = options.top || 0;\r\n    options.left = options.left || 0;\r\n    if (parsedAttributes.textDecoration) {\r\n      var textDecoration = parsedAttributes.textDecoration;\r\n      if (textDecoration.indexOf('underline') !== -1) {\r\n        options.underline = true;\r\n      }\r\n      if (textDecoration.indexOf('overline') !== -1) {\r\n        options.overline = true;\r\n      }\r\n      if (textDecoration.indexOf('line-through') !== -1) {\r\n        options.linethrough = true;\r\n      }\r\n      delete options.textDecoration;\r\n    }\r\n    if ('dx' in parsedAttributes) {\r\n      options.left += parsedAttributes.dx;\r\n    }\r\n    if ('dy' in parsedAttributes) {\r\n      options.top += parsedAttributes.dy;\r\n    }\r\n    if (!('fontSize' in options)) {\r\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\r\n    }\r\n\r\n    var textContent = '';\r\n\r\n    // The XML is not properly parsed in IE9 so a workaround to get\r\n    // textContent is through firstChild.data. Another workaround would be\r\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\r\n    if (!('textContent' in element)) {\r\n      if ('firstChild' in element && element.firstChild !== null) {\r\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\r\n          textContent = element.firstChild.data;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      textContent = element.textContent;\r\n    }\r\n\r\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\r\n    var originalStrokeWidth = options.strokeWidth;\r\n    options.strokeWidth = 0;\r\n\r\n    var text = new fabric.Text(textContent, options),\r\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\r\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\r\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\r\n        textHeight = text.getScaledHeight() + scaledDiff,\r\n        offX = 0;\r\n    /*\r\n      Adjust positioning:\r\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\r\n        fabric output by default at top, left.\r\n    */\r\n    if (parsedAnchor === 'center') {\r\n      offX = text.getScaledWidth() / 2;\r\n    }\r\n    if (parsedAnchor === 'right') {\r\n      offX = text.getScaledWidth();\r\n    }\r\n    text.set({\r\n      left: text.left - offX,\r\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\r\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\r\n    });\r\n    callback(text);\r\n  };\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns fabric.Text instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Text\r\n   * @param {Object} object plain js Object to create an instance from\r\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\r\n   */\r\n  fabric.Text.fromObject = function(object, callback) {\r\n    var objectCopy = clone(object), path = object.path;\r\n    delete objectCopy.path;\r\n    return fabric.Object._fromObject('Text', objectCopy, function(textInstance) {\r\n      if (path) {\r\n        fabric.Object._fromObject('Path', path, function(pathInstance) {\r\n          textInstance.set('path', pathInstance);\r\n          callback(textInstance);\r\n        }, 'path');\r\n      }\r\n      else {\r\n        callback(textInstance);\r\n      }\r\n    }, 'text');\r\n  };\r\n\r\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\r\n\r\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\r\n\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function() {\r\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n    /**\r\n     * Returns true if object has no styling or no styling in a line\r\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n     * @return {Boolean}\r\n     */\r\n    isEmptyStyles: function(lineIndex) {\r\n      if (!this.styles) {\r\n        return true;\r\n      }\r\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n        return true;\r\n      }\r\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n      for (var p1 in obj) {\r\n        for (var p2 in obj[p1]) {\r\n          // eslint-disable-next-line no-unused-vars\r\n          for (var p3 in obj[p1][p2]) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Returns true if object has a style property or has it ina specified line\r\n     * This function is used to detect if a text will use a particular property or not.\r\n     * @param {String} property to check for\r\n     * @param {Number} lineIndex to check the style on\r\n     * @return {Boolean}\r\n     */\r\n    styleHas: function(property, lineIndex) {\r\n      if (!this.styles || !property || property === '') {\r\n        return false;\r\n      }\r\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n        return false;\r\n      }\r\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\r\n      // eslint-disable-next-line\r\n      for (var p1 in obj) {\r\n        // eslint-disable-next-line\r\n        for (var p2 in obj[p1]) {\r\n          if (typeof obj[p1][p2][property] !== 'undefined') {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Check if characters in a text have a value for a property\r\n     * whose value matches the textbox's value for that property.  If so,\r\n     * the character-level property is deleted.  If the character\r\n     * has no other properties, then it is also deleted.  Finally,\r\n     * if the line containing that character has no other characters\r\n     * then it also is deleted.\r\n     *\r\n     * @param {string} property The property to compare between characters and text.\r\n     */\r\n    cleanStyle: function(property) {\r\n      if (!this.styles || !property || property === '') {\r\n        return false;\r\n      }\r\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\r\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\r\n      // eslint-disable-next-line\r\n      for (var p1 in obj) {\r\n        letterCount = 0;\r\n        // eslint-disable-next-line\r\n        for (var p2 in obj[p1]) {\r\n          var styleObject = obj[p1][p2],\r\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\r\n\r\n          stylesCount++;\r\n\r\n          if (stylePropertyHasBeenSet) {\r\n            if (!stylePropertyValue) {\r\n              stylePropertyValue = styleObject[property];\r\n            }\r\n            else if (styleObject[property] !== stylePropertyValue) {\r\n              allStyleObjectPropertiesMatch = false;\r\n            }\r\n\r\n            if (styleObject[property] === this[property]) {\r\n              delete styleObject[property];\r\n            }\r\n          }\r\n          else {\r\n            allStyleObjectPropertiesMatch = false;\r\n          }\r\n\r\n          if (Object.keys(styleObject).length !== 0) {\r\n            letterCount++;\r\n          }\r\n          else {\r\n            delete obj[p1][p2];\r\n          }\r\n        }\r\n\r\n        if (letterCount === 0) {\r\n          delete obj[p1];\r\n        }\r\n      }\r\n      // if every grapheme has the same style set then\r\n      // delete those styles and set it on the parent\r\n      for (var i = 0; i < this._textLines.length; i++) {\r\n        graphemeCount += this._textLines[i].length;\r\n      }\r\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\r\n        this[property] = stylePropertyValue;\r\n        this.removeStyle(property);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove a style property or properties from all individual character styles\r\n     * in a text object.  Deletes the character style object if it contains no other style\r\n     * props.  Deletes a line style object if it contains no other character styles.\r\n     *\r\n     * @param {String} props The property to remove from character styles.\r\n     */\r\n    removeStyle: function(property) {\r\n      if (!this.styles || !property || property === '') {\r\n        return;\r\n      }\r\n      var obj = this.styles, line, lineNum, charNum;\r\n      for (lineNum in obj) {\r\n        line = obj[lineNum];\r\n        for (charNum in line) {\r\n          delete line[charNum][property];\r\n          if (Object.keys(line[charNum]).length === 0) {\r\n            delete line[charNum];\r\n          }\r\n        }\r\n        if (Object.keys(line).length === 0) {\r\n          delete obj[lineNum];\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _extendStyles: function(index, styles) {\r\n      var loc = this.get2DCursorLocation(index);\r\n\r\n      if (!this._getLineStyle(loc.lineIndex)) {\r\n        this._setLineStyle(loc.lineIndex);\r\n      }\r\n\r\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\r\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\r\n      }\r\n\r\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\r\n    },\r\n\r\n    /**\r\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\r\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\r\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\r\n     */\r\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\r\n      if (typeof selectionStart === 'undefined') {\r\n        selectionStart = this.selectionStart;\r\n      }\r\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\r\n          len = lines.length;\r\n      for (var i = 0; i < len; i++) {\r\n        if (selectionStart <= lines[i].length) {\r\n          return {\r\n            lineIndex: i,\r\n            charIndex: selectionStart\r\n          };\r\n        }\r\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\r\n      }\r\n      return {\r\n        lineIndex: i - 1,\r\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Gets style of a current selection/cursor (at the start position)\r\n     * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\r\n     * @param {Number} [startIndex] Start index to get styles at\r\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n     * @param {Boolean} [complete] get full style or not\r\n     * @return {Array} styles an array with one, zero or more Style objects\r\n     */\r\n    getSelectionStyles: function(startIndex, endIndex, complete) {\r\n      if (typeof startIndex === 'undefined') {\r\n        startIndex = this.selectionStart || 0;\r\n      }\r\n      if (typeof endIndex === 'undefined') {\r\n        endIndex = this.selectionEnd || startIndex;\r\n      }\r\n      var styles = [];\r\n      for (var i = startIndex; i < endIndex; i++) {\r\n        styles.push(this.getStyleAtPosition(i, complete));\r\n      }\r\n      return styles;\r\n    },\r\n\r\n    /**\r\n     * Gets style of a current selection/cursor position\r\n     * @param {Number} position  to get styles at\r\n     * @param {Boolean} [complete] full style if true\r\n     * @return {Object} style Style object at a specified index\r\n     * @private\r\n     */\r\n    getStyleAtPosition: function(position, complete) {\r\n      var loc = this.get2DCursorLocation(position),\r\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\r\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\r\n      return style || {};\r\n    },\r\n\r\n    /**\r\n     * Sets style of a current selection, if no selection exist, do not set anything.\r\n     * @param {Object} [styles] Styles object\r\n     * @param {Number} [startIndex] Start index to get styles at\r\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n     * @return {fabric.IText} thisArg\r\n     * @chainable\r\n     */\r\n    setSelectionStyles: function(styles, startIndex, endIndex) {\r\n      if (typeof startIndex === 'undefined') {\r\n        startIndex = this.selectionStart || 0;\r\n      }\r\n      if (typeof endIndex === 'undefined') {\r\n        endIndex = this.selectionEnd || startIndex;\r\n      }\r\n      for (var i = startIndex; i < endIndex; i++) {\r\n        this._extendStyles(i, styles);\r\n      }\r\n      /* not included in _extendStyles to avoid clearing cache more than once */\r\n      this._forceClearCache = true;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * get the reference, not a clone, of the style object for a given character\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @return {Object} style object\r\n     */\r\n    _getStyleDeclaration: function(lineIndex, charIndex) {\r\n      var lineStyle = this.styles && this.styles[lineIndex];\r\n      if (!lineStyle) {\r\n        return null;\r\n      }\r\n      return lineStyle[charIndex];\r\n    },\r\n\r\n    /**\r\n     * return a new object that contains all the style property for a character\r\n     * the object returned is newly created\r\n     * @param {Number} lineIndex of the line where the character is\r\n     * @param {Number} charIndex position of the character on the line\r\n     * @return {Object} style object\r\n     */\r\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\r\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\r\n          styleObject = { }, prop;\r\n      for (var i = 0; i < this._styleProperties.length; i++) {\r\n        prop = this._styleProperties[i];\r\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\r\n      }\r\n      return styleObject;\r\n    },\r\n\r\n    /**\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @param {Object} style\r\n     * @private\r\n     */\r\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n      this.styles[lineIndex][charIndex] = style;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @private\r\n     */\r\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n      delete this.styles[lineIndex][charIndex];\r\n    },\r\n\r\n    /**\r\n     * @param {Number} lineIndex\r\n     * @return {Boolean} if the line exists or not\r\n     * @private\r\n     */\r\n    _getLineStyle: function(lineIndex) {\r\n      return !!this.styles[lineIndex];\r\n    },\r\n\r\n    /**\r\n     * Set the line style to an empty object so that is initialized\r\n     * @param {Number} lineIndex\r\n     * @private\r\n     */\r\n    _setLineStyle: function(lineIndex) {\r\n      this.styles[lineIndex] = {};\r\n    },\r\n\r\n    /**\r\n     * @param {Number} lineIndex\r\n     * @private\r\n     */\r\n    _deleteLineStyle: function(lineIndex) {\r\n      delete this.styles[lineIndex];\r\n    }\r\n  });\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  function parseDecoration(object) {\r\n    if (object.textDecoration) {\r\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\r\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\r\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\r\n      delete object.textDecoration;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\r\n   * prefix when observing canvas.\r\n   * @class fabric.IText\r\n   * @extends fabric.Text\r\n   * @mixes fabric.Observable\r\n   *\r\n   * @fires changed\r\n   * @fires selection:changed\r\n   * @fires editing:entered\r\n   * @fires editing:exited\r\n   *\r\n   * @return {fabric.IText} thisArg\r\n   * @see {@link fabric.IText#initialize} for constructor definition\r\n   *\r\n   * <p>Supported key combinations:</p>\r\n   * <pre>\r\n   *   Move cursor:                    left, right, up, down\r\n   *   Select character:               shift + left, shift + right\r\n   *   Select text vertically:         shift + up, shift + down\r\n   *   Move cursor by word:            alt + left, alt + right\r\n   *   Select words:                   shift + alt + left, shift + alt + right\r\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\r\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\r\n   *   Jump to start/end of text:      cmd + up, cmd + down\r\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\r\n   *   Delete character:               backspace\r\n   *   Delete word:                    alt + backspace\r\n   *   Delete line:                    cmd + backspace\r\n   *   Forward delete:                 delete\r\n   *   Copy text:                      ctrl/cmd + c\r\n   *   Paste text:                     ctrl/cmd + v\r\n   *   Cut text:                       ctrl/cmd + x\r\n   *   Select entire text:             ctrl/cmd + a\r\n   *   Quit editing                    tab or esc\r\n   * </pre>\r\n   *\r\n   * <p>Supported mouse/touch combination</p>\r\n   * <pre>\r\n   *   Position cursor:                click/touch\r\n   *   Create selection:               click/touch & drag\r\n   *   Create selection:               click & shift + click\r\n   *   Select word:                    double click\r\n   *   Select line:                    triple click\r\n   * </pre>\r\n   */\r\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'i-text',\r\n\r\n    /**\r\n     * Index where text selection starts (or where cursor is when there is no selection)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    selectionStart: 0,\r\n\r\n    /**\r\n     * Index where text selection ends\r\n     * @type Number\r\n     * @default\r\n     */\r\n    selectionEnd: 0,\r\n\r\n    /**\r\n     * Color of text selection\r\n     * @type String\r\n     * @default\r\n     */\r\n    selectionColor: 'rgba(17,119,255,0.3)',\r\n\r\n    /**\r\n     * Indicates whether text is in editing mode\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    isEditing: false,\r\n\r\n    /**\r\n     * Indicates whether a text can be edited\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    editable: true,\r\n\r\n    /**\r\n     * Border color of text object while it's in editing mode\r\n     * @type String\r\n     * @default\r\n     */\r\n    editingBorderColor: 'rgba(102,153,255,0.25)',\r\n\r\n    /**\r\n     * Width of cursor (in px)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    cursorWidth: 2,\r\n\r\n    /**\r\n     * Color of text cursor color in editing mode.\r\n     * if not set (default) will take color from the text.\r\n     * if set to a color value that fabric can understand, it will\r\n     * be used instead of the color of the text at the current position.\r\n     * @type String\r\n     * @default\r\n     */\r\n    cursorColor: '',\r\n\r\n    /**\r\n     * Delay between cursor blink (in ms)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    cursorDelay: 1000,\r\n\r\n    /**\r\n     * Duration of cursor fadein (in ms)\r\n     * @type Number\r\n     * @default\r\n     */\r\n    cursorDuration: 600,\r\n\r\n    /**\r\n     * Indicates whether internal text char widths can be cached\r\n     * @type Boolean\r\n     * @default\r\n     */\r\n    caching: true,\r\n\r\n    /**\r\n     * DOM container to append the hiddenTextarea.\r\n     * An alternative to attaching to the document.body.\r\n     * Useful to reduce laggish redraw of the full document.body tree and\r\n     * also with modals event capturing that won't let the textarea take focus.\r\n     * @type HTMLElement\r\n     * @default\r\n     */\r\n    hiddenTextareaContainer: null,\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _reSpace: /\\s|\\n/,\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _currentCursorOpacity: 0,\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _selectionDirection: null,\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _abortCursorAnimation: false,\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    __widthOfSpace: [],\r\n\r\n    /**\r\n     * Helps determining when the text is in composition, so that the cursor\r\n     * rendering is altered.\r\n     */\r\n    inCompositionMode: false,\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {String} text Text string\r\n     * @param {Object} [options] Options object\r\n     * @return {fabric.IText} thisArg\r\n     */\r\n    initialize: function(text, options) {\r\n      this.callSuper('initialize', text, options);\r\n      this.initBehavior();\r\n    },\r\n\r\n    /**\r\n     * Sets selection start (left boundary of a selection)\r\n     * @param {Number} index Index to set selection start to\r\n     */\r\n    setSelectionStart: function(index) {\r\n      index = Math.max(index, 0);\r\n      this._updateAndFire('selectionStart', index);\r\n    },\r\n\r\n    /**\r\n     * Sets selection end (right boundary of a selection)\r\n     * @param {Number} index Index to set selection end to\r\n     */\r\n    setSelectionEnd: function(index) {\r\n      index = Math.min(index, this.text.length);\r\n      this._updateAndFire('selectionEnd', index);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} property 'selectionStart' or 'selectionEnd'\r\n     * @param {Number} index new position of property\r\n     */\r\n    _updateAndFire: function(property, index) {\r\n      if (this[property] !== index) {\r\n        this._fireSelectionChanged();\r\n        this[property] = index;\r\n      }\r\n      this._updateTextarea();\r\n    },\r\n\r\n    /**\r\n     * Fires the even of selection changed\r\n     * @private\r\n     */\r\n    _fireSelectionChanged: function() {\r\n      this.fire('selection:changed');\r\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\r\n    },\r\n\r\n    /**\r\n     * Initialize text dimensions. Render all text on given context\r\n     * or on a offscreen canvas to get the text width with measureText.\r\n     * Updates this.width and this.height with the proper values.\r\n     * Does not return dimensions.\r\n     * @private\r\n     */\r\n    initDimensions: function() {\r\n      this.isEditing && this.initDelayedCursor();\r\n      this.clearContextTop();\r\n      this.callSuper('initDimensions');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    render: function(ctx) {\r\n      this.clearContextTop();\r\n      this.callSuper('render', ctx);\r\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\r\n      // the correct position but not at every cursor animation.\r\n      this.cursorOffsetCache = { };\r\n      this.renderCursorOrSelection();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} ctx Context to render on\r\n     */\r\n    _render: function(ctx) {\r\n      this.callSuper('_render', ctx);\r\n    },\r\n\r\n    /**\r\n     * Prepare and clean the contextTop\r\n     */\r\n    clearContextTop: function(skipRestore) {\r\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\r\n        return;\r\n      }\r\n      var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\r\n      ctx.save();\r\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n      this.transform(ctx);\r\n      this._clearTextArea(ctx);\r\n      skipRestore || ctx.restore();\r\n    },\r\n    /**\r\n     * Renders cursor or selection (depending on what exists)\r\n     * it does on the contextTop. If contextTop is not available, do nothing.\r\n     */\r\n    renderCursorOrSelection: function() {\r\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\r\n        return;\r\n      }\r\n      var boundaries = this._getCursorBoundaries(),\r\n          ctx = this.canvas.contextTop;\r\n      this.clearContextTop(true);\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        this.renderCursor(boundaries, ctx);\r\n      }\r\n      else {\r\n        this.renderSelection(boundaries, ctx);\r\n      }\r\n      ctx.restore();\r\n    },\r\n\r\n    _clearTextArea: function(ctx) {\r\n      // we add 4 pixel, to be sure to do not leave any pixel out\r\n      var width = this.width + 4, height = this.height + 4;\r\n      ctx.clearRect(-width / 2, -height / 2, width, height);\r\n    },\r\n\r\n    /**\r\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\r\n     * @private\r\n     * @param {Array} chars Array of characters\r\n     * @param {String} typeOfBoundaries\r\n     */\r\n    _getCursorBoundaries: function(position) {\r\n\r\n      // left/top are left/top of entire text box\r\n      // leftOffset/topOffset are offset from that left/top point of a text box\r\n\r\n      if (typeof position === 'undefined') {\r\n        position = this.selectionStart;\r\n      }\r\n\r\n      var left = this._getLeftOffset(),\r\n          top = this._getTopOffset(),\r\n          offsets = this._getCursorBoundariesOffsets(position);\r\n      return {\r\n        left: left,\r\n        top: top,\r\n        leftOffset: offsets.left,\r\n        topOffset: offsets.top\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getCursorBoundariesOffsets: function(position) {\r\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\r\n        return this.cursorOffsetCache;\r\n      }\r\n      var lineLeftOffset,\r\n          lineIndex,\r\n          charIndex,\r\n          topOffset = 0,\r\n          leftOffset = 0,\r\n          boundaries,\r\n          cursorPosition = this.get2DCursorLocation(position);\r\n      charIndex = cursorPosition.charIndex;\r\n      lineIndex = cursorPosition.lineIndex;\r\n      for (var i = 0; i < lineIndex; i++) {\r\n        topOffset += this.getHeightOfLine(i);\r\n      }\r\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n      var bound = this.__charBounds[lineIndex][charIndex];\r\n      bound && (leftOffset = bound.left);\r\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\r\n        leftOffset -= this._getWidthOfCharSpacing();\r\n      }\r\n      boundaries = {\r\n        top: topOffset,\r\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\r\n      };\r\n      if (this.direction === 'rtl') {\r\n        boundaries.left *= -1;\r\n      }\r\n      this.cursorOffsetCache = boundaries;\r\n      return this.cursorOffsetCache;\r\n    },\r\n\r\n    /**\r\n     * Renders cursor\r\n     * @param {Object} boundaries\r\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n     */\r\n    renderCursor: function(boundaries, ctx) {\r\n      var cursorLocation = this.get2DCursorLocation(),\r\n          lineIndex = cursorLocation.lineIndex,\r\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\r\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\r\n          multiplier = this.scaleX * this.canvas.getZoom(),\r\n          cursorWidth = this.cursorWidth / multiplier,\r\n          topOffset = boundaries.topOffset,\r\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\r\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\r\n        - charHeight * (1 - this._fontSizeFraction);\r\n\r\n      if (this.inCompositionMode) {\r\n        this.renderSelection(boundaries, ctx);\r\n      }\r\n      ctx.fillStyle = this.cursorColor || this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\r\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\r\n      ctx.fillRect(\r\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\r\n        topOffset + boundaries.top + dy,\r\n        cursorWidth,\r\n        charHeight);\r\n    },\r\n\r\n    /**\r\n     * Renders text selection\r\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\r\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n     */\r\n    renderSelection: function(boundaries, ctx) {\r\n\r\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\r\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\r\n          isJustify = this.textAlign.indexOf('justify') !== -1,\r\n          start = this.get2DCursorLocation(selectionStart),\r\n          end = this.get2DCursorLocation(selectionEnd),\r\n          startLine = start.lineIndex,\r\n          endLine = end.lineIndex,\r\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\r\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\r\n\r\n      for (var i = startLine; i <= endLine; i++) {\r\n        var lineOffset = this._getLineLeftOffset(i) || 0,\r\n            lineHeight = this.getHeightOfLine(i),\r\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\r\n\r\n        if (i === startLine) {\r\n          boxStart = this.__charBounds[startLine][startChar].left;\r\n        }\r\n        if (i >= startLine && i < endLine) {\r\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\r\n        }\r\n        else if (i === endLine) {\r\n          if (endChar === 0) {\r\n            boxEnd = this.__charBounds[endLine][endChar].left;\r\n          }\r\n          else {\r\n            var charSpacing = this._getWidthOfCharSpacing();\r\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\r\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\r\n          }\r\n        }\r\n        realLineHeight = lineHeight;\r\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\r\n          lineHeight /= this.lineHeight;\r\n        }\r\n        var drawStart = boundaries.left + lineOffset + boxStart,\r\n            drawWidth = boxEnd - boxStart,\r\n            drawHeight = lineHeight, extraTop = 0;\r\n        if (this.inCompositionMode) {\r\n          ctx.fillStyle = this.compositionColor || 'black';\r\n          drawHeight = 1;\r\n          extraTop = lineHeight;\r\n        }\r\n        else {\r\n          ctx.fillStyle = this.selectionColor;\r\n        }\r\n        if (this.direction === 'rtl') {\r\n          drawStart = this.width - drawStart - drawWidth;\r\n        }\r\n        ctx.fillRect(\r\n          drawStart,\r\n          boundaries.top + boundaries.topOffset + extraTop,\r\n          drawWidth,\r\n          drawHeight);\r\n        boundaries.topOffset += realLineHeight;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * High level function to know the height of the cursor.\r\n     * the currentChar is the one that precedes the cursor\r\n     * Returns fontSize of char at the current cursor\r\n     * Unused from the library, is for the end user\r\n     * @return {Number} Character font size\r\n     */\r\n    getCurrentCharFontSize: function() {\r\n      var cp = this._getCurrentCharIndex();\r\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\r\n    },\r\n\r\n    /**\r\n     * High level function to know the color of the cursor.\r\n     * the currentChar is the one that precedes the cursor\r\n     * Returns color (fill) of char at the current cursor\r\n     * if the text object has a pattern or gradient for filler, it will return that.\r\n     * Unused by the library, is for the end user\r\n     * @return {String | fabric.Gradient | fabric.Pattern} Character color (fill)\r\n     */\r\n    getCurrentCharColor: function() {\r\n      var cp = this._getCurrentCharIndex();\r\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\r\n    },\r\n\r\n    /**\r\n     * Returns the cursor position for the getCurrent.. functions\r\n     * @private\r\n     */\r\n    _getCurrentCharIndex: function() {\r\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\r\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\r\n      return { l: cursorPosition.lineIndex, c: charIndex };\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns fabric.IText instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.IText\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {function} [callback] invoked with new instance as argument\r\n   */\r\n  fabric.IText.fromObject = function(object, callback) {\r\n    parseDecoration(object);\r\n    if (object.styles) {\r\n      for (var i in object.styles) {\r\n        for (var j in object.styles[i]) {\r\n          parseDecoration(object.styles[i][j]);\r\n        }\r\n      }\r\n    }\r\n    fabric.Object._fromObject('IText', object, callback, 'text');\r\n  };\r\n})();\r\n\r\n\r\n(function() {\r\n\r\n  var clone = fabric.util.object.clone;\r\n\r\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n    /**\r\n     * Initializes all the interactive behavior of IText\r\n     */\r\n    initBehavior: function() {\r\n      this.initAddedHandler();\r\n      this.initRemovedHandler();\r\n      this.initCursorSelectionHandlers();\r\n      this.initDoubleClickSimulation();\r\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\r\n    },\r\n\r\n    onDeselect: function() {\r\n      this.isEditing && this.exitEditing();\r\n      this.selected = false;\r\n    },\r\n\r\n    /**\r\n     * Initializes \"added\" event handler\r\n     */\r\n    initAddedHandler: function() {\r\n      var _this = this;\r\n      this.on('added', function() {\r\n        var canvas = _this.canvas;\r\n        if (canvas) {\r\n          if (!canvas._hasITextHandlers) {\r\n            canvas._hasITextHandlers = true;\r\n            _this._initCanvasHandlers(canvas);\r\n          }\r\n          canvas._iTextInstances = canvas._iTextInstances || [];\r\n          canvas._iTextInstances.push(_this);\r\n        }\r\n      });\r\n    },\r\n\r\n    initRemovedHandler: function() {\r\n      var _this = this;\r\n      this.on('removed', function() {\r\n        var canvas = _this.canvas;\r\n        if (canvas) {\r\n          canvas._iTextInstances = canvas._iTextInstances || [];\r\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\r\n          if (canvas._iTextInstances.length === 0) {\r\n            canvas._hasITextHandlers = false;\r\n            _this._removeCanvasHandlers(canvas);\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * register canvas event to manage exiting on other instances\r\n     * @private\r\n     */\r\n    _initCanvasHandlers: function(canvas) {\r\n      canvas._mouseUpITextHandler = function() {\r\n        if (canvas._iTextInstances) {\r\n          canvas._iTextInstances.forEach(function(obj) {\r\n            obj.__isMousedown = false;\r\n          });\r\n        }\r\n      };\r\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\r\n    },\r\n\r\n    /**\r\n     * remove canvas event to manage exiting on other instances\r\n     * @private\r\n     */\r\n    _removeCanvasHandlers: function(canvas) {\r\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _tick: function() {\r\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\r\n\r\n      var tickState;\r\n\r\n      tickState = {\r\n        isAborted: false,\r\n        abort: function() {\r\n          this.isAborted = true;\r\n        },\r\n      };\r\n\r\n      obj.animate('_currentCursorOpacity', targetOpacity, {\r\n        duration: duration,\r\n        onComplete: function() {\r\n          if (!tickState.isAborted) {\r\n            obj[completeMethod]();\r\n          }\r\n        },\r\n        onChange: function() {\r\n          // we do not want to animate a selection, only cursor\r\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\r\n            obj.renderCursorOrSelection();\r\n          }\r\n        },\r\n        abort: function() {\r\n          return tickState.isAborted;\r\n        }\r\n      });\r\n      return tickState;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _onTickComplete: function() {\r\n\r\n      var _this = this;\r\n\r\n      if (this._cursorTimeout1) {\r\n        clearTimeout(this._cursorTimeout1);\r\n      }\r\n      this._cursorTimeout1 = setTimeout(function() {\r\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\r\n      }, 100);\r\n    },\r\n\r\n    /**\r\n     * Initializes delayed cursor\r\n     */\r\n    initDelayedCursor: function(restart) {\r\n      var _this = this,\r\n          delay = restart ? 0 : this.cursorDelay;\r\n\r\n      this.abortCursorAnimation();\r\n      this._currentCursorOpacity = 1;\r\n      this._cursorTimeout2 = setTimeout(function() {\r\n        _this._tick();\r\n      }, delay);\r\n    },\r\n\r\n    /**\r\n     * Aborts cursor animation and clears all timeouts\r\n     */\r\n    abortCursorAnimation: function() {\r\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\r\n          canvas = this.canvas;\r\n      this._currentTickState && this._currentTickState.abort();\r\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\r\n\r\n      clearTimeout(this._cursorTimeout1);\r\n      clearTimeout(this._cursorTimeout2);\r\n\r\n      this._currentCursorOpacity = 0;\r\n      // to clear just itext area we need to transform the context\r\n      // it may not be worth it\r\n      if (shouldClear && canvas) {\r\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\r\n      }\r\n\r\n    },\r\n\r\n    /**\r\n     * Selects entire text\r\n     * @return {fabric.IText} thisArg\r\n     * @chainable\r\n     */\r\n    selectAll: function() {\r\n      this.selectionStart = 0;\r\n      this.selectionEnd = this._text.length;\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Returns selected text\r\n     * @return {String}\r\n     */\r\n    getSelectedText: function() {\r\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\r\n    },\r\n\r\n    /**\r\n     * Find new selection index representing start of current word according to current selection index\r\n     * @param {Number} startFrom Current selection index\r\n     * @return {Number} New selection index\r\n     */\r\n    findWordBoundaryLeft: function(startFrom) {\r\n      var offset = 0, index = startFrom - 1;\r\n\r\n      // remove space before cursor first\r\n      if (this._reSpace.test(this._text[index])) {\r\n        while (this._reSpace.test(this._text[index])) {\r\n          offset++;\r\n          index--;\r\n        }\r\n      }\r\n      while (/\\S/.test(this._text[index]) && index > -1) {\r\n        offset++;\r\n        index--;\r\n      }\r\n\r\n      return startFrom - offset;\r\n    },\r\n\r\n    /**\r\n     * Find new selection index representing end of current word according to current selection index\r\n     * @param {Number} startFrom Current selection index\r\n     * @return {Number} New selection index\r\n     */\r\n    findWordBoundaryRight: function(startFrom) {\r\n      var offset = 0, index = startFrom;\r\n\r\n      // remove space after cursor first\r\n      if (this._reSpace.test(this._text[index])) {\r\n        while (this._reSpace.test(this._text[index])) {\r\n          offset++;\r\n          index++;\r\n        }\r\n      }\r\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\r\n        offset++;\r\n        index++;\r\n      }\r\n\r\n      return startFrom + offset;\r\n    },\r\n\r\n    /**\r\n     * Find new selection index representing start of current line according to current selection index\r\n     * @param {Number} startFrom Current selection index\r\n     * @return {Number} New selection index\r\n     */\r\n    findLineBoundaryLeft: function(startFrom) {\r\n      var offset = 0, index = startFrom - 1;\r\n\r\n      while (!/\\n/.test(this._text[index]) && index > -1) {\r\n        offset++;\r\n        index--;\r\n      }\r\n\r\n      return startFrom - offset;\r\n    },\r\n\r\n    /**\r\n     * Find new selection index representing end of current line according to current selection index\r\n     * @param {Number} startFrom Current selection index\r\n     * @return {Number} New selection index\r\n     */\r\n    findLineBoundaryRight: function(startFrom) {\r\n      var offset = 0, index = startFrom;\r\n\r\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\r\n        offset++;\r\n        index++;\r\n      }\r\n\r\n      return startFrom + offset;\r\n    },\r\n\r\n    /**\r\n     * Finds index corresponding to beginning or end of a word\r\n     * @param {Number} selectionStart Index of a character\r\n     * @param {Number} direction 1 or -1\r\n     * @return {Number} Index of the beginning or end of a word\r\n     */\r\n    searchWordBoundary: function(selectionStart, direction) {\r\n      var text = this._text,\r\n          index     = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\r\n          _char     = text[index],\r\n          // wrong\r\n          reNonWord = fabric.reNonWord;\r\n\r\n      while (!reNonWord.test(_char) && index > 0 && index < text.length) {\r\n        index += direction;\r\n        _char = text[index];\r\n      }\r\n      if (reNonWord.test(_char)) {\r\n        index += direction === 1 ? 0 : 1;\r\n      }\r\n      return index;\r\n    },\r\n\r\n    /**\r\n     * Selects a word based on the index\r\n     * @param {Number} selectionStart Index of a character\r\n     */\r\n    selectWord: function(selectionStart) {\r\n      selectionStart = selectionStart || this.selectionStart;\r\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\r\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\r\n\r\n      this.selectionStart = newSelectionStart;\r\n      this.selectionEnd = newSelectionEnd;\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n      this.renderCursorOrSelection();\r\n    },\r\n\r\n    /**\r\n     * Selects a line based on the index\r\n     * @param {Number} selectionStart Index of a character\r\n     * @return {fabric.IText} thisArg\r\n     * @chainable\r\n     */\r\n    selectLine: function(selectionStart) {\r\n      selectionStart = selectionStart || this.selectionStart;\r\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\r\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\r\n\r\n      this.selectionStart = newSelectionStart;\r\n      this.selectionEnd = newSelectionEnd;\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Enters editing state\r\n     * @return {fabric.IText} thisArg\r\n     * @chainable\r\n     */\r\n    enterEditing: function(e) {\r\n      if (this.isEditing || !this.editable) {\r\n        return;\r\n      }\r\n\r\n      if (this.canvas) {\r\n        this.canvas.calcOffset();\r\n        this.exitEditingOnOthers(this.canvas);\r\n      }\r\n\r\n      this.isEditing = true;\r\n\r\n      this.initHiddenTextarea(e);\r\n      this.hiddenTextarea.focus();\r\n      this.hiddenTextarea.value = this.text;\r\n      this._updateTextarea();\r\n      this._saveEditingProps();\r\n      this._setEditingProps();\r\n      this._textBeforeEdit = this.text;\r\n\r\n      this._tick();\r\n      this.fire('editing:entered');\r\n      this._fireSelectionChanged();\r\n      if (!this.canvas) {\r\n        return this;\r\n      }\r\n      this.canvas.fire('text:editing:entered', { target: this });\r\n      this.initMouseMoveHandler();\r\n      this.canvas.requestRenderAll();\r\n      return this;\r\n    },\r\n\r\n    exitEditingOnOthers: function(canvas) {\r\n      if (canvas._iTextInstances) {\r\n        canvas._iTextInstances.forEach(function(obj) {\r\n          obj.selected = false;\r\n          if (obj.isEditing) {\r\n            obj.exitEditing();\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Initializes \"mousemove\" event handler\r\n     */\r\n    initMouseMoveHandler: function() {\r\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    mouseMoveHandler: function(options) {\r\n      if (!this.__isMousedown || !this.isEditing) {\r\n        return;\r\n      }\r\n\r\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\r\n          currentStart = this.selectionStart,\r\n          currentEnd = this.selectionEnd;\r\n      if (\r\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\r\n        &&\r\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\r\n      ) {\r\n        return;\r\n      }\r\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\r\n        this.selectionStart = this.__selectionStartOnMouseDown;\r\n        this.selectionEnd = newSelectionStart;\r\n      }\r\n      else {\r\n        this.selectionStart = newSelectionStart;\r\n        this.selectionEnd = this.__selectionStartOnMouseDown;\r\n      }\r\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\r\n        this.restartCursorIfNeeded();\r\n        this._fireSelectionChanged();\r\n        this._updateTextarea();\r\n        this.renderCursorOrSelection();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setEditingProps: function() {\r\n      this.hoverCursor = 'text';\r\n\r\n      if (this.canvas) {\r\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\r\n      }\r\n\r\n      this.borderColor = this.editingBorderColor;\r\n      this.hasControls = this.selectable = false;\r\n      this.lockMovementX = this.lockMovementY = true;\r\n    },\r\n\r\n    /**\r\n     * convert from textarea to grapheme indexes\r\n     */\r\n    fromStringToGraphemeSelection: function(start, end, text) {\r\n      var smallerTextStart = text.slice(0, start),\r\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\r\n      if (start === end) {\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n      }\r\n      var smallerTextEnd = text.slice(start, end),\r\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\r\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n    },\r\n\r\n    /**\r\n     * convert from fabric to textarea values\r\n     */\r\n    fromGraphemeToStringSelection: function(start, end, _text) {\r\n      var smallerTextStart = _text.slice(0, start),\r\n          graphemeStart = smallerTextStart.join('').length;\r\n      if (start === end) {\r\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n      }\r\n      var smallerTextEnd = _text.slice(start, end),\r\n          graphemeEnd = smallerTextEnd.join('').length;\r\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _updateTextarea: function() {\r\n      this.cursorOffsetCache = { };\r\n      if (!this.hiddenTextarea) {\r\n        return;\r\n      }\r\n      if (!this.inCompositionMode) {\r\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\r\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\r\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\r\n      }\r\n      this.updateTextareaPosition();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    updateFromTextArea: function() {\r\n      if (!this.hiddenTextarea) {\r\n        return;\r\n      }\r\n      this.cursorOffsetCache = { };\r\n      this.text = this.hiddenTextarea.value;\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      var newSelection = this.fromStringToGraphemeSelection(\r\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\r\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\r\n      if (!this.inCompositionMode) {\r\n        this.selectionStart = newSelection.selectionStart;\r\n      }\r\n      this.updateTextareaPosition();\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    updateTextareaPosition: function() {\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        var style = this._calcTextareaPosition();\r\n        this.hiddenTextarea.style.left = style.left;\r\n        this.hiddenTextarea.style.top = style.top;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @return {Object} style contains style for hiddenTextarea\r\n     */\r\n    _calcTextareaPosition: function() {\r\n      if (!this.canvas) {\r\n        return { x: 1, y: 1 };\r\n      }\r\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\r\n          boundaries = this._getCursorBoundaries(desiredPosition),\r\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\r\n          lineIndex = cursorLocation.lineIndex,\r\n          charIndex = cursorLocation.charIndex,\r\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\r\n          leftOffset = boundaries.leftOffset,\r\n          m = this.calcTransformMatrix(),\r\n          p = {\r\n            x: boundaries.left + leftOffset,\r\n            y: boundaries.top + boundaries.topOffset + charHeight\r\n          },\r\n          retinaScaling = this.canvas.getRetinaScaling(),\r\n          upperCanvas = this.canvas.upperCanvasEl,\r\n          upperCanvasWidth = upperCanvas.width / retinaScaling,\r\n          upperCanvasHeight = upperCanvas.height / retinaScaling,\r\n          maxWidth = upperCanvasWidth - charHeight,\r\n          maxHeight = upperCanvasHeight - charHeight,\r\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\r\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\r\n\r\n      p = fabric.util.transformPoint(p, m);\r\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\r\n      p.x *= scaleX;\r\n      p.y *= scaleY;\r\n      if (p.x < 0) {\r\n        p.x = 0;\r\n      }\r\n      if (p.x > maxWidth) {\r\n        p.x = maxWidth;\r\n      }\r\n      if (p.y < 0) {\r\n        p.y = 0;\r\n      }\r\n      if (p.y > maxHeight) {\r\n        p.y = maxHeight;\r\n      }\r\n\r\n      // add canvas offset on document\r\n      p.x += this.canvas._offset.left;\r\n      p.y += this.canvas._offset.top;\r\n\r\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _saveEditingProps: function() {\r\n      this._savedProps = {\r\n        hasControls: this.hasControls,\r\n        borderColor: this.borderColor,\r\n        lockMovementX: this.lockMovementX,\r\n        lockMovementY: this.lockMovementY,\r\n        hoverCursor: this.hoverCursor,\r\n        selectable: this.selectable,\r\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\r\n        moveCursor: this.canvas && this.canvas.moveCursor\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _restoreEditingProps: function() {\r\n      if (!this._savedProps) {\r\n        return;\r\n      }\r\n\r\n      this.hoverCursor = this._savedProps.hoverCursor;\r\n      this.hasControls = this._savedProps.hasControls;\r\n      this.borderColor = this._savedProps.borderColor;\r\n      this.selectable = this._savedProps.selectable;\r\n      this.lockMovementX = this._savedProps.lockMovementX;\r\n      this.lockMovementY = this._savedProps.lockMovementY;\r\n\r\n      if (this.canvas) {\r\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\r\n        this.canvas.moveCursor = this._savedProps.moveCursor;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Exits from editing state\r\n     * @return {fabric.IText} thisArg\r\n     * @chainable\r\n     */\r\n    exitEditing: function() {\r\n      var isTextChanged = (this._textBeforeEdit !== this.text);\r\n      var hiddenTextarea = this.hiddenTextarea;\r\n      this.selected = false;\r\n      this.isEditing = false;\r\n\r\n      this.selectionEnd = this.selectionStart;\r\n\r\n      if (hiddenTextarea) {\r\n        hiddenTextarea.blur && hiddenTextarea.blur();\r\n        hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);\r\n      }\r\n      this.hiddenTextarea = null;\r\n      this.abortCursorAnimation();\r\n      this._restoreEditingProps();\r\n      this._currentCursorOpacity = 0;\r\n      if (this._shouldClearDimensionCache()) {\r\n        this.initDimensions();\r\n        this.setCoords();\r\n      }\r\n      this.fire('editing:exited');\r\n      isTextChanged && this.fire('modified');\r\n      if (this.canvas) {\r\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\r\n        this.canvas.fire('text:editing:exited', { target: this });\r\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _removeExtraneousStyles: function() {\r\n      for (var prop in this.styles) {\r\n        if (!this._textLines[prop]) {\r\n          delete this.styles[prop];\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * remove and reflow a style block from start to end.\r\n     * @param {Number} start linear start position for removal (included in removal)\r\n     * @param {Number} end linear end position for removal ( excluded from removal )\r\n     */\r\n    removeStyleFromTo: function(start, end) {\r\n      var cursorStart = this.get2DCursorLocation(start, true),\r\n          cursorEnd = this.get2DCursorLocation(end, true),\r\n          lineStart = cursorStart.lineIndex,\r\n          charStart = cursorStart.charIndex,\r\n          lineEnd = cursorEnd.lineIndex,\r\n          charEnd = cursorEnd.charIndex,\r\n          i, styleObj;\r\n      if (lineStart !== lineEnd) {\r\n        // step1 remove the trailing of lineStart\r\n        if (this.styles[lineStart]) {\r\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\r\n            delete this.styles[lineStart][i];\r\n          }\r\n        }\r\n        // step2 move the trailing of lineEnd to lineStart if needed\r\n        if (this.styles[lineEnd]) {\r\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\r\n            styleObj = this.styles[lineEnd][i];\r\n            if (styleObj) {\r\n              this.styles[lineStart] || (this.styles[lineStart] = { });\r\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\r\n            }\r\n          }\r\n        }\r\n        // step3 detects lines will be completely removed.\r\n        for (i = lineStart + 1; i <= lineEnd; i++) {\r\n          delete this.styles[i];\r\n        }\r\n        // step4 shift remaining lines.\r\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\r\n      }\r\n      else {\r\n        // remove and shift left on the same line\r\n        if (this.styles[lineStart]) {\r\n          styleObj = this.styles[lineStart];\r\n          var diff = charEnd - charStart, numericChar, _char;\r\n          for (i = charStart; i < charEnd; i++) {\r\n            delete styleObj[i];\r\n          }\r\n          for (_char in this.styles[lineStart]) {\r\n            numericChar = parseInt(_char, 10);\r\n            if (numericChar >= charEnd) {\r\n              styleObj[numericChar - diff] = styleObj[_char];\r\n              delete styleObj[_char];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Shifts line styles up or down\r\n     * @param {Number} lineIndex Index of a line\r\n     * @param {Number} offset Can any number?\r\n     */\r\n    shiftLineStyles: function(lineIndex, offset) {\r\n      // shift all line styles by offset upward or downward\r\n      // do not clone deep. we need new array, not new style objects\r\n      var clonedStyles = clone(this.styles);\r\n      for (var line in this.styles) {\r\n        var numericLine = parseInt(line, 10);\r\n        if (numericLine > lineIndex) {\r\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\r\n          if (!clonedStyles[numericLine - offset]) {\r\n            delete this.styles[numericLine];\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    restartCursorIfNeeded: function() {\r\n      if (!this._currentTickState || this._currentTickState.isAborted\r\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\r\n      ) {\r\n        this.initDelayedCursor();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handle insertion of more consecutive style lines for when one or more\r\n     * newlines gets added to the text. Since current style needs to be shifted\r\n     * first we shift the current style of the number lines needed, then we add\r\n     * new lines from the last to the first.\r\n     * @param {Number} lineIndex Index of a line\r\n     * @param {Number} charIndex Index of a char\r\n     * @param {Number} qty number of lines to add\r\n     * @param {Array} copiedStyle Array of objects styles\r\n     */\r\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\r\n      var currentCharStyle,\r\n          newLineStyles = {},\r\n          somethingAdded = false,\r\n          isEndOfLine = this._unwrappedTextLines[lineIndex].length === charIndex;\r\n\r\n      qty || (qty = 1);\r\n      this.shiftLineStyles(lineIndex, qty);\r\n      if (this.styles[lineIndex]) {\r\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\r\n      }\r\n      // we clone styles of all chars\r\n      // after cursor onto the current line\r\n      for (var index in this.styles[lineIndex]) {\r\n        var numIndex = parseInt(index, 10);\r\n        if (numIndex >= charIndex) {\r\n          somethingAdded = true;\r\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\r\n          // remove lines from the previous line since they're on a new line now\r\n          if (!(isEndOfLine && charIndex === 0)) {\r\n            delete this.styles[lineIndex][index];\r\n          }\r\n        }\r\n      }\r\n      var styleCarriedOver = false;\r\n      if (somethingAdded && !isEndOfLine) {\r\n        // if is end of line, the extra style we copied\r\n        // is probably not something we want\r\n        this.styles[lineIndex + qty] = newLineStyles;\r\n        styleCarriedOver = true;\r\n      }\r\n      if (styleCarriedOver) {\r\n        // skip the last line of since we already prepared it.\r\n        qty--;\r\n      }\r\n      // for the all the lines or all the other lines\r\n      // we clone current char style onto the next (otherwise empty) line\r\n      while (qty > 0) {\r\n        if (copiedStyle && copiedStyle[qty - 1]) {\r\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty - 1]) };\r\n        }\r\n        else if (currentCharStyle) {\r\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\r\n        }\r\n        else {\r\n          delete this.styles[lineIndex + qty];\r\n        }\r\n        qty--;\r\n      }\r\n      this._forceClearCache = true;\r\n    },\r\n\r\n    /**\r\n     * Inserts style object for a given line/char index\r\n     * @param {Number} lineIndex Index of a line\r\n     * @param {Number} charIndex Index of a char\r\n     * @param {Number} quantity number Style object to insert, if given\r\n     * @param {Array} copiedStyle array of style objects\r\n     */\r\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\r\n      if (!this.styles) {\r\n        this.styles = {};\r\n      }\r\n      var currentLineStyles       = this.styles[lineIndex],\r\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\r\n\r\n      quantity || (quantity = 1);\r\n      // shift all char styles by quantity forward\r\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\r\n      for (var index in currentLineStylesCloned) {\r\n        var numericIndex = parseInt(index, 10);\r\n        if (numericIndex >= charIndex) {\r\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\r\n          // only delete the style if there was nothing moved there\r\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\r\n            delete currentLineStyles[numericIndex];\r\n          }\r\n        }\r\n      }\r\n      this._forceClearCache = true;\r\n      if (copiedStyle) {\r\n        while (quantity--) {\r\n          if (!Object.keys(copiedStyle[quantity]).length) {\r\n            continue;\r\n          }\r\n          if (!this.styles[lineIndex]) {\r\n            this.styles[lineIndex] = {};\r\n          }\r\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\r\n        }\r\n        return;\r\n      }\r\n      if (!currentLineStyles) {\r\n        return;\r\n      }\r\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\r\n      while (newStyle && quantity--) {\r\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Inserts style object(s)\r\n     * @param {Array} insertedText Characters at the location where style is inserted\r\n     * @param {Number} start cursor index for inserting style\r\n     * @param {Array} [copiedStyle] array of style objects to insert.\r\n     */\r\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\r\n      var cursorLoc = this.get2DCursorLocation(start, true),\r\n          addedLines = [0], linesLength = 0;\r\n      // get an array of how many char per lines are being added.\r\n      for (var i = 0; i < insertedText.length; i++) {\r\n        if (insertedText[i] === '\\n') {\r\n          linesLength++;\r\n          addedLines[linesLength] = 0;\r\n        }\r\n        else {\r\n          addedLines[linesLength]++;\r\n        }\r\n      }\r\n      // for the first line copy the style from the current char position.\r\n      if (addedLines[0] > 0) {\r\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\r\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\r\n      }\r\n      linesLength && this.insertNewlineStyleObject(\r\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\r\n      for (var i = 1; i < linesLength; i++) {\r\n        if (addedLines[i] > 0) {\r\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n        }\r\n        else if (copiedStyle) {\r\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\r\n        }\r\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\r\n      }\r\n      // we use i outside the loop to get it like linesLength\r\n      if (addedLines[i] > 0) {\r\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set the selectionStart and selectionEnd according to the new position of cursor\r\n     * mimic the key - mouse navigation when shift is pressed.\r\n     */\r\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\r\n      if (newSelection <= start) {\r\n        if (end === start) {\r\n          this._selectionDirection = 'left';\r\n        }\r\n        else if (this._selectionDirection === 'right') {\r\n          this._selectionDirection = 'left';\r\n          this.selectionEnd = start;\r\n        }\r\n        this.selectionStart = newSelection;\r\n      }\r\n      else if (newSelection > start && newSelection < end) {\r\n        if (this._selectionDirection === 'right') {\r\n          this.selectionEnd = newSelection;\r\n        }\r\n        else {\r\n          this.selectionStart = newSelection;\r\n        }\r\n      }\r\n      else {\r\n        // newSelection is > selection start and end\r\n        if (end === start) {\r\n          this._selectionDirection = 'right';\r\n        }\r\n        else if (this._selectionDirection === 'left') {\r\n          this._selectionDirection = 'right';\r\n          this.selectionStart = end;\r\n        }\r\n        this.selectionEnd = newSelection;\r\n      }\r\n    },\r\n\r\n    setSelectionInBoundaries: function() {\r\n      var length = this.text.length;\r\n      if (this.selectionStart > length) {\r\n        this.selectionStart = length;\r\n      }\r\n      else if (this.selectionStart < 0) {\r\n        this.selectionStart = 0;\r\n      }\r\n      if (this.selectionEnd > length) {\r\n        this.selectionEnd = length;\r\n      }\r\n      else if (this.selectionEnd < 0) {\r\n        this.selectionEnd = 0;\r\n      }\r\n    }\r\n  });\r\n})();\r\n\r\n\r\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n  /**\r\n   * Initializes \"dbclick\" event handler\r\n   */\r\n  initDoubleClickSimulation: function() {\r\n\r\n    // for double click\r\n    this.__lastClickTime = +new Date();\r\n\r\n    // for triple click\r\n    this.__lastLastClickTime = +new Date();\r\n\r\n    this.__lastPointer = { };\r\n\r\n    this.on('mousedown', this.onMouseDown);\r\n  },\r\n\r\n  /**\r\n   * Default event handler to simulate triple click\r\n   * @private\r\n   */\r\n  onMouseDown: function(options) {\r\n    if (!this.canvas) {\r\n      return;\r\n    }\r\n    this.__newClickTime = +new Date();\r\n    var newPointer = options.pointer;\r\n    if (this.isTripleClick(newPointer)) {\r\n      this.fire('tripleclick', options);\r\n      this._stopEvent(options.e);\r\n    }\r\n    this.__lastLastClickTime = this.__lastClickTime;\r\n    this.__lastClickTime = this.__newClickTime;\r\n    this.__lastPointer = newPointer;\r\n    this.__lastIsEditing = this.isEditing;\r\n    this.__lastSelected = this.selected;\r\n  },\r\n\r\n  isTripleClick: function(newPointer) {\r\n    return this.__newClickTime - this.__lastClickTime < 500 &&\r\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\r\n        this.__lastPointer.x === newPointer.x &&\r\n        this.__lastPointer.y === newPointer.y;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _stopEvent: function(e) {\r\n    e.preventDefault && e.preventDefault();\r\n    e.stopPropagation && e.stopPropagation();\r\n  },\r\n\r\n  /**\r\n   * Initializes event handlers related to cursor or selection\r\n   */\r\n  initCursorSelectionHandlers: function() {\r\n    this.initMousedownHandler();\r\n    this.initMouseupHandler();\r\n    this.initClicks();\r\n  },\r\n\r\n  /**\r\n   * Default handler for double click, select a word\r\n   */\r\n  doubleClickHandler: function(options) {\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\r\n  },\r\n\r\n  /**\r\n   * Default handler for triple click, select a line\r\n   */\r\n  tripleClickHandler: function(options) {\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\r\n  },\r\n\r\n  /**\r\n   * Initializes double and triple click event handlers\r\n   */\r\n  initClicks: function() {\r\n    this.on('mousedblclick', this.doubleClickHandler);\r\n    this.on('tripleclick', this.tripleClickHandler);\r\n  },\r\n\r\n  /**\r\n   * Default event handler for the basic functionalities needed on _mouseDown\r\n   * can be overridden to do something different.\r\n   * Scope of this implementation is: find the click position, set selectionStart\r\n   * find selectionEnd, initialize the drawing of either cursor or selection area\r\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\r\n   * current compositionMode. It will be set to false.\r\n   */\r\n  _mouseDownHandler: function(options) {\r\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n      return;\r\n    }\r\n\r\n    this.__isMousedown = true;\r\n\r\n    if (this.selected) {\r\n      this.inCompositionMode = false;\r\n      this.setCursorByClick(options.e);\r\n    }\r\n\r\n    if (this.isEditing) {\r\n      this.__selectionStartOnMouseDown = this.selectionStart;\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        this.abortCursorAnimation();\r\n      }\r\n      this.renderCursorOrSelection();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Default event handler for the basic functionalities needed on mousedown:before\r\n   * can be overridden to do something different.\r\n   * Scope of this implementation is: verify the object is already selected when mousing down\r\n   */\r\n  _mouseDownHandlerBefore: function(options) {\r\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\r\n      return;\r\n    }\r\n    // we want to avoid that an object that was selected and then becomes unselectable,\r\n    // may trigger editing mode in some way.\r\n    this.selected = this === this.canvas._activeObject;\r\n  },\r\n\r\n  /**\r\n   * Initializes \"mousedown\" event handler\r\n   */\r\n  initMousedownHandler: function() {\r\n    this.on('mousedown', this._mouseDownHandler);\r\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\r\n  },\r\n\r\n  /**\r\n   * Initializes \"mouseup\" event handler\r\n   */\r\n  initMouseupHandler: function() {\r\n    this.on('mouseup', this.mouseUpHandler);\r\n  },\r\n\r\n  /**\r\n   * standard handler for mouse up, overridable\r\n   * @private\r\n   */\r\n  mouseUpHandler: function(options) {\r\n    this.__isMousedown = false;\r\n    if (!this.editable || this.group ||\r\n      (options.transform && options.transform.actionPerformed) ||\r\n      (options.e.button && options.e.button !== 1)) {\r\n      return;\r\n    }\r\n\r\n    if (this.canvas) {\r\n      var currentActive = this.canvas._activeObject;\r\n      if (currentActive && currentActive !== this) {\r\n        // avoid running this logic when there is an active object\r\n        // this because is possible with shift click and fast clicks,\r\n        // to rapidly deselect and reselect this object and trigger an enterEdit\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.__lastSelected && !this.__corner) {\r\n      this.selected = false;\r\n      this.__lastSelected = false;\r\n      this.enterEditing(options.e);\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        this.initDelayedCursor(true);\r\n      }\r\n      else {\r\n        this.renderCursorOrSelection();\r\n      }\r\n    }\r\n    else {\r\n      this.selected = true;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Changes cursor location in a text depending on passed pointer (x/y) object\r\n   * @param {Event} e Event object\r\n   */\r\n  setCursorByClick: function(e) {\r\n    var newSelection = this.getSelectionStartFromPointer(e),\r\n        start = this.selectionStart, end = this.selectionEnd;\r\n    if (e.shiftKey) {\r\n      this.setSelectionStartEndWithShift(start, end, newSelection);\r\n    }\r\n    else {\r\n      this.selectionStart = newSelection;\r\n      this.selectionEnd = newSelection;\r\n    }\r\n    if (this.isEditing) {\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Returns index of a character corresponding to where an object was clicked\r\n   * @param {Event} e Event object\r\n   * @return {Number} Index of a character\r\n   */\r\n  getSelectionStartFromPointer: function(e) {\r\n    var mouseOffset = this.getLocalPointer(e),\r\n        prevWidth = 0,\r\n        width = 0,\r\n        height = 0,\r\n        charIndex = 0,\r\n        lineIndex = 0,\r\n        lineLeftOffset,\r\n        line;\r\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n      if (height <= mouseOffset.y) {\r\n        height += this.getHeightOfLine(i) * this.scaleY;\r\n        lineIndex = i;\r\n        if (i > 0) {\r\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\r\n        }\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n    width = lineLeftOffset * this.scaleX;\r\n    line = this._textLines[lineIndex];\r\n    // handling of RTL: in order to get things work correctly,\r\n    // we assume RTL writing is mirrored compared to LTR writing.\r\n    // so in position detection we mirror the X offset, and when is time\r\n    // of rendering it, we mirror it again.\r\n    if (this.direction === 'rtl') {\r\n      mouseOffset.x = this.width * this.scaleX - mouseOffset.x + width;\r\n    }\r\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n      prevWidth = width;\r\n      // i removed something about flipX here, check.\r\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\r\n      if (width <= mouseOffset.x) {\r\n        charIndex++;\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\r\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\r\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\r\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\r\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\r\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\r\n        newSelectionStart = index + offset;\r\n    // if object is horizontally flipped, mirror cursor location from the end\r\n    if (this.flipX) {\r\n      newSelectionStart = jlen - newSelectionStart;\r\n    }\r\n\r\n    if (newSelectionStart > this._text.length) {\r\n      newSelectionStart = this._text.length;\r\n    }\r\n\r\n    return newSelectionStart;\r\n  }\r\n});\r\n\r\n\r\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\r\n\r\n  /**\r\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\r\n   */\r\n  initHiddenTextarea: function() {\r\n    this.hiddenTextarea = fabric.document.createElement('textarea');\r\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\r\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\r\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\r\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\r\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\r\n    this.hiddenTextarea.setAttribute('wrap', 'off');\r\n    var style = this._calcTextareaPosition();\r\n    // line-height: 1px; was removed from the style to fix this:\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\r\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\r\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\r\n    ' paddingｰtop: ' + style.fontSize + ';';\r\n\r\n    if (this.hiddenTextareaContainer) {\r\n      this.hiddenTextareaContainer.appendChild(this.hiddenTextarea);\r\n    }\r\n    else {\r\n      fabric.document.body.appendChild(this.hiddenTextarea);\r\n    }\r\n\r\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\r\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\r\n\r\n    if (!this._clickHandlerInitialized && this.canvas) {\r\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\r\n      this._clickHandlerInitialized = true;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * For functionalities on keyDown\r\n   * Map a special key to a function of the instance/prototype\r\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\r\n   * this map setting the name of a function that you build on the fabric.Itext or\r\n   * your prototype.\r\n   * the map change will affect all Instances unless you need for only some text Instances\r\n   * in that case you have to clone this object and assign your Instance.\r\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\r\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\r\n   */\r\n  keysMap: {\r\n    9:  'exitEditing',\r\n    27: 'exitEditing',\r\n    33: 'moveCursorUp',\r\n    34: 'moveCursorDown',\r\n    35: 'moveCursorRight',\r\n    36: 'moveCursorLeft',\r\n    37: 'moveCursorLeft',\r\n    38: 'moveCursorUp',\r\n    39: 'moveCursorRight',\r\n    40: 'moveCursorDown',\r\n  },\r\n\r\n  keysMapRtl: {\r\n    9:  'exitEditing',\r\n    27: 'exitEditing',\r\n    33: 'moveCursorUp',\r\n    34: 'moveCursorDown',\r\n    35: 'moveCursorLeft',\r\n    36: 'moveCursorRight',\r\n    37: 'moveCursorRight',\r\n    38: 'moveCursorUp',\r\n    39: 'moveCursorLeft',\r\n    40: 'moveCursorDown',\r\n  },\r\n\r\n  /**\r\n   * For functionalities on keyUp + ctrl || cmd\r\n   */\r\n  ctrlKeysMapUp: {\r\n    67: 'copy',\r\n    88: 'cut'\r\n  },\r\n\r\n  /**\r\n   * For functionalities on keyDown + ctrl || cmd\r\n   */\r\n  ctrlKeysMapDown: {\r\n    65: 'selectAll'\r\n  },\r\n\r\n  onClick: function() {\r\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\r\n    this.hiddenTextarea && this.hiddenTextarea.focus();\r\n  },\r\n\r\n  /**\r\n   * Handles keydown event\r\n   * only used for arrows and combination of modifier keys.\r\n   * @param {Event} e Event object\r\n   */\r\n  onKeyDown: function(e) {\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    var keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\r\n    if (e.keyCode in keyMap) {\r\n      this[keyMap[e.keyCode]](e);\r\n    }\r\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\r\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\r\n      // if i press an arrow key just update selection\r\n      this.inCompositionMode = false;\r\n      this.clearContextTop();\r\n      this.renderCursorOrSelection();\r\n    }\r\n    else {\r\n      this.canvas && this.canvas.requestRenderAll();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Handles keyup event\r\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\r\n   * if a copy/cut event fired, keyup is dismissed\r\n   * @param {Event} e Event object\r\n   */\r\n  onKeyUp: function(e) {\r\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\r\n      this._copyDone = false;\r\n      return;\r\n    }\r\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\r\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n    this.canvas && this.canvas.requestRenderAll();\r\n  },\r\n\r\n  /**\r\n   * Handles onInput event\r\n   * @param {Event} e Event object\r\n   */\r\n  onInput: function(e) {\r\n    var fromPaste = this.fromPaste;\r\n    this.fromPaste = false;\r\n    e && e.stopPropagation();\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    // decisions about style changes.\r\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\r\n        charCount = this._text.length,\r\n        nextCharCount = nextText.length,\r\n        removedText, insertedText,\r\n        charDiff = nextCharCount - charCount,\r\n        selectionStart = this.selectionStart, selectionEnd = this.selectionEnd,\r\n        selection = selectionStart !== selectionEnd,\r\n        copiedStyle, removeFrom, removeTo;\r\n    if (this.hiddenTextarea.value === '') {\r\n      this.styles = { };\r\n      this.updateFromTextArea();\r\n      this.fire('changed');\r\n      if (this.canvas) {\r\n        this.canvas.fire('text:changed', { target: this });\r\n        this.canvas.requestRenderAll();\r\n      }\r\n      return;\r\n    }\r\n\r\n    var textareaSelection = this.fromStringToGraphemeSelection(\r\n      this.hiddenTextarea.selectionStart,\r\n      this.hiddenTextarea.selectionEnd,\r\n      this.hiddenTextarea.value\r\n    );\r\n    var backDelete = selectionStart > textareaSelection.selectionStart;\r\n\r\n    if (selection) {\r\n      removedText = this._text.slice(selectionStart, selectionEnd);\r\n      charDiff += selectionEnd - selectionStart;\r\n    }\r\n    else if (nextCharCount < charCount) {\r\n      if (backDelete) {\r\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\r\n      }\r\n      else {\r\n        removedText = this._text.slice(selectionStart, selectionStart - charDiff);\r\n      }\r\n    }\r\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\r\n    if (removedText && removedText.length) {\r\n      if (insertedText.length) {\r\n        // let's copy some style before deleting.\r\n        // we want to copy the style before the cursor OR the style at the cursor if selection\r\n        // is bigger than 0.\r\n        copiedStyle = this.getSelectionStyles(selectionStart, selectionStart + 1, false);\r\n        // now duplicate the style one for each inserted text.\r\n        copiedStyle = insertedText.map(function() {\r\n          // this return an array of references, but that is fine since we are\r\n          // copying the style later.\r\n          return copiedStyle[0];\r\n        });\r\n      }\r\n      if (selection) {\r\n        removeFrom = selectionStart;\r\n        removeTo = selectionEnd;\r\n      }\r\n      else if (backDelete) {\r\n        // detect differences between forwardDelete and backDelete\r\n        removeFrom = selectionEnd - removedText.length;\r\n        removeTo = selectionEnd;\r\n      }\r\n      else {\r\n        removeFrom = selectionEnd;\r\n        removeTo = selectionEnd + removedText.length;\r\n      }\r\n      this.removeStyleFromTo(removeFrom, removeTo);\r\n    }\r\n    if (insertedText.length) {\r\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\r\n        copiedStyle = fabric.copiedTextStyle;\r\n      }\r\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\r\n    }\r\n    this.updateFromTextArea();\r\n    this.fire('changed');\r\n    if (this.canvas) {\r\n      this.canvas.fire('text:changed', { target: this });\r\n      this.canvas.requestRenderAll();\r\n    }\r\n  },\r\n  /**\r\n   * Composition start\r\n   */\r\n  onCompositionStart: function() {\r\n    this.inCompositionMode = true;\r\n  },\r\n\r\n  /**\r\n   * Composition end\r\n   */\r\n  onCompositionEnd: function() {\r\n    this.inCompositionMode = false;\r\n  },\r\n\r\n  // /**\r\n  //  * Composition update\r\n  //  */\r\n  onCompositionUpdate: function(e) {\r\n    this.compositionStart = e.target.selectionStart;\r\n    this.compositionEnd = e.target.selectionEnd;\r\n    this.updateTextareaPosition();\r\n  },\r\n\r\n  /**\r\n   * Copies selected text\r\n   * @param {Event} e Event object\r\n   */\r\n  copy: function() {\r\n    if (this.selectionStart === this.selectionEnd) {\r\n      //do not cut-copy if no selection\r\n      return;\r\n    }\r\n\r\n    fabric.copiedText = this.getSelectedText();\r\n    if (!fabric.disableStyleCopyPaste) {\r\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\r\n    }\r\n    else {\r\n      fabric.copiedTextStyle = null;\r\n    }\r\n    this._copyDone = true;\r\n  },\r\n\r\n  /**\r\n   * Pastes text\r\n   * @param {Event} e Event object\r\n   */\r\n  paste: function() {\r\n    this.fromPaste = true;\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object\r\n   * @return {Object} Clipboard data object\r\n   */\r\n  _getClipboardData: function(e) {\r\n    return (e && e.clipboardData) || fabric.window.clipboardData;\r\n  },\r\n\r\n  /**\r\n   * Finds the width in pixels before the cursor on the same line\r\n   * @private\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @return {Number} widthBeforeCursor width before cursor\r\n   */\r\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\r\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\r\n\r\n    if (charIndex > 0) {\r\n      bound = this.__charBounds[lineIndex][charIndex - 1];\r\n      widthBeforeCursor += bound.left + bound.width;\r\n    }\r\n    return widthBeforeCursor;\r\n  },\r\n\r\n  /**\r\n   * Gets start offset of a selection\r\n   * @param {Event} e Event object\r\n   * @param {Boolean} isRight\r\n   * @return {Number}\r\n   */\r\n  getDownCursorOffset: function(e, isRight) {\r\n    var selectionProp = this._getSelectionForOffset(e, isRight),\r\n        cursorLocation = this.get2DCursorLocation(selectionProp),\r\n        lineIndex = cursorLocation.lineIndex;\r\n    // if on last line, down cursor goes to end of line\r\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\r\n      // move to the end of a text\r\n      return this._text.length - selectionProp;\r\n    }\r\n    var charIndex = cursorLocation.charIndex,\r\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\r\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\r\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\r\n  },\r\n\r\n  /**\r\n   * private\r\n   * Helps finding if the offset should be counted from Start or End\r\n   * @param {Event} e Event object\r\n   * @param {Boolean} isRight\r\n   * @return {Number}\r\n   */\r\n  _getSelectionForOffset: function(e, isRight) {\r\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\r\n      return this.selectionEnd;\r\n    }\r\n    else {\r\n      return this.selectionStart;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {Event} e Event object\r\n   * @param {Boolean} isRight\r\n   * @return {Number}\r\n   */\r\n  getUpCursorOffset: function(e, isRight) {\r\n    var selectionProp = this._getSelectionForOffset(e, isRight),\r\n        cursorLocation = this.get2DCursorLocation(selectionProp),\r\n        lineIndex = cursorLocation.lineIndex;\r\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\r\n      // if on first line, up cursor goes to start of line\r\n      return -selectionProp;\r\n    }\r\n    var charIndex = cursorLocation.charIndex,\r\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\r\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\r\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\r\n    // return a negative offset\r\n    return -this._textLines[lineIndex - 1].length\r\n     + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\r\n  },\r\n\r\n  /**\r\n   * for a given width it founds the matching character.\r\n   * @private\r\n   */\r\n  _getIndexOnLine: function(lineIndex, width) {\r\n\r\n    var line = this._textLines[lineIndex],\r\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\r\n        widthOfCharsOnLine = lineLeftOffset,\r\n        indexOnLine = 0, charWidth, foundMatch;\r\n\r\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n      charWidth = this.__charBounds[lineIndex][j].width;\r\n      widthOfCharsOnLine += charWidth;\r\n      if (widthOfCharsOnLine > width) {\r\n        foundMatch = true;\r\n        var leftEdge = widthOfCharsOnLine - charWidth,\r\n            rightEdge = widthOfCharsOnLine,\r\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\r\n            offsetFromRightEdge = Math.abs(rightEdge - width);\r\n\r\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // reached end\r\n    if (!foundMatch) {\r\n      indexOnLine = line.length - 1;\r\n    }\r\n\r\n    return indexOnLine;\r\n  },\r\n\r\n\r\n  /**\r\n   * Moves cursor down\r\n   * @param {Event} e Event object\r\n   */\r\n  moveCursorDown: function(e) {\r\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n      return;\r\n    }\r\n    this._moveCursorUpOrDown('Down', e);\r\n  },\r\n\r\n  /**\r\n   * Moves cursor up\r\n   * @param {Event} e Event object\r\n   */\r\n  moveCursorUp: function(e) {\r\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n      return;\r\n    }\r\n    this._moveCursorUpOrDown('Up', e);\r\n  },\r\n\r\n  /**\r\n   * Moves cursor up or down, fires the events\r\n   * @param {String} direction 'Up' or 'Down'\r\n   * @param {Event} e Event object\r\n   */\r\n  _moveCursorUpOrDown: function(direction, e) {\r\n    // getUpCursorOffset\r\n    // getDownCursorOffset\r\n    var action = 'get' + direction + 'CursorOffset',\r\n        offset = this[action](e, this._selectionDirection === 'right');\r\n    if (e.shiftKey) {\r\n      this.moveCursorWithShift(offset);\r\n    }\r\n    else {\r\n      this.moveCursorWithoutShift(offset);\r\n    }\r\n    if (offset !== 0) {\r\n      this.setSelectionInBoundaries();\r\n      this.abortCursorAnimation();\r\n      this._currentCursorOpacity = 1;\r\n      this.initDelayedCursor();\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Moves cursor with shift\r\n   * @param {Number} offset\r\n   */\r\n  moveCursorWithShift: function(offset) {\r\n    var newSelection = this._selectionDirection === 'left'\r\n      ? this.selectionStart + offset\r\n      : this.selectionEnd + offset;\r\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\r\n    return offset !== 0;\r\n  },\r\n\r\n  /**\r\n   * Moves cursor up without shift\r\n   * @param {Number} offset\r\n   */\r\n  moveCursorWithoutShift: function(offset) {\r\n    if (offset < 0) {\r\n      this.selectionStart += offset;\r\n      this.selectionEnd = this.selectionStart;\r\n    }\r\n    else {\r\n      this.selectionEnd += offset;\r\n      this.selectionStart = this.selectionEnd;\r\n    }\r\n    return offset !== 0;\r\n  },\r\n\r\n  /**\r\n   * Moves cursor left\r\n   * @param {Event} e Event object\r\n   */\r\n  moveCursorLeft: function(e) {\r\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n      return;\r\n    }\r\n    this._moveCursorLeftOrRight('Left', e);\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @return {Boolean} true if a change happened\r\n   */\r\n  _move: function(e, prop, direction) {\r\n    var newValue;\r\n    if (e.altKey) {\r\n      newValue = this['findWordBoundary' + direction](this[prop]);\r\n    }\r\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\r\n      newValue = this['findLineBoundary' + direction](this[prop]);\r\n    }\r\n    else {\r\n      this[prop] += direction === 'Left' ? -1 : 1;\r\n      return true;\r\n    }\r\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\r\n      this[prop] = newValue;\r\n      return true;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _moveLeft: function(e, prop) {\r\n    return this._move(e, prop, 'Left');\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _moveRight: function(e, prop) {\r\n    return this._move(e, prop, 'Right');\r\n  },\r\n\r\n  /**\r\n   * Moves cursor left without keeping selection\r\n   * @param {Event} e\r\n   */\r\n  moveCursorLeftWithoutShift: function(e) {\r\n    var change = true;\r\n    this._selectionDirection = 'left';\r\n\r\n    // only move cursor when there is no selection,\r\n    // otherwise we discard it, and leave cursor on same place\r\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\r\n      change = this._moveLeft(e, 'selectionStart');\r\n\r\n    }\r\n    this.selectionEnd = this.selectionStart;\r\n    return change;\r\n  },\r\n\r\n  /**\r\n   * Moves cursor left while keeping selection\r\n   * @param {Event} e\r\n   */\r\n  moveCursorLeftWithShift: function(e) {\r\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\r\n      return this._moveLeft(e, 'selectionEnd');\r\n    }\r\n    else if (this.selectionStart !== 0){\r\n      this._selectionDirection = 'left';\r\n      return this._moveLeft(e, 'selectionStart');\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Moves cursor right\r\n   * @param {Event} e Event object\r\n   */\r\n  moveCursorRight: function(e) {\r\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\r\n      return;\r\n    }\r\n    this._moveCursorLeftOrRight('Right', e);\r\n  },\r\n\r\n  /**\r\n   * Moves cursor right or Left, fires event\r\n   * @param {String} direction 'Left', 'Right'\r\n   * @param {Event} e Event object\r\n   */\r\n  _moveCursorLeftOrRight: function(direction, e) {\r\n    var actionName = 'moveCursor' + direction + 'With';\r\n    this._currentCursorOpacity = 1;\r\n\r\n    if (e.shiftKey) {\r\n      actionName += 'Shift';\r\n    }\r\n    else {\r\n      actionName += 'outShift';\r\n    }\r\n    if (this[actionName](e)) {\r\n      this.abortCursorAnimation();\r\n      this.initDelayedCursor();\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Moves cursor right while keeping selection\r\n   * @param {Event} e\r\n   */\r\n  moveCursorRightWithShift: function(e) {\r\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\r\n      return this._moveRight(e, 'selectionStart');\r\n    }\r\n    else if (this.selectionEnd !== this._text.length) {\r\n      this._selectionDirection = 'right';\r\n      return this._moveRight(e, 'selectionEnd');\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Moves cursor right without keeping selection\r\n   * @param {Event} e Event object\r\n   */\r\n  moveCursorRightWithoutShift: function(e) {\r\n    var changed = true;\r\n    this._selectionDirection = 'right';\r\n\r\n    if (this.selectionStart === this.selectionEnd) {\r\n      changed = this._moveRight(e, 'selectionStart');\r\n      this.selectionEnd = this.selectionStart;\r\n    }\r\n    else {\r\n      this.selectionStart = this.selectionEnd;\r\n    }\r\n    return changed;\r\n  },\r\n\r\n  /**\r\n   * Removes characters from start/end\r\n   * start/end ar per grapheme position in _text array.\r\n   *\r\n   * @param {Number} start\r\n   * @param {Number} end default to start + 1\r\n   */\r\n  removeChars: function(start, end) {\r\n    if (typeof end === 'undefined') {\r\n      end = start + 1;\r\n    }\r\n    this.removeStyleFromTo(start, end);\r\n    this._text.splice(start, end - start);\r\n    this.text = this._text.join('');\r\n    this.set('dirty', true);\r\n    if (this._shouldClearDimensionCache()) {\r\n      this.initDimensions();\r\n      this.setCoords();\r\n    }\r\n    this._removeExtraneousStyles();\r\n  },\r\n\r\n  /**\r\n   * insert characters at start position, before start position.\r\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\r\n   * if style array is provided, it must be as the same length of text in graphemes\r\n   * if end is provided and is bigger than start, old text is replaced.\r\n   * start/end ar per grapheme position in _text array.\r\n   *\r\n   * @param {String} text text to insert\r\n   * @param {Array} style array of style objects\r\n   * @param {Number} start\r\n   * @param {Number} end default to start + 1\r\n   */\r\n  insertChars: function(text, style, start, end) {\r\n    if (typeof end === 'undefined') {\r\n      end = start;\r\n    }\r\n    if (end > start) {\r\n      this.removeStyleFromTo(start, end);\r\n    }\r\n    var graphemes = fabric.util.string.graphemeSplit(text);\r\n    this.insertNewStyleBlock(graphemes, start, style);\r\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\r\n    this.text = this._text.join('');\r\n    this.set('dirty', true);\r\n    if (this._shouldClearDimensionCache()) {\r\n      this.initDimensions();\r\n      this.setCoords();\r\n    }\r\n    this._removeExtraneousStyles();\r\n  },\r\n\r\n});\r\n\r\n\r\n/* _TO_SVG_START_ */\r\n(function() {\r\n  var toFixed = fabric.util.toFixed,\r\n      multipleSpacesRegex = /  +/g;\r\n\r\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\r\n\r\n    /**\r\n     * Returns SVG representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    _toSVG: function() {\r\n      var offsets = this._getSVGLeftTopOffsets(),\r\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\r\n      return this._wrapSVGTextAndBg(textAndBg);\r\n    },\r\n\r\n    /**\r\n     * Returns svg representation of an instance\r\n     * @param {Function} [reviver] Method for further parsing of svg representation.\r\n     * @return {String} svg representation of an instance\r\n     */\r\n    toSVG: function(reviver) {\r\n      return this._createBaseSVGMarkup(\r\n        this._toSVG(),\r\n        { reviver: reviver, noStyle: true, withShadow: true }\r\n      );\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getSVGLeftTopOffsets: function() {\r\n      return {\r\n        textLeft: -this.width / 2,\r\n        textTop: -this.height / 2,\r\n        lineTop: this.getHeightOfLine(0)\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _wrapSVGTextAndBg: function(textAndBg) {\r\n      var noShadow = true,\r\n          textDecoration = this.getSvgTextDecoration(this);\r\n      return [\r\n        textAndBg.textBgRects.join(''),\r\n        '\\t\\t<text xml:space=\"preserve\" ',\r\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\r\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\r\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\r\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\r\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\r\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\r\n        textAndBg.textSpans.join(''),\r\n        '</text>\\n'\r\n      ];\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @param {Number} textTopOffset Text top offset\r\n     * @param {Number} textLeftOffset Text left offset\r\n     * @return {Object}\r\n     */\r\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\r\n      var textSpans = [],\r\n          textBgRects = [],\r\n          height = textTopOffset, lineOffset;\r\n      // bounding-box background\r\n      this._setSVGBg(textBgRects);\r\n\r\n      // text and text-background\r\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\r\n        lineOffset = this._getLineLeftOffset(i);\r\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\r\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\r\n        }\r\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\r\n        height += this.getHeightOfLine(i);\r\n      }\r\n\r\n      return {\r\n        textSpans: textSpans,\r\n        textBgRects: textBgRects\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\r\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\r\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\r\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\r\n          dy = styleDecl.deltaY, dySpan = '',\r\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n      if (dy) {\r\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\r\n      }\r\n      return [\r\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\r\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\r\n        fillStyles, '>',\r\n        fabric.util.string.escapeXml(_char),\r\n        '</tspan>'\r\n      ].join('');\r\n    },\r\n\r\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\r\n      // set proper line offset\r\n      var lineHeight = this.getHeightOfLine(lineIndex),\r\n          isJustify = this.textAlign.indexOf('justify') !== -1,\r\n          actualStyle,\r\n          nextStyle,\r\n          charsToRender = '',\r\n          charBox, style,\r\n          boxWidth = 0,\r\n          line = this._textLines[lineIndex],\r\n          timeToRender;\r\n\r\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\r\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\r\n        timeToRender = i === len || this.charSpacing;\r\n        charsToRender += line[i];\r\n        charBox = this.__charBounds[lineIndex][i];\r\n        if (boxWidth === 0) {\r\n          textLeftOffset += charBox.kernedWidth - charBox.width;\r\n          boxWidth += charBox.width;\r\n        }\r\n        else {\r\n          boxWidth += charBox.kernedWidth;\r\n        }\r\n        if (isJustify && !timeToRender) {\r\n          if (this._reSpaceAndTab.test(line[i])) {\r\n            timeToRender = true;\r\n          }\r\n        }\r\n        if (!timeToRender) {\r\n          // if we have charSpacing, we render char by char\r\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\r\n        }\r\n        if (timeToRender) {\r\n          style = this._getStyleDeclaration(lineIndex, i) || { };\r\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\r\n          charsToRender = '';\r\n          actualStyle = nextStyle;\r\n          textLeftOffset += boxWidth;\r\n          boxWidth = 0;\r\n        }\r\n      }\r\n    },\r\n\r\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\r\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\r\n      textBgRects.push(\r\n        '\\t\\t<rect ',\r\n        this._getFillAttributes(color),\r\n        ' x=\"',\r\n        toFixed(left, NUM_FRACTION_DIGITS),\r\n        '\" y=\"',\r\n        toFixed(top, NUM_FRACTION_DIGITS),\r\n        '\" width=\"',\r\n        toFixed(width, NUM_FRACTION_DIGITS),\r\n        '\" height=\"',\r\n        toFixed(height, NUM_FRACTION_DIGITS),\r\n        '\"></rect>\\n');\r\n    },\r\n\r\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\r\n      var line = this._textLines[i],\r\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\r\n          boxWidth = 0,\r\n          boxStart = 0,\r\n          charBox, currentColor,\r\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\r\n        charBox = this.__charBounds[i][j];\r\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n        if (currentColor !== lastColor) {\r\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\r\n            textTopOffset, boxWidth, heightOfLine);\r\n          boxStart = charBox.left;\r\n          boxWidth = charBox.width;\r\n          lastColor = currentColor;\r\n        }\r\n        else {\r\n          boxWidth += charBox.kernedWidth;\r\n        }\r\n      }\r\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\r\n        textTopOffset, boxWidth, heightOfLine);\r\n    },\r\n\r\n    /**\r\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\r\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\r\n     *\r\n     * @private\r\n     * @param {*} value\r\n     * @return {String}\r\n     */\r\n    _getFillAttributes: function(value) {\r\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\r\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\r\n        return 'fill=\"' + value + '\"';\r\n      }\r\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _getSVGLineTopOffset: function(lineIndex) {\r\n      var lineTopOffset = 0, lastHeight = 0;\r\n      for (var j = 0; j < lineIndex; j++) {\r\n        lineTopOffset += this.getHeightOfLine(j);\r\n      }\r\n      lastHeight = this.getHeightOfLine(j);\r\n      return {\r\n        lineTop: lineTopOffset,\r\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns styles-string for svg-export\r\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n     * @return {String}\r\n     */\r\n    getSvgStyles: function(skipShadow) {\r\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\r\n      return svgStyle + ' white-space: pre;';\r\n    },\r\n  });\r\n})();\r\n/* _TO_SVG_END_ */\r\n\r\n\r\n(function(global) {\r\n\r\n  'use strict';\r\n\r\n  var fabric = global.fabric || (global.fabric = {});\r\n\r\n  /**\r\n   * Textbox class, based on IText, allows the user to resize the text rectangle\r\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\r\n   * user can only change width. Height is adjusted automatically based on the\r\n   * wrapping of lines.\r\n   * @class fabric.Textbox\r\n   * @extends fabric.IText\r\n   * @mixes fabric.Observable\r\n   * @return {fabric.Textbox} thisArg\r\n   * @see {@link fabric.Textbox#initialize} for constructor definition\r\n   */\r\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\r\n\r\n    /**\r\n     * Type of an object\r\n     * @type String\r\n     * @default\r\n     */\r\n    type: 'textbox',\r\n\r\n    /**\r\n     * Minimum width of textbox, in pixels.\r\n     * @type Number\r\n     * @default\r\n     */\r\n    minWidth: 20,\r\n\r\n    /**\r\n     * Minimum calculated width of a textbox, in pixels.\r\n     * fixed to 2 so that an empty textbox cannot go to 0\r\n     * and is still selectable without text.\r\n     * @type Number\r\n     * @default\r\n     */\r\n    dynamicMinWidth: 2,\r\n\r\n    /**\r\n     * Cached array of text wrapping.\r\n     * @type Array\r\n     */\r\n    __cachedLines: null,\r\n\r\n    /**\r\n     * Override standard Object class values\r\n     */\r\n    lockScalingFlip: true,\r\n\r\n    /**\r\n     * Override standard Object class values\r\n     * Textbox needs this on false\r\n     */\r\n    noScaleCache: false,\r\n\r\n    /**\r\n     * Properties which when set cause object to change dimensions\r\n     * @type Object\r\n     * @private\r\n     */\r\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\r\n\r\n    /**\r\n     * Use this regular expression to split strings in breakable lines\r\n     * @private\r\n     */\r\n    _wordJoiners: /[ \\t\\r]/,\r\n\r\n    /**\r\n     * Use this boolean property in order to split strings that have no white space concept.\r\n     * this is a cheap way to help with chinese/japanese\r\n     * @type Boolean\r\n     * @since 2.6.0\r\n     */\r\n    splitByGrapheme: false,\r\n\r\n    /**\r\n     * Unlike superclass's version of this function, Textbox does not update\r\n     * its width.\r\n     * @private\r\n     * @override\r\n     */\r\n    initDimensions: function() {\r\n      if (this.__skipDimension) {\r\n        return;\r\n      }\r\n      this.isEditing && this.initDelayedCursor();\r\n      this.clearContextTop();\r\n      this._clearCache();\r\n      // clear dynamicMinWidth as it will be different after we re-wrap line\r\n      this.dynamicMinWidth = 0;\r\n      // wrap lines\r\n      this._styleMap = this._generateStyleMap(this._splitText());\r\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\r\n      if (this.dynamicMinWidth > this.width) {\r\n        this._set('width', this.dynamicMinWidth);\r\n      }\r\n      if (this.textAlign.indexOf('justify') !== -1) {\r\n        // once text is measured we need to make space fatter to make justified text.\r\n        this.enlargeSpaces();\r\n      }\r\n      // clear cache and re-calculate height\r\n      this.height = this.calcTextHeight();\r\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\r\n    },\r\n\r\n    /**\r\n     * Generate an object that translates the style object so that it is\r\n     * broken up by visual lines (new lines and automatic wrapping).\r\n     * The original text styles object is broken up by actual lines (new lines only),\r\n     * which is only sufficient for Text / IText\r\n     * @private\r\n     */\r\n    _generateStyleMap: function(textInfo) {\r\n      var realLineCount     = 0,\r\n          realLineCharCount = 0,\r\n          charCount         = 0,\r\n          map               = {};\r\n\r\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\r\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\r\n          realLineCharCount = 0;\r\n          charCount++;\r\n          realLineCount++;\r\n        }\r\n        else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\r\n          // this case deals with space's that are removed from end of lines when wrapping\r\n          realLineCharCount++;\r\n          charCount++;\r\n        }\r\n\r\n        map[i] = { line: realLineCount, offset: realLineCharCount };\r\n\r\n        charCount += textInfo.graphemeLines[i].length;\r\n        realLineCharCount += textInfo.graphemeLines[i].length;\r\n      }\r\n\r\n      return map;\r\n    },\r\n\r\n    /**\r\n     * Returns true if object has a style property or has it on a specified line\r\n     * @param {Number} lineIndex\r\n     * @return {Boolean}\r\n     */\r\n    styleHas: function(property, lineIndex) {\r\n      if (this._styleMap && !this.isWrapping) {\r\n        var map = this._styleMap[lineIndex];\r\n        if (map) {\r\n          lineIndex = map.line;\r\n        }\r\n      }\r\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\r\n    },\r\n\r\n    /**\r\n     * Returns true if object has no styling or no styling in a line\r\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n     * @return {Boolean}\r\n     */\r\n    isEmptyStyles: function(lineIndex) {\r\n      if (!this.styles) {\r\n        return true;\r\n      }\r\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false,\r\n          map = this._styleMap[lineIndex], mapNextLine = this._styleMap[lineIndex + 1];\r\n      if (map) {\r\n        lineIndex = map.line;\r\n        offset = map.offset;\r\n      }\r\n      if (mapNextLine) {\r\n        nextLineIndex = mapNextLine.line;\r\n        shouldLimit = nextLineIndex === lineIndex;\r\n        nextOffset = mapNextLine.offset;\r\n      }\r\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\r\n      for (var p1 in obj) {\r\n        for (var p2 in obj[p1]) {\r\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            for (var p3 in obj[p1][p2]) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @private\r\n     */\r\n    _getStyleDeclaration: function(lineIndex, charIndex) {\r\n      if (this._styleMap && !this.isWrapping) {\r\n        var map = this._styleMap[lineIndex];\r\n        if (!map) {\r\n          return null;\r\n        }\r\n        lineIndex = map.line;\r\n        charIndex = map.offset + charIndex;\r\n      }\r\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\r\n    },\r\n\r\n    /**\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @param {Object} style\r\n     * @private\r\n     */\r\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\r\n      var map = this._styleMap[lineIndex];\r\n      lineIndex = map.line;\r\n      charIndex = map.offset + charIndex;\r\n\r\n      this.styles[lineIndex][charIndex] = style;\r\n    },\r\n\r\n    /**\r\n     * @param {Number} lineIndex\r\n     * @param {Number} charIndex\r\n     * @private\r\n     */\r\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\r\n      var map = this._styleMap[lineIndex];\r\n      lineIndex = map.line;\r\n      charIndex = map.offset + charIndex;\r\n      delete this.styles[lineIndex][charIndex];\r\n    },\r\n\r\n    /**\r\n     * probably broken need a fix\r\n     * Returns the real style line that correspond to the wrapped lineIndex line\r\n     * Used just to verify if the line does exist or not.\r\n     * @param {Number} lineIndex\r\n     * @returns {Boolean} if the line exists or not\r\n     * @private\r\n     */\r\n    _getLineStyle: function(lineIndex) {\r\n      var map = this._styleMap[lineIndex];\r\n      return !!this.styles[map.line];\r\n    },\r\n\r\n    /**\r\n     * Set the line style to an empty object so that is initialized\r\n     * @param {Number} lineIndex\r\n     * @param {Object} style\r\n     * @private\r\n     */\r\n    _setLineStyle: function(lineIndex) {\r\n      var map = this._styleMap[lineIndex];\r\n      this.styles[map.line] = {};\r\n    },\r\n\r\n    /**\r\n     * Wraps text using the 'width' property of Textbox. First this function\r\n     * splits text on newlines, so we preserve newlines entered by the user.\r\n     * Then it wraps each line using the width of the Textbox by calling\r\n     * _wrapLine().\r\n     * @param {Array} lines The string array of text that is split into lines\r\n     * @param {Number} desiredWidth width you want to wrap to\r\n     * @returns {Array} Array of lines\r\n     */\r\n    _wrapText: function(lines, desiredWidth) {\r\n      var wrapped = [], i;\r\n      this.isWrapping = true;\r\n      for (i = 0; i < lines.length; i++) {\r\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\r\n      }\r\n      this.isWrapping = false;\r\n      return wrapped;\r\n    },\r\n\r\n    /**\r\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\r\n     * it gets called when charBounds are not available yet.\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @param {String} text\r\n     * @param {number} lineIndex\r\n     * @param {number} charOffset\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    _measureWord: function(word, lineIndex, charOffset) {\r\n      var width = 0, prevGrapheme, skipLeft = true;\r\n      charOffset = charOffset || 0;\r\n      for (var i = 0, len = word.length; i < len; i++) {\r\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\r\n        width += box.kernedWidth;\r\n        prevGrapheme = word[i];\r\n      }\r\n      return width;\r\n    },\r\n\r\n    /**\r\n     * Wraps a line of text using the width of the Textbox and a context.\r\n     * @param {Array} line The grapheme array that represent the line\r\n     * @param {Number} lineIndex\r\n     * @param {Number} desiredWidth width you want to wrap the line to\r\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\r\n     * @returns {Array} Array of line(s) into which the given text is wrapped\r\n     * to.\r\n     */\r\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\r\n      var lineWidth = 0,\r\n          splitByGrapheme = this.splitByGrapheme,\r\n          graphemeLines = [],\r\n          line = [],\r\n          // spaces in different languages?\r\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\r\n          word = '',\r\n          offset = 0,\r\n          infix = splitByGrapheme ? '' : ' ',\r\n          wordWidth = 0,\r\n          infixWidth = 0,\r\n          largestWordWidth = 0,\r\n          lineJustStarted = true,\r\n          additionalSpace = this._getWidthOfCharSpacing(),\r\n          reservedSpace = reservedSpace || 0;\r\n      // fix a difference between split and graphemeSplit\r\n      if (words.length === 0) {\r\n        words.push([]);\r\n      }\r\n      desiredWidth -= reservedSpace;\r\n      for (var i = 0; i < words.length; i++) {\r\n        // if using splitByGrapheme words are already in graphemes.\r\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\r\n        wordWidth = this._measureWord(word, lineIndex, offset);\r\n        offset += word.length;\r\n\r\n        lineWidth += infixWidth + wordWidth - additionalSpace;\r\n        if (lineWidth > desiredWidth && !lineJustStarted) {\r\n          graphemeLines.push(line);\r\n          line = [];\r\n          lineWidth = wordWidth;\r\n          lineJustStarted = true;\r\n        }\r\n        else {\r\n          lineWidth += additionalSpace;\r\n        }\r\n\r\n        if (!lineJustStarted && !splitByGrapheme) {\r\n          line.push(infix);\r\n        }\r\n        line = line.concat(word);\r\n\r\n        infixWidth = splitByGrapheme ? 0 : this._measureWord([infix], lineIndex, offset);\r\n        offset++;\r\n        lineJustStarted = false;\r\n        // keep track of largest word\r\n        if (wordWidth > largestWordWidth) {\r\n          largestWordWidth = wordWidth;\r\n        }\r\n      }\r\n\r\n      i && graphemeLines.push(line);\r\n\r\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\r\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\r\n      }\r\n      return graphemeLines;\r\n    },\r\n\r\n    /**\r\n     * Detect if the text line is ended with an hard break\r\n     * text and itext do not have wrapping, return false\r\n     * @param {Number} lineIndex text to split\r\n     * @return {Boolean}\r\n     */\r\n    isEndOfWrapping: function(lineIndex) {\r\n      if (!this._styleMap[lineIndex + 1]) {\r\n        // is last line, return true;\r\n        return true;\r\n      }\r\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\r\n        // this is last line before a line break, return true;\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Detect if a line has a linebreak and so we need to account for it when moving\r\n     * and counting style.\r\n     * @return Number\r\n     */\r\n    missingNewlineOffset: function(lineIndex) {\r\n      if (this.splitByGrapheme) {\r\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\r\n      }\r\n      return 1;\r\n    },\r\n\r\n    /**\r\n    * Gets lines of text to render in the Textbox. This function calculates\r\n    * text wrapping on the fly every time it is called.\r\n    * @param {String} text text to split\r\n    * @returns {Array} Array of lines in the Textbox.\r\n    * @override\r\n    */\r\n    _splitTextIntoLines: function(text) {\r\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\r\n          graphemeLines = this._wrapText(newText.lines, this.width),\r\n          lines = new Array(graphemeLines.length);\r\n      for (var i = 0; i < graphemeLines.length; i++) {\r\n        lines[i] = graphemeLines[i].join('');\r\n      }\r\n      newText.lines = lines;\r\n      newText.graphemeLines = graphemeLines;\r\n      return newText;\r\n    },\r\n\r\n    getMinWidth: function() {\r\n      return Math.max(this.minWidth, this.dynamicMinWidth);\r\n    },\r\n\r\n    _removeExtraneousStyles: function() {\r\n      var linesToKeep = {};\r\n      for (var prop in this._styleMap) {\r\n        if (this._textLines[prop]) {\r\n          linesToKeep[this._styleMap[prop].line] = 1;\r\n        }\r\n      }\r\n      for (var prop in this.styles) {\r\n        if (!linesToKeep[prop]) {\r\n          delete this.styles[prop];\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns object representation of an instance\r\n     * @method toObject\r\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n     * @return {Object} object representation of an instance\r\n     */\r\n    toObject: function(propertiesToInclude) {\r\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns fabric.Textbox instance from an object representation\r\n   * @static\r\n   * @memberOf fabric.Textbox\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\r\n   */\r\n  fabric.Textbox.fromObject = function(object, callback) {\r\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\r\n  };\r\n})(typeof exports !== 'undefined' ? exports : this);\r\n\r\n\r\n(function() {\r\n\r\n  var controlsUtils = fabric.controlsUtils,\r\n      scaleSkewStyleHandler = controlsUtils.scaleSkewCursorStyleHandler,\r\n      scaleStyleHandler = controlsUtils.scaleCursorStyleHandler,\r\n      scalingEqually = controlsUtils.scalingEqually,\r\n      scalingYOrSkewingX = controlsUtils.scalingYOrSkewingX,\r\n      scalingXOrSkewingY = controlsUtils.scalingXOrSkewingY,\r\n      scaleOrSkewActionName = controlsUtils.scaleOrSkewActionName,\r\n      objectControls = fabric.Object.prototype.controls;\r\n\r\n  objectControls.ml = new fabric.Control({\r\n    x: -0.5,\r\n    y: 0,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingXOrSkewingY,\r\n    getActionName: scaleOrSkewActionName,\r\n  });\r\n\r\n  objectControls.mr = new fabric.Control({\r\n    x: 0.5,\r\n    y: 0,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingXOrSkewingY,\r\n    getActionName: scaleOrSkewActionName,\r\n  });\r\n\r\n  objectControls.mb = new fabric.Control({\r\n    x: 0,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingYOrSkewingX,\r\n    getActionName: scaleOrSkewActionName,\r\n  });\r\n\r\n  objectControls.mt = new fabric.Control({\r\n    x: 0,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingYOrSkewingX,\r\n    getActionName: scaleOrSkewActionName,\r\n  });\r\n\r\n  objectControls.tl = new fabric.Control({\r\n    x: -0.5,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually\r\n  });\r\n\r\n  objectControls.tr = new fabric.Control({\r\n    x: 0.5,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually\r\n  });\r\n\r\n  objectControls.bl = new fabric.Control({\r\n    x: -0.5,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually\r\n  });\r\n\r\n  objectControls.br = new fabric.Control({\r\n    x: 0.5,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually\r\n  });\r\n\r\n  objectControls.mtr = new fabric.Control({\r\n    x: 0,\r\n    y: -0.5,\r\n    actionHandler: controlsUtils.rotationWithSnapping,\r\n    cursorStyleHandler: controlsUtils.rotationStyleHandler,\r\n    offsetY: -40,\r\n    withConnection: true,\r\n    actionName: 'rotate',\r\n  });\r\n\r\n  if (fabric.Textbox) {\r\n    // this is breaking the prototype inheritance, no time / ideas to fix it.\r\n    // is important to document that if you want to have all objects to have a\r\n    // specific custom control, you have to add it to Object prototype and to Textbox\r\n    // prototype. The controls are shared as references. So changes to control `tr`\r\n    // can still apply to all objects if needed.\r\n    var textBoxControls = fabric.Textbox.prototype.controls = { };\r\n\r\n    textBoxControls.mtr = objectControls.mtr;\r\n    textBoxControls.tr = objectControls.tr;\r\n    textBoxControls.br = objectControls.br;\r\n    textBoxControls.tl = objectControls.tl;\r\n    textBoxControls.bl = objectControls.bl;\r\n    textBoxControls.mt = objectControls.mt;\r\n    textBoxControls.mb = objectControls.mb;\r\n\r\n    textBoxControls.mr = new fabric.Control({\r\n      x: 0.5,\r\n      y: 0,\r\n      actionHandler: controlsUtils.changeWidth,\r\n      cursorStyleHandler: scaleSkewStyleHandler,\r\n      actionName: 'resizing',\r\n    });\r\n\r\n    textBoxControls.ml = new fabric.Control({\r\n      x: -0.5,\r\n      y: 0,\r\n      actionHandler: controlsUtils.changeWidth,\r\n      cursorStyleHandler: scaleSkewStyleHandler,\r\n      actionName: 'resizing',\r\n    });\r\n  }\r\n})();\r\n\r\n"],
  "mappings": "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",
  "names": ["require_utils", "property", "duration", "fabric", "matrix", "match", "el", "elements", "attr", "prop", "obj", "options", "i", "filters"]
}
