import { createSlice } from "@reduxjs/toolkit";
import { jwtDecode } from "jwt-decode";

const initialState = {
  user: null,
  token: null,
  isLoading: false,
  roleData: null,
  img: null, // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
};

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    loginSuccess: (state, action) => {
      console.log("üîπ Redux setUser:", action.payload);

      if (!action.payload) {
        console.error("‚ùå No token provided!");
        return;
      }

      try {
        const decodedToken = jwtDecode(action.payload);
        console.log("üîπ Decoded token:", decodedToken); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Token

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
        if (decodedToken.exp * 1000 < Date.now()) {
          console.error("‚ùå Token expired");
          return;
        }

        state.token = action.payload; // ‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ä‡πá‡∏Ñ Token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß
        // localStorage.setItem("token", action.payload);

        if (decodedToken && decodedToken.id) {
          state.user = {
            _id: decodedToken.id,
            name: decodedToken.name,
            email: decodedToken.email,
            role: decodedToken.role,
          };
          state.roleData = decodedToken.roleData || null;
          state.img = decodedToken.img || null; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
        } else {
          console.error("‚ùå Invalid token structure");
        }
      } catch (error) {
        console.error("‚ùå Error decoding token:", error);
      }
    },
   
       
    logout: (state) => {
      
      state.user = null;
      state.token = null;
      state.roleData = null;
      state.img = null; // ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠ logout
      localStorage.removeItem("token");
      localStorage.removeItem("teacherId");
      // return { ...initialState };
    },
  
  },
});

export const { loginSuccess,updateUserProfile, logout } = authSlice.actions;
export default authSlice.reducer;
